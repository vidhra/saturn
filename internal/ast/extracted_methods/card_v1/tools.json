{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-apps-card\\google\\apps\\card_v1\\types\\card.py": [
    {
      "type": "request_class",
      "name": "Card",
      "docstring": "A card interface displayed in a Google Chat message or Google\nWorkspace Add-on.\n\nCards support a defined layout, interactive UI elements like\nbuttons, and rich media like images. Use cards to present detailed\ninformation, gather information from users, and guide users to take\na next step.\n\n`Card builder <https://addons.gsuite.google.com/uikit/builder>`__\n\nTo learn how to build cards, see the following documentation:\n\n-  For Google Chat apps, see `Design the components of a card or\n   dialog <https://developers.google.com/workspace/chat/design-components-card-dialog>`__.\n-  For Google Workspace Add-ons, see `Card-based\n   interfaces <https://developers.google.com/apps-script/add-ons/concepts/cards>`__.\n\n**Example: Card message for a Google Chat app**\n\n|Example contact card|\n\nTo create the sample card message in Google Chat, use the following\nJSON:\n\n::\n\n   {\n     \"cardsV2\": [\n       {\n         \"cardId\": \"unique-card-id\",\n         \"card\": {\n           \"header\": {\n              \"title\": \"Sasha\",\n              \"su",
      "attributes": {
        "header": {
          "type": "google.apps.card_v1.types.Card.CardHeader",
          "description": "The header of the card. A header usually contains a leading image and a title. Headers always appear at the top of a card."
        },
        "sections": {
          "type": "MutableSequence[google.apps.card_v1.types.Card.Section]",
          "description": "Contains a collection of widgets. Each section has its own, optional header. Sections are visually separated by a line divider. For an example in Google Chat apps, see `Define a section of a card <https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card>`__."
        },
        "section_divider_style": {
          "type": "google.apps.card_v1.types.Card.DividerStyle",
          "description": "The divider style between sections."
        },
        "card_actions": {
          "type": "MutableSequence[google.apps.card_v1.types.Card.CardAction]",
          "description": "The card's actions. Actions are added to the card's toolbar menu.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:  For example, the following JSON constructs a card action menu with ``Settings`` and ``Send Feedback`` options:  ::  \"card_actions\": [ { \"actionLabel\": \"Settings\", \"onClick\": { \"action\": { \"functionName\": \"goToView\", \"parameters\": [ { \"key\": \"viewType\", \"value\": \"SETTING\" } ], \"loadIndicator\": \"LoadIndicator.SPINNER\" } } }, { \"actionLabel\": \"Send Feedback\", \"onClick\": { \"openLink\": { \"url\": \"https://example.com/feedback\" } } } ]"
        },
        "name": {
          "type": "str",
          "description": "Name of the card. Used as a card identifier in card navigation.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        },
        "fixed_footer": {
          "type": "google.apps.card_v1.types.Card.CardFixedFooter",
          "description": "The fixed footer shown at the bottom of this card.  Setting ``fixedFooter`` without specifying a ``primaryButton`` or a ``secondaryButton`` causes an error. For Chat apps, you can use fixed footers in `dialogs <https://developers.google.com/workspace/chat/dialogs>`__, but not `card messages <https://developers.google.com/workspace/chat/create-messages#create>`__.  `Google Workspace Add-ons and Chat apps <https://developers.google.com/workspace/extend>`__:"
        },
        "display_style": {
          "type": "google.apps.card_v1.types.Card.DisplayStyle",
          "description": "In Google Workspace Add-ons, sets the display properties of the ``peekCardHeader``.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        },
        "peek_card_header": {
          "type": "google.apps.card_v1.types.Card.CardHeader",
          "description": "When displaying contextual content, the peek card header acts as a placeholder so that the user can navigate forward between the homepage cards and the contextual cards.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Widget",
      "docstring": "Each card is made up of widgets.\n\nA widget is a composite object that can represent one of text,\nimages, buttons, and other object types.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    text_paragraph (google.apps.card_v1.types.TextParagraph):\n        Displays a text paragraph. Supports simple HTML formatted\n        text. For more information about formatting text, see\n        `Formatting text in Google Chat\n        apps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__\n        and `Formatting text in Google Workspace\n        Add-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__.\n\n        For example, the following JSON creates a bolded text:\n\n        ::\n\n    ",
      "attributes": {
        "text_paragraph": {
          "type": "google.apps.card_v1.types.TextParagraph",
          "description": "Displays a text paragraph. Supports simple HTML formatted text. For more information about formatting text, see `Formatting text in Google Chat apps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__ and `Formatting text in Google Workspace Add-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__.  For example, the following JSON creates a bolded text:  ::  \"textParagraph\": { \"text\": \"  <b>bold text</b>\" }  This field is a member of `oneof`_ ``data``."
        },
        "image": {
          "type": "google.apps.card_v1.types.Image",
          "description": "Displays an image.  For example, the following JSON creates an image with alternative text:  ::  \"image\": { \"imageUrl\": \"https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png\", \"altText\": \"Chat app avatar\" }  This field is a member of `oneof`_ ``data``."
        },
        "decorated_text": {
          "type": "google.apps.card_v1.types.DecoratedText",
          "description": "Displays a decorated text item.  For example, the following JSON creates a decorated text widget showing email address:  ::  \"decoratedText\": { \"icon\": { \"knownIcon\": \"EMAIL\" }, \"topLabel\": \"Email Address\", \"text\": \"sasha@example.com\", \"bottomLabel\": \"This is a new Email address!\", \"switchControl\": { \"name\": \"has_send_welcome_email_to_sasha\", \"selected\": false, \"controlType\": \"CHECKBOX\" } }  This field is a member of `oneof`_ ``data``."
        },
        "button_list": {
          "type": "google.apps.card_v1.types.ButtonList",
          "description": "A list of buttons.  For example, the following JSON creates two buttons. The first is a blue text button and the second is an image button that opens a link:  ::  \"buttonList\": { \"buttons\": [ { \"text\": \"Edit\", \"color\": { \"red\": 0, \"green\": 0, \"blue\": 1, \"alpha\": 1 }, \"disabled\": true, }, { \"icon\": { \"knownIcon\": \"INVITE\", \"altText\": \"check calendar\" }, \"onClick\": { \"openLink\": { \"url\": \"https://example.com/calendar\" } } } ] }  This field is a member of `oneof`_ ``data``."
        },
        "text_input": {
          "type": "google.apps.card_v1.types.TextInput",
          "description": "Displays a text box that users can type into.  For example, the following JSON creates a text input for an email address:  ::  \"textInput\": { \"name\": \"mailing_address\", \"label\": \"Mailing Address\" }  As another example, the following JSON creates a text input for a programming language with static suggestions:  ::  \"textInput\": { \"name\": \"preferred_programing_language\", \"label\": \"Preferred Language\", \"initialSuggestions\": { \"items\": [ { \"text\": \"C++\" }, { \"text\": \"Java\" }, { \"text\": \"JavaScript\" }, { \"text\": \"Python\" } ] } }  This field is a member of `oneof`_ ``data``."
        },
        "selection_input": {
          "type": "google.apps.card_v1.types.SelectionInput",
          "description": "Displays a selection control that lets users select items. Selection controls can be checkboxes, radio buttons, switches, or dropdown menus.  For example, the following JSON creates a dropdown menu that lets users choose a size:  ::  \"selectionInput\": { \"name\": \"size\", \"label\": \"Size\" \"type\": \"DROPDOWN\", \"items\": [ { \"text\": \"S\", \"value\": \"small\", \"selected\": false }, { \"text\": \"M\", \"value\": \"medium\", \"selected\": true }, { \"text\": \"L\", \"value\": \"large\", \"selected\": false }, { \"text\": \"XL\", \"value\": \"extra_large\", \"selected\": false } ] }  This field is a member of `oneof`_ ``data``."
        },
        "date_time_picker": {
          "type": "google.apps.card_v1.types.DateTimePicker",
          "description": "Displays a widget that lets users input a date, time, or date and time.  For example, the following JSON creates a date time picker to schedule an appointment:  ::  \"dateTimePicker\": { \"name\": \"appointment_time\", \"label\": \"Book your appointment at:\", \"type\": \"DATE_AND_TIME\", \"valueMsEpoch\": \"796435200000\" }  This field is a member of `oneof`_ ``data``."
        },
        "divider": {
          "type": "google.apps.card_v1.types.Divider",
          "description": "Displays a horizontal line divider between widgets.  For example, the following JSON creates a divider:  ::  \"divider\": { }  This field is a member of `oneof`_ ``data``."
        },
        "grid": {
          "type": "google.apps.card_v1.types.Grid",
          "description": "Displays a grid with a collection of items.  A grid supports any number of columns and items. The number of rows is determined by the upper bounds of the number items divided by the number of columns. A grid with 10 items and 2 columns has 5 rows. A grid with 11 items and 2 columns has 6 rows.  `Google Workspace Add-ons and Chat apps <https://developers.google.com/workspace/extend>`__:  For example, the following JSON creates a 2 column grid with a single item:  ::  \"grid\": { \"title\": \"A fine collection of items\", \"columnCount\": 2, \"borderStyle\": { \"type\": \"STROKE\", \"cornerRadius\": 4 }, \"items\": [ { \"image\": { \"imageUri\": \"https://www.example.com/image.png\", \"cropStyle\": { \"type\": \"SQUARE\" }, \"borderStyle\": { \"type\": \"STROKE\" } }, \"title\": \"An item\", \"textAlignment\": \"CENTER\" } ], \"onClick\": { \"openLink\": { \"url\": \"https://www.example.com\" } } }  This field is a member of `oneof`_ ``data``."
        },
        "columns": {
          "type": "google.apps.card_v1.types.Columns",
          "description": "Displays up to 2 columns.  To include more than 2 columns, or to use rows, use the ``Grid`` widget.  For example, the following JSON creates 2 columns that each contain text paragraphs:  ::  \"columns\": { \"columnItems\": [ { \"horizontalSizeStyle\": \"FILL_AVAILABLE_SPACE\", \"horizontalAlignment\": \"CENTER\", \"verticalAlignment\": \"CENTER\", \"widgets\": [ { \"textParagraph\": { \"text\": \"First column text paragraph\" } } ] }, { \"horizontalSizeStyle\": \"FILL_AVAILABLE_SPACE\", \"horizontalAlignment\": \"CENTER\", \"verticalAlignment\": \"CENTER\", \"widgets\": [ { \"textParagraph\": { \"text\": \"Second column text paragraph\" } } ] } ] }  This field is a member of `oneof`_ ``data``."
        },
        "horizontal_alignment": {
          "type": "google.apps.card_v1.types.Widget.HorizontalAlignment",
          "description": "Specifies whether widgets align to the left, right, or center of a column."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextParagraph",
      "docstring": "A paragraph of text that supports formatting. For an example in\nGoogle Chat apps, see `Add a paragraph of formatted\ntext <https://developers.google.com/workspace/chat/add-text-image-card-dialog#add_a_paragraph_of_formatted_text>`__.\nFor more information about formatting text, see `Formatting text in\nGoogle Chat\napps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__\nand `Formatting text in Google Workspace\nAdd-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    text (str):\n        The text that's shown in the widget.",
      "attributes": {
        "text": {
          "type": "str",
          "description": "The text that's shown in the widget."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Image",
      "docstring": "An image that is specified by a URL and can have an ``onClick``\naction. For an example, see `Add an\nimage <https://developers.google.com/workspace/chat/add-text-image-card-dialog#add_an_image>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    image_url (str):\n        The HTTPS URL that hosts the image.\n\n        For example:\n\n        ::\n\n           https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png\n    on_click (google.apps.card_v1.types.OnClick):\n        When a user clicks the image, the click\n        triggers this action.\n    alt_text (str):\n        The alternative text of this image that's\n        used for accessibility.",
      "attributes": {
        "image_url": {
          "type": "str",
          "description": "The HTTPS URL that hosts the image.  For example:  ::  https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png"
        },
        "on_click": {
          "type": "google.apps.card_v1.types.OnClick",
          "description": "When a user clicks the image, the click triggers this action."
        },
        "alt_text": {
          "type": "str",
          "description": "The alternative text of this image that's used for accessibility."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Divider",
      "docstring": "Displays a divider between widgets as a horizontal line. For an\nexample in Google Chat apps, see `Add a horizontal divider between\nwidgets <https://developers.google.com/workspace/chat/format-structure-card-dialog#add_a_horizontal_divider_between_widgets>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nFor example, the following JSON creates a divider:\n\n::\n\n   \"divider\": {}",
      "attributes": {}
    },
    {
      "type": "request_class",
      "name": "DecoratedText",
      "docstring": "A widget that displays text with optional decorations such as a\nlabel above or below the text, an icon in front of the text, a\nselection widget, or a button after the text. For an example in\nGoogle Chat apps, see `Display text with decorative\ntext <https://developers.google.com/workspace/chat/add-text-image-card-dialog#display_text_with_decorative_elements>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    icon (google.apps.card_v1.types.Icon):\n        Deprecated in favor of ``startIcon``.\n    start_icon (google.apps.card_v1.types.Icon):\n        The icon displayed in front of the text.\n    top_label (str):\n        The text that appears ab",
      "attributes": {
        "icon": {
          "type": "google.apps.card_v1.types.Icon",
          "description": "Deprecated in favor of ``startIcon``."
        },
        "start_icon": {
          "type": "google.apps.card_v1.types.Icon",
          "description": "The icon displayed in front of the text."
        },
        "top_label": {
          "type": "str",
          "description": "The text that appears above ``text``. Always truncates."
        },
        "text": {
          "type": "str",
          "description": "Required. The primary text.  Supports simple formatting. For more information about formatting text, see `Formatting text in Google Chat apps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__ and `Formatting text in Google Workspace Add-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__."
        },
        "wrap_text": {
          "type": "bool",
          "description": "The wrap text setting. If ``true``, the text wraps and displays on multiple lines. Otherwise, the text is truncated.  Only applies to ``text``, not ``topLabel`` and ``bottomLabel``."
        },
        "bottom_label": {
          "type": "str",
          "description": "The text that appears below ``text``. Always wraps."
        },
        "on_click": {
          "type": "google.apps.card_v1.types.OnClick",
          "description": "This action is triggered when users click ``topLabel`` or ``bottomLabel``."
        },
        "button": {
          "type": "google.apps.card_v1.types.Button",
          "description": "A button that a user can click to trigger an action.  This field is a member of `oneof`_ ``control``."
        },
        "switch_control": {
          "type": "google.apps.card_v1.types.DecoratedText.SwitchControl",
          "description": "A switch widget that a user can click to change its state and trigger an action.  This field is a member of `oneof`_ ``control``."
        },
        "end_icon": {
          "type": "google.apps.card_v1.types.Icon",
          "description": "An icon displayed after the text.  Supports `built-in <https://developers.google.com/workspace/chat/format-messages#builtinicons>`__ and `custom <https://developers.google.com/workspace/chat/format-messages#customicons>`__ icons.  This field is a member of `oneof`_ ``control``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextInput",
      "docstring": "A field in which users can enter text. Supports suggestions and\non-change actions. For an example in Google Chat apps, see `Add a\nfield in which a user can enter\ntext <https://developers.google.com/workspace/chat/design-interactive-card-dialog#add_a_field_in_which_a_user_can_enter_text>`__.\n\nChat apps receive and can process the value of entered text during\nform input events. For details about working with form inputs, see\n`Receive form\ndata <https://developers.google.com/workspace/chat/read-form-data>`__.\n\nWhen you need to collect undefined or abstract data from users, use\na text input. To collect defined or enumerated data from users, use\nthe [SelectionInput][google.apps.card.v1.SelectionInput] widget.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    name (str):\n        The name by which the text input is identified in a form\n        input event.\n\n        For details about working with form inputs, see `Receive\n        form\n        data <https://",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name by which the text input is identified in a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "label": {
          "type": "str",
          "description": "The text that appears above the text input field in the user interface.  Specify text that helps the user enter the information your app needs. For example, if you are asking someone's name, but specifically need their surname, write ``surname`` instead of ``name``.  Required if ``hintText`` is unspecified. Otherwise, optional."
        },
        "hint_text": {
          "type": "str",
          "description": "Text that appears below the text input field meant to assist users by prompting them to enter a certain value. This text is always visible.  Required if ``label`` is unspecified. Otherwise, optional."
        },
        "value": {
          "type": "str",
          "description": "The value entered by a user, returned as part of a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "type_": {
          "type": "google.apps.card_v1.types.TextInput.Type",
          "description": "How a text input field appears in the user interface. For example, whether the field is single or multi-line."
        },
        "on_change_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "What to do when a change occurs in the text input field. For example, a user adding to the field or deleting text.  Examples of actions to take include running a custom function or opening a `dialog <https://developers.google.com/workspace/chat/dialogs>`__ in Google Chat."
        },
        "initial_suggestions": {
          "type": "google.apps.card_v1.types.Suggestions",
          "description": "Suggested values that users can enter. These values appear when users click inside the text input field. As users type, the suggested values dynamically filter to match what the users have typed.  For example, a text input field for programming language might suggest Java, JavaScript, Python, and C++. When users start typing ``Jav``, the list of suggestions filters to show just ``Java`` and ``JavaScript``.  Suggested values help guide users to enter values that your app can make sense of. When referring to JavaScript, some users might enter ``javascript`` and others ``java script``. Suggesting ``JavaScript`` can standardize how users interact with your app.  When specified, ``TextInput.type`` is always ``SINGLE_LINE``, even if it's set to ``MULTIPLE_LINE``.  `Google Workspace Add-ons and Chat apps <https://developers.google.com/workspace/extend>`__:"
        },
        "auto_complete_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "Optional. Specify what action to take when the text input field provides suggestions to users who interact with it.  If unspecified, the suggestions are set by ``initialSuggestions`` and are processed by the client.  If specified, the app takes the action specified here, such as running a custom function.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        },
        "placeholder_text": {
          "type": "str",
          "description": "Text that appears in the text input field when the field is empty. Use this text to prompt users to enter a value. For example, ``Enter a number from 0 to 100``.  `Google Chat apps <https://developers.google.com/workspace/chat>`__:"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Suggestions",
      "docstring": "Suggested values that users can enter. These values appear when\nusers click inside the text input field. As users type, the\nsuggested values dynamically filter to match what the users have\ntyped.\n\nFor example, a text input field for programming language might\nsuggest Java, JavaScript, Python, and C++. When users start typing\n``Jav``, the list of suggestions filters to show ``Java`` and\n``JavaScript``.\n\nSuggested values help guide users to enter values that your app can\nmake sense of. When referring to JavaScript, some users might enter\n``javascript`` and others ``java script``. Suggesting ``JavaScript``\ncan standardize how users interact with your app.\n\nWhen specified, ``TextInput.type`` is always ``SINGLE_LINE``, even\nif it's set to ``MULTIPLE_LINE``.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    items (MutableSequence[google.apps.card_v1.types.Suggestions.SuggestionItem]):\n        A list of suggestions used for autocomplete\n        recommendat",
      "attributes": {
        "items": {
          "type": "MutableSequence[google.apps.card_v1.types.Suggestions.SuggestionItem]",
          "description": "A list of suggestions used for autocomplete recommendations in text input fields."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ButtonList",
      "docstring": "A list of buttons layed out horizontally. For an example in Google\nChat apps, see `Add a\nbutton <https://developers.google.com/workspace/chat/design-interactive-card-dialog#add_a_button>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    buttons (MutableSequence[google.apps.card_v1.types.Button]):\n        An array of buttons.",
      "attributes": {
        "buttons": {
          "type": "MutableSequence[google.apps.card_v1.types.Button]",
          "description": "An array of buttons."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SelectionInput",
      "docstring": "A widget that creates one or more UI items that users can select.\nFor example, a dropdown menu or checkboxes. You can use this widget\nto collect data that can be predicted or enumerated. For an example\nin Google Chat apps, see `Add selectable UI\nelements </workspace/chat/design-interactive-card-dialog#add_selectable_ui_elements>`__.\n\nChat apps can process the value of items that users select or input.\nFor details about working with form inputs, see `Receive form\ndata <https://developers.google.com/workspace/chat/read-form-data>`__.\n\nTo collect undefined or abstract data from users, use the\n[TextInput][google.apps.card.v1.TextInput] widget.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#on",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name that identifies the selection input in a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "label": {
          "type": "str",
          "description": "The text that appears above the selection input field in the user interface.  Specify text that helps the user enter the information your app needs. For example, if users are selecting the urgency of a work ticket from a drop-down menu, the label might be \"Urgency\" or \"Select urgency\"."
        },
        "type_": {
          "type": "google.apps.card_v1.types.SelectionInput.SelectionType",
          "description": "The type of items that are displayed to users in a ``SelectionInput`` widget. Selection types support different types of interactions. For example, users can select one or more checkboxes, but they can only select one value from a dropdown menu."
        },
        "items": {
          "type": "MutableSequence[google.apps.card_v1.types.SelectionInput.SelectionItem]",
          "description": "An array of selectable items. For example, an array of radio buttons or checkboxes. Supports up to 100 items."
        },
        "on_change_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "If specified, the form is submitted when the selection changes. If not specified, you must specify a separate button that submits the form.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "multi_select_max_selected_items": {
          "type": "int",
          "description": "For multiselect menus, the maximum number of items that a user can select. Minimum value is 1 item. If unspecified, defaults to 3 items."
        },
        "multi_select_min_query_length": {
          "type": "int",
          "description": "For multiselect menus, the number of text characters that a user inputs before the app queries autocomplete and displays suggested items in the menu.  If unspecified, defaults to 0 characters for static data sources and 3 characters for external data sources."
        },
        "external_data_source": {
          "type": "google.apps.card_v1.types.Action",
          "description": "An external data source, such as a relational data base.  This field is a member of `oneof`_ ``multi_select_data_source``."
        },
        "platform_data_source": {
          "type": "google.apps.card_v1.types.SelectionInput.PlatformDataSource",
          "description": "A data source from Google Workspace.  This field is a member of `oneof`_ ``multi_select_data_source``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DateTimePicker",
      "docstring": "Lets users input a date, a time, or both a date and a time. For an\nexample in Google Chat apps, see `Let a user pick a date and\ntime <https://developers.google.com/workspace/chat/design-interactive-card-dialog#let_a_user_pick_a_date_and_time>`__.\n\nUsers can input text or use the picker to select dates and times. If\nusers input an invalid date or time, the picker shows an error that\nprompts users to input the information correctly.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    name (str):\n        The name by which the ``DateTimePicker`` is identified in a\n        form input event.\n\n        For details about working with form inputs, see `Receive\n        form\n        data <https://developers.google.com/workspace/chat/read-form-data>`__.\n    label (str):\n        The text that prompts users to input a date, a time, or a\n        date and time. For example, if users are scheduling an\n        appointment, use a label such as ``Appointment date`` or\n   ",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name by which the ``DateTimePicker`` is identified in a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "label": {
          "type": "str",
          "description": "The text that prompts users to input a date, a time, or a date and time. For example, if users are scheduling an appointment, use a label such as ``Appointment date`` or ``Appointment date and time``."
        },
        "type_": {
          "type": "google.apps.card_v1.types.DateTimePicker.DateTimePickerType",
          "description": "Whether the widget supports inputting a date, a time, or the date and time."
        },
        "value_ms_epoch": {
          "type": "int",
          "description": "The default value displayed in the widget, in milliseconds since `Unix epoch time <https://en.wikipedia.org/wiki/Unix_time>`__.  Specify the value based on the type of picker (``DateTimePickerType``):  -  ``DATE_AND_TIME``: a calendar date and time in UTC. For example, to represent January 1, 2023 at 12:00 PM UTC, use ``1672574400000``. -  ``DATE_ONLY``: a calendar date at 00:00:00 UTC. For example, to represent January 1, 2023, use ``1672531200000``. -  ``TIME_ONLY``: a time in UTC. For example, to represent 12:00 PM, use ``43200000`` (or ``12 * 60 * 60 * 1000``)."
        },
        "timezone_offset_date": {
          "type": "int",
          "description": "The number representing the time zone offset from UTC, in minutes. If set, the ``value_ms_epoch`` is displayed in the specified time zone. If unset, the value defaults to the user's time zone setting."
        },
        "on_change_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "Triggered when the user clicks **Save** or **Clear** from the ``DateTimePicker`` interface."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Button",
      "docstring": "A text, icon, or text and icon button that users can click. For an\nexample in Google Chat apps, see `Add a\nbutton <https://developers.google.com/workspace/chat/design-interactive-card-dialog#add_a_button>`__.\n\nTo make an image a clickable button, specify an\n[``Image``][google.apps.card.v1.Image] (not an\n[``ImageComponent``][google.apps.card.v1.ImageComponent]) and set an\n``onClick`` action.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    text (str):\n        The text displayed inside the button.\n    icon (google.apps.card_v1.types.Icon):\n        The icon image. If both ``icon`` and ``text`` are set, then\n        the icon appears before the text.\n    color (google.type.color_pb2.Color):\n        If set, the button is filled with a solid background color\n        and the font color changes to maintain contrast with the\n        background color. For example, setting a blue background\n        likely results in white text.\n\n        If unset, the image bac",
      "attributes": {
        "text": {
          "type": "str",
          "description": "The text displayed inside the button."
        },
        "icon": {
          "type": "google.apps.card_v1.types.Icon",
          "description": "The icon image. If both ``icon`` and ``text`` are set, then the icon appears before the text."
        },
        "color": {
          "type": "google.type.color_pb2.Color",
          "description": "If set, the button is filled with a solid background color and the font color changes to maintain contrast with the background color. For example, setting a blue background likely results in white text.  If unset, the image background is white and the font color is blue.  For red, green, and blue, the value of each field is a ``float`` number that you can express in either of two ways: as a number between 0 and 255 divided by 255 (153/255), or as a value between 0 and 1 (0.6). 0 represents the absence of a color and 1 or 255/255 represent the full presence of that color on the RGB scale.  Optionally set ``alpha``, which sets a level of transparency using this equation:  ::  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  For ``alpha``, a value of ``1`` corresponds with a solid color, and a value of ``0`` corresponds with a completely transparent color.  For example, the following color represents a half transparent red:  ::  \"color\": { \"red\": 1, \"green\": 0, \"blue\": 0, \"alpha\": 0.5 }"
        },
        "on_click": {
          "type": "google.apps.card_v1.types.OnClick",
          "description": "Required. The action to perform when a user clicks the button, such as opening a hyperlink or running a custom function."
        },
        "disabled": {
          "type": "bool",
          "description": "If ``true``, the button is displayed in an inactive state and doesn't respond to user actions."
        },
        "alt_text": {
          "type": "str",
          "description": "The alternative text that's used for accessibility. Set descriptive text that lets users know what the button does. For example, if a button opens a hyperlink, you might write: \"Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/workspace/chat\"."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Icon",
      "docstring": "An icon displayed in a widget on a card. For an example in Google\nChat apps, see `Add an\nicon <https://developers.google.com/workspace/chat/add-text-image-card-dialog#add_an_icon>`__.\n\nSupports\n`built-in <https://developers.google.com/workspace/chat/format-messages#builtinicons>`__\nand\n`custom <https://developers.google.com/workspace/chat/format-messages#customicons>`__\nicons.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    known_icon (str):\n        Display one of the built-in icons provided by Google\n        Workspace.\n\n        For example, to display an airplane icon, specify\n        ``AIRPLANE``. For a bus, specify ``BUS``.\n\n        For ",
      "attributes": {
        "known_icon": {
          "type": "str",
          "description": "Display one of the built-in icons provided by Google Workspace.  For example, to display an airplane icon, specify ``AIRPLANE``. For a bus, specify ``BUS``.  For a full list of supported icons, see `built-in icons <https://developers.google.com/workspace/chat/format-messages#builtinicons>`__.  This field is a member of `oneof`_ ``icons``."
        },
        "icon_url": {
          "type": "str",
          "description": "Display a custom icon hosted at an HTTPS URL.  For example:  ::  \"iconUrl\": \"https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png\"  Supported file types include ``.png`` and ``.jpg``.  This field is a member of `oneof`_ ``icons``."
        },
        "material_icon": {
          "type": "google.apps.card_v1.types.MaterialIcon",
          "description": "Display one of the `Google Material Icons <https://fonts.google.com/icons>`__.  For example, to display a `checkbox icon <https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Acheck_box%3AFILL%400%3Bwght%40400%3BGRAD%400%3Bopsz%4048>`__, use  ::  \"material_icon\": { \"name\": \"check_box\" }  `Google Chat apps <https://developers.google.com/workspace/chat>`__:  This field is a member of `oneof`_ ``icons``."
        },
        "alt_text": {
          "type": "str",
          "description": "Optional. A description of the icon used for accessibility. If unspecified, the default value ``Button`` is provided. As a best practice, you should set a helpful description for what the icon displays, and if applicable, what it does. For example, ``A user's account portrait``, or ``Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/workspace/chat``.  If the icon is set in a [``Button``][google.apps.card.v1.Button], the ``altText`` appears as helper text when the user hovers over the button. However, if the button also sets ``text``, the icon's ``altText`` is ignored."
        },
        "image_type": {
          "type": "google.apps.card_v1.types.Widget.ImageType",
          "description": "The crop style applied to the image. In some cases, applying a ``CIRCLE`` crop causes the image to be drawn larger than a built-in icon."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MaterialIcon",
      "docstring": "A `Google Material Icon <https://fonts.google.com/icons>`__, which\nincludes over 2500+ options.\n\nFor example, to display a `checkbox\nicon <https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Acheck_box%3AFILL%400%3Bwght%40400%3BGRAD%400%3Bopsz%4048>`__\nwith customized weight and grade, write the following:\n\n::\n\n   {\n     \"name\": \"check_box\",\n     \"fill\": true,\n     \"weight\": 300,\n     \"grade\": -25\n   }\n\n`Google Chat apps <https://developers.google.com/workspace/chat>`__:\n\nAttributes:\n    name (str):\n        The icon name defined in the `Google Material\n        Icon <https://fonts.google.com/icons>`__, for example,\n        ``check_box``. Any invalid names are abandoned and replaced\n        with empty string and results in the icon failing to render.\n    fill (bool):\n        Whether the icon renders as filled. Default value is false.\n\n        To preview different icon settings, go to `Google Font\n        Icons <https://fonts.google.com/icons>`__ and adjust the\n        settings under **Customi",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The icon name defined in the `Google Material Icon <https://fonts.google.com/icons>`__, for example, ``check_box``. Any invalid names are abandoned and replaced with empty string and results in the icon failing to render."
        },
        "fill": {
          "type": "bool",
          "description": "Whether the icon renders as filled. Default value is false.  To preview different icon settings, go to `Google Font Icons <https://fonts.google.com/icons>`__ and adjust the settings under **Customize**."
        },
        "weight": {
          "type": "int",
          "description": "The stroke weight of the icon. Choose from {100, 200, 300, 400, 500, 600, 700}. If absent, default value is 400. If any other value is specified, the default value is used.  To preview different icon settings, go to `Google Font Icons <https://fonts.google.com/icons>`__ and adjust the settings under **Customize**."
        },
        "grade": {
          "type": "int",
          "description": "Weight and grade affect a symbol\u2019s thickness. Adjustments to grade are more granular than adjustments to weight and have a small impact on the size of the symbol. Choose from {-25, 0, 200}. If absent, default value is 0. If any other value is specified, the default value is used.  To preview different icon settings, go to `Google Font Icons <https://fonts.google.com/icons>`__ and adjust the settings under **Customize**."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageCropStyle",
      "docstring": "Represents the crop style applied to an image.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nFor example, here's how to apply a 16:9 aspect ratio:\n\n::\n\n   cropStyle {\n    \"type\": \"RECTANGLE_CUSTOM\",\n    \"aspectRatio\": 16/9\n   }\n\nAttributes:\n    type_ (google.apps.card_v1.types.ImageCropStyle.ImageCropType):\n        The crop type.\n    aspect_ratio (float):\n        The aspect ratio to use if the crop type is\n        ``RECTANGLE_CUSTOM``.\n\n        For example, here's how to apply a 16:9 aspect ratio:\n\n        ::\n\n           cropStyle {\n            \"type\": \"RECTANGLE_CUSTOM\",\n            \"aspectRatio\": 16/9\n           }",
      "attributes": {
        "type_": {
          "type": "google.apps.card_v1.types.ImageCropStyle.ImageCropType",
          "description": "The crop type."
        },
        "aspect_ratio": {
          "type": "float",
          "description": "The aspect ratio to use if the crop type is ``RECTANGLE_CUSTOM``.  For example, here's how to apply a 16:9 aspect ratio:  ::  cropStyle { \"type\": \"RECTANGLE_CUSTOM\", \"aspectRatio\": 16/9 }"
        }
      }
    },
    {
      "type": "request_class",
      "name": "BorderStyle",
      "docstring": "The style options for the border of a card or widget, including the\nborder type and color.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    type_ (google.apps.card_v1.types.BorderStyle.BorderType):\n        The border type.\n    stroke_color (google.type.color_pb2.Color):\n        The colors to use when the type is ``BORDER_TYPE_STROKE``.\n    corner_radius (int):\n        The corner radius for the border.",
      "attributes": {
        "type_": {
          "type": "google.apps.card_v1.types.BorderStyle.BorderType",
          "description": "The border type."
        },
        "stroke_color": {
          "type": "google.type.color_pb2.Color",
          "description": "The colors to use when the type is ``BORDER_TYPE_STROKE``."
        },
        "corner_radius": {
          "type": "int",
          "description": "The corner radius for the border."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageComponent",
      "docstring": "Represents an image.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    image_uri (str):\n        The image URL.\n    alt_text (str):\n        The accessibility label for the image.\n    crop_style (google.apps.card_v1.types.ImageCropStyle):\n        The crop style to apply to the image.\n    border_style (google.apps.card_v1.types.BorderStyle):\n        The border style to apply to the image.",
      "attributes": {
        "image_uri": {
          "type": "str",
          "description": "The image URL."
        },
        "alt_text": {
          "type": "str",
          "description": "The accessibility label for the image."
        },
        "crop_style": {
          "type": "google.apps.card_v1.types.ImageCropStyle",
          "description": "The crop style to apply to the image."
        },
        "border_style": {
          "type": "google.apps.card_v1.types.BorderStyle",
          "description": "The border style to apply to the image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Grid",
      "docstring": "Displays a grid with a collection of items. Items can only include\ntext or images. For responsive columns, or to include more than text\nor images, use [``Columns``][google.apps.card.v1.Columns]. For an\nexample in Google Chat apps, see `Display a Grid with a collection\nof\nitems <https://developers.google.com/workspace/chat/format-structure-card-dialog#display_a_grid_with_a_collection_of_items>`__.\n\nA grid supports any number of columns and items. The number of rows\nis determined by items divided by columns. A grid with 10 items and\n2 columns has 5 rows. A grid with 11 items and 2 columns has 6 rows.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nFor example, the following JSON creates a 2 column grid with a\nsingle item:\n\n::\n\n   \"grid\": {\n     \"title\": \"A fine collection of items\",\n     \"columnCount\": 2,\n     \"borderStyle\": {\n       \"type\": \"STROKE\",\n       \"cornerRadius\": 4\n     },\n     \"items\": [\n       {\n         \"image\": {\n           \"imageUri\": \"https://www.e",
      "attributes": {
        "title": {
          "type": "str",
          "description": "The text that displays in the grid header."
        },
        "items": {
          "type": "MutableSequence[google.apps.card_v1.types.Grid.GridItem]",
          "description": "The items to display in the grid."
        },
        "border_style": {
          "type": "google.apps.card_v1.types.BorderStyle",
          "description": "The border style to apply to each grid item."
        },
        "column_count": {
          "type": "int",
          "description": "The number of columns to display in the grid. A default value is used if this field isn't specified, and that default value is different depending on where the grid is shown (dialog versus companion)."
        },
        "on_click": {
          "type": "google.apps.card_v1.types.OnClick",
          "description": "This callback is reused by each individual grid item, but with the item's identifier and index in the items list added to the callback's parameters."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Columns",
      "docstring": "The ``Columns`` widget displays up to 2 columns in a card or dialog.\nYou can add widgets to each column; the widgets appear in the order\nthat they are specified. For an example in Google Chat apps, see\n`Display cards and dialogs in\ncolumns <https://developers.google.com/workspace/chat/format-structure-card-dialog#display_cards_and_dialogs_in_columns>`__.\n\nThe height of each column is determined by the taller column. For\nexample, if the first column is taller than the second column, both\ncolumns have the height of the first column. Because each column can\ncontain a different number of widgets, you can't define rows or\nalign widgets between the columns.\n\nColumns are displayed side-by-side. You can customize the width of\neach column using the ``HorizontalSizeStyle`` field. If the user's\nscreen width is too narrow, the second column wraps below the first:\n\n-  On web, the second column wraps if the screen width is less than\n   or equal to 480 pixels.\n-  On iOS devices, the second column wraps if the screen width i",
      "attributes": {
        "column_items": {
          "type": "MutableSequence[google.apps.card_v1.types.Columns.Column]",
          "description": "An array of columns. You can include up to 2 columns in a card or dialog."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OnClick",
      "docstring": "Represents how to respond when users click an interactive element on\na card, such as a button.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    action (google.apps.card_v1.types.Action):\n        If specified, an action is triggered by this ``onClick``.\n\n        This field is a member of `oneof`_ ``data``.\n    open_link (google.apps.card_v1.types.OpenLink):\n        If specified, this ``onClick`` triggers an open link action.\n\n        This field is a member of `oneof`_ ``data``.\n    open_dynamic_link_action (google.apps.card_v1.types.Action):\n        An add-on triggers this action when the action needs to open\n        a link. This differs from",
      "attributes": {
        "action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "If specified, an action is triggered by this ``onClick``.  This field is a member of `oneof`_ ``data``."
        },
        "open_link": {
          "type": "google.apps.card_v1.types.OpenLink",
          "description": "If specified, this ``onClick`` triggers an open link action.  This field is a member of `oneof`_ ``data``."
        },
        "open_dynamic_link_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "An add-on triggers this action when the action needs to open a link. This differs from the ``open_link`` above in that this needs to talk to server to get the link. Thus some preparation work is required for web client to do before the open link action response comes back.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:  This field is a member of `oneof`_ ``data``."
        },
        "card": {
          "type": "google.apps.card_v1.types.Card",
          "description": "A new card is pushed to the card stack after clicking if specified.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:  This field is a member of `oneof`_ ``data``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OpenLink",
      "docstring": "Represents an ``onClick`` event that opens a hyperlink.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    url (str):\n        The URL to open.\n    open_as (google.apps.card_v1.types.OpenLink.OpenAs):\n        How to open a link.\n\n        `Google Workspace\n        Add-ons <https://developers.google.com/workspace/add-ons>`__:\n    on_close (google.apps.card_v1.types.OpenLink.OnClose):\n        Whether the client forgets about a link after opening it, or\n        observes it until the window closes.\n\n        `Google Workspace\n        Add-ons <https://developers.google.com/workspace/add-ons>`__:",
      "attributes": {
        "url": {
          "type": "str",
          "description": "The URL to open."
        },
        "open_as": {
          "type": "google.apps.card_v1.types.OpenLink.OpenAs",
          "description": "How to open a link.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        },
        "on_close": {
          "type": "google.apps.card_v1.types.OpenLink.OnClose",
          "description": "Whether the client forgets about a link after opening it, or observes it until the window closes.  `Google Workspace Add-ons <https://developers.google.com/workspace/add-ons>`__:"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Action",
      "docstring": "An action that describes the behavior when the form is submitted.\nFor example, you can invoke an Apps Script script to handle the\nform. If the action is triggered, the form values are sent to the\nserver.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    function (str):\n        A custom function to invoke when the containing element is\n        clicked or othrwise activated.\n\n        For example usage, see `Read form\n        data <https://developers.google.com/workspace/chat/read-form-data>`__.\n    parameters (MutableSequence[google.apps.card_v1.types.Action.ActionParameter]):\n        List of action parameters.\n    load_indicator (google.apps.card_v1.types.Action.LoadIndicator):\n        Specifies the loading indicator that the\n        action displays while making the call to the\n        action.\n    persist_values (bool):\n        Indicates whether form values persist after the action. The\n        default value is ``false``.\n\n        If ``true``, form v",
      "attributes": {
        "function": {
          "type": "str",
          "description": "A custom function to invoke when the containing element is clicked or othrwise activated.  For example usage, see `Read form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "parameters": {
          "type": "MutableSequence[google.apps.card_v1.types.Action.ActionParameter]",
          "description": "List of action parameters."
        },
        "load_indicator": {
          "type": "google.apps.card_v1.types.Action.LoadIndicator",
          "description": "Specifies the loading indicator that the action displays while making the call to the action."
        },
        "persist_values": {
          "type": "bool",
          "description": "Indicates whether form values persist after the action. The default value is ``false``.  If ``true``, form values remain after the action is triggered. To let the user make changes while the action is being processed, set ```LoadIndicator`` <https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator>`__ to ``NONE``. For `card messages <https://developers.google.com/workspace/chat/api/guides/v1/messages/create#create>`__ in Chat apps, you must also set the action's ```ResponseType`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces.messages#responsetype>`__ to ``UPDATE_MESSAGE`` and use the same ```card_id`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces.messages#CardWithId>`__ from the card that contained the action.  If ``false``, the form values are cleared when the action is triggered. To prevent the user from making changes while the action is being processed, set ```LoadIndicator`` <https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator>`__ to ``SPINNER``."
        },
        "interaction": {
          "type": "google.apps.card_v1.types.Action.Interaction",
          "description": "Optional. Required when opening a `dialog <https://developers.google.com/workspace/chat/dialogs>`__.  What to do in response to an interaction with a user, such as a user clicking a button in a card message.  If unspecified, the app responds by executing an ``action``\u2014like opening a link or running a function\u2014as normal.  By specifying an ``interaction``, the app can respond in special interactive ways. For example, by setting ``interaction`` to ``OPEN_DIALOG``, the app can open a `dialog <https://developers.google.com/workspace/chat/dialogs>`__. When specified, a loading indicator isn't shown. If specified for an add-on, the entire card is stripped and nothing is shown in the client.  `Google Chat apps <https://developers.google.com/workspace/chat>`__:"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CardHeader",
      "docstring": "Represents a card header. For an example in Google Chat apps, see\n`Add a\nheader <https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_header>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    title (str):\n        Required. The title of the card header.\n        The header has a fixed height: if both a\n        title and subtitle are specified, each takes up\n        one line. If only the title is specified, it\n        takes up both lines.\n    subtitle (str):\n        The subtitle of the card header. If specified, appears on\n        its own line below the ``title``.\n    image_type (google.apps.card_v1.types.Widget.ImageType):\n        The shape used to crop the image.\n\n        `Google Workspace Add-ons and Chat\n        apps <https://developers.google.com/workspace/extend>`__:\n    image_url (str):\n        The HTTPS URL of the image in the card\n        header.\n    image_alt_text (str):\n        The alternative text of this ima",
      "attributes": {
        "title": {
          "type": "str",
          "description": "Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines."
        },
        "subtitle": {
          "type": "str",
          "description": "The subtitle of the card header. If specified, appears on its own line below the ``title``."
        },
        "image_type": {
          "type": "google.apps.card_v1.types.Widget.ImageType",
          "description": "The shape used to crop the image.  `Google Workspace Add-ons and Chat apps <https://developers.google.com/workspace/extend>`__:"
        },
        "image_url": {
          "type": "str",
          "description": "The HTTPS URL of the image in the card header."
        },
        "image_alt_text": {
          "type": "str",
          "description": "The alternative text of this image that's used for accessibility."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Section",
      "docstring": "A section contains a collection of widgets that are rendered\nvertically in the order that they're specified.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    header (str):\n        Text that appears at the top of a section. Supports simple\n        HTML formatted text. For more information about formatting\n        text, see `Formatting text in Google Chat\n        apps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__\n        and `Formatting text in Google Workspace\n        Add-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__.\n    widgets (MutableSequence[google.apps.card_v1.types.Widget]):\n        All the widgets in the section.\n        Must contain at least one widget.\n    collapsible (bool):\n        Indicates whether this section is collapsible.\n\n        Collapsible sections hide some or all widgets, but users can\n        expand the section to reveal the hidden widgets by cl",
      "attributes": {
        "header": {
          "type": "str",
          "description": "Text that appears at the top of a section. Supports simple HTML formatted text. For more information about formatting text, see `Formatting text in Google Chat apps <https://developers.google.com/workspace/chat/format-messages#card-formatting>`__ and `Formatting text in Google Workspace Add-ons <https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting>`__."
        },
        "widgets": {
          "type": "MutableSequence[google.apps.card_v1.types.Widget]",
          "description": "All the widgets in the section. Must contain at least one widget."
        },
        "collapsible": {
          "type": "bool",
          "description": "Indicates whether this section is collapsible.  Collapsible sections hide some or all widgets, but users can expand the section to reveal the hidden widgets by clicking **Show more**. Users can hide the widgets again by clicking **Show less**.  To determine which widgets are hidden, specify ``uncollapsibleWidgetsCount``."
        },
        "uncollapsible_widgets_count": {
          "type": "int",
          "description": "The number of uncollapsible widgets which remain visible even when a section is collapsed.  For example, when a section contains five widgets and the ``uncollapsibleWidgetsCount`` is set to ``2``, the first two widgets are always shown and the last three are collapsed by default. The ``uncollapsibleWidgetsCount`` is taken into account only when ``collapsible`` is ``true``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CardAction",
      "docstring": "A card action is the action associated with the card. For example,\nan invoice card might include actions such as delete invoice, email\ninvoice, or open the invoice in a browser.\n\n`Google Workspace\nAdd-ons <https://developers.google.com/workspace/add-ons>`__:\n\nAttributes:\n    action_label (str):\n        The label that displays as the action menu\n        item.\n    on_click (google.apps.card_v1.types.OnClick):\n        The ``onClick`` action for this action item.",
      "attributes": {
        "action_label": {
          "type": "str",
          "description": "The label that displays as the action menu item."
        },
        "on_click": {
          "type": "google.apps.card_v1.types.OnClick",
          "description": "The ``onClick`` action for this action item."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CardFixedFooter",
      "docstring": "A persistent (sticky) footer that that appears at the bottom of the\ncard.\n\nSetting ``fixedFooter`` without specifying a ``primaryButton`` or a\n``secondaryButton`` causes an error.\n\nFor Chat apps, you can use fixed footers in\n`dialogs <https://developers.google.com/workspace/chat/dialogs>`__,\nbut not `card\nmessages <https://developers.google.com/workspace/chat/create-messages#create>`__.\nFor an example in Google Chat apps, see `Add a persistent\nfooter <https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_persistent_footer>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    primary_button (google.apps.card_v1.types.Button):\n        The primary button of the fixed footer. The\n        button must be a text button with text and color\n        set.\n    secondary_button (google.apps.card_v1.types.Button):\n        The secondary button of the fixed footer. The button must be\n        a text button with text and color set. If\n    ",
      "attributes": {
        "primary_button": {
          "type": "google.apps.card_v1.types.Button",
          "description": "The primary button of the fixed footer. The button must be a text button with text and color set."
        },
        "secondary_button": {
          "type": "google.apps.card_v1.types.Button",
          "description": "The secondary button of the fixed footer. The button must be a text button with text and color set. If ``secondaryButton`` is set, you must also set ``primaryButton``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SwitchControl",
      "docstring": "Either a toggle-style switch or a checkbox inside a\n``decoratedText`` widget.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nOnly supported in the ``decoratedText`` widget.\n\nAttributes:\n    name (str):\n        The name by which the switch widget is identified in a form\n        input event.\n\n        For details about working with form inputs, see `Receive\n        form\n        data <https://developers.google.com/workspace/chat/read-form-data>`__.\n    value (str):\n        The value entered by a user, returned as part of a form\n        input event.\n\n        For details about working with form inputs, see `Receive\n        form\n        data <https://developers.google.com/workspace/chat/read-form-data>`__.\n    selected (bool):\n        When ``true``, the switch is selected.\n    on_change_action (google.apps.card_v1.types.Action):\n        The action to perform when the switch state\n        is changed, such as what  function to run.\n    control_type (google.apps.card_v1.t",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name by which the switch widget is identified in a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "value": {
          "type": "str",
          "description": "The value entered by a user, returned as part of a form input event.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "selected": {
          "type": "bool",
          "description": "When ``true``, the switch is selected."
        },
        "on_change_action": {
          "type": "google.apps.card_v1.types.Action",
          "description": "The action to perform when the switch state is changed, such as what  function to run."
        },
        "control_type": {
          "type": "google.apps.card_v1.types.DecoratedText.SwitchControl.ControlType",
          "description": "How the switch appears in the user interface.  `Google Workspace Add-ons and Chat apps <https://developers.google.com/workspace/extend>`__:"
        }
      }
    },
    {
      "type": "request_class",
      "name": "SuggestionItem",
      "docstring": "One suggested value that users can enter in a text input field.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    text (str):\n        The value of a suggested input to a text\n        input field. This is equivalent to what users\n        enter themselves.\n\n        This field is a member of `oneof`_ ``content``.",
      "attributes": {
        "text": {
          "type": "str",
          "description": "The value of a suggested input to a text input field. This is equivalent to what users enter themselves.  This field is a member of `oneof`_ ``content``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SelectionItem",
      "docstring": "An item that users can select in a selection input, such as a\ncheckbox or switch.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    text (str):\n        The text that identifies or describes the\n        item to users.\n    value (str):\n        The value associated with this item. The client should use\n        this as a form input value.\n\n        For details about working with form inputs, see `Receive\n        form\n        data <https://developers.google.com/workspace/chat/read-form-data>`__.\n    selected (bool):\n        Whether the item is selected by default. If\n        the selection input only accepts one value (such\n        as for radio buttons or a dropdown menu), only\n        set this field for one item.\n    start_icon_uri (str):\n        For multiselect menus, the URL for the icon displayed next\n        to the item's ``text`` field. Supports PNG and JPEG files.\n        Must be an ``HTTPS`` URL. For example,\n        ``https://developers.google.com",
      "attributes": {
        "text": {
          "type": "str",
          "description": "The text that identifies or describes the item to users."
        },
        "value": {
          "type": "str",
          "description": "The value associated with this item. The client should use this as a form input value.  For details about working with form inputs, see `Receive form data <https://developers.google.com/workspace/chat/read-form-data>`__."
        },
        "selected": {
          "type": "bool",
          "description": "Whether the item is selected by default. If the selection input only accepts one value (such as for radio buttons or a dropdown menu), only set this field for one item."
        },
        "start_icon_uri": {
          "type": "str",
          "description": "For multiselect menus, the URL for the icon displayed next to the item's ``text`` field. Supports PNG and JPEG files. Must be an ``HTTPS`` URL. For example, ``https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png``."
        },
        "bottom_text": {
          "type": "str",
          "description": "For multiselect menus, a text description or label that's displayed below the item's ``text`` field."
        }
      }
    },
    {
      "type": "request_class",
      "name": "PlatformDataSource",
      "docstring": "For a [``SelectionInput``][google.apps.card.v1.SelectionInput]\nwidget that uses a multiselect menu, a data source from Google\nWorkspace. Used to populate items in a multiselect menu.\n\n`Google Chat apps <https://developers.google.com/workspace/chat>`__:\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    common_data_source (google.apps.card_v1.types.SelectionInput.PlatformDataSource.CommonDataSource):\n        A data source shared by all Google Workspace\n        applications, such as users in a Google\n        Workspace organization.\n\n        This field is a member of `oneof`_ ``data_source``.",
      "attributes": {
        "common_data_source": {
          "type": "google.apps.card_v1.types.SelectionInput.PlatformDataSource.CommonDataSource",
          "description": "A data source shared by all Google Workspace applications, such as users in a Google Workspace organization.  This field is a member of `oneof`_ ``data_source``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GridItem",
      "docstring": "Represents an item in a grid layout. Items can contain text, an\nimage, or both text and an image.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    id (str):\n        A user-specified identifier for this grid item. This\n        identifier is returned in the parent grid's ``onClick``\n        callback parameters.\n    image (google.apps.card_v1.types.ImageComponent):\n        The image that displays in the grid item.\n    title (str):\n        The grid item's title.\n    subtitle (str):\n        The grid item's subtitle.\n    layout (google.apps.card_v1.types.Grid.GridItem.GridItemLayout):\n        The layout to use for the grid item.",
      "attributes": {
        "id": {
          "type": "str",
          "description": "A user-specified identifier for this grid item. This identifier is returned in the parent grid's ``onClick`` callback parameters."
        },
        "image": {
          "type": "google.apps.card_v1.types.ImageComponent",
          "description": "The image that displays in the grid item."
        },
        "title": {
          "type": "str",
          "description": "The grid item's title."
        },
        "subtitle": {
          "type": "str",
          "description": "The grid item's subtitle."
        },
        "layout": {
          "type": "google.apps.card_v1.types.Grid.GridItem.GridItemLayout",
          "description": "The layout to use for the grid item."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Column",
      "docstring": "A column.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__: Columns\nfor Google Workspace Add-ons are in Developer Preview.\n\nAttributes:\n    horizontal_size_style (google.apps.card_v1.types.Columns.Column.HorizontalSizeStyle):\n        Specifies how a column fills the width of the\n        card.\n    horizontal_alignment (google.apps.card_v1.types.Widget.HorizontalAlignment):\n        Specifies whether widgets align to the left,\n        right, or center of a column.\n    vertical_alignment (google.apps.card_v1.types.Columns.Column.VerticalAlignment):\n        Specifies whether widgets align to the top,\n        bottom, or center of a column.\n    widgets (MutableSequence[google.apps.card_v1.types.Columns.Column.Widgets]):\n        An array of widgets included in a column.\n        Widgets appear in the order that they are\n        specified.",
      "attributes": {
        "horizontal_size_style": {
          "type": "google.apps.card_v1.types.Columns.Column.HorizontalSizeStyle",
          "description": "Specifies how a column fills the width of the card."
        },
        "horizontal_alignment": {
          "type": "google.apps.card_v1.types.Widget.HorizontalAlignment",
          "description": "Specifies whether widgets align to the left, right, or center of a column."
        },
        "vertical_alignment": {
          "type": "google.apps.card_v1.types.Columns.Column.VerticalAlignment",
          "description": "Specifies whether widgets align to the top, bottom, or center of a column."
        },
        "widgets": {
          "type": "MutableSequence[google.apps.card_v1.types.Columns.Column.Widgets]",
          "description": "An array of widgets included in a column. Widgets appear in the order that they are specified."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ActionParameter",
      "docstring": "List of string parameters to supply when the action method is\ninvoked. For example, consider three snooze buttons: snooze now,\nsnooze one day, or snooze next week. You might use\n``action method = snooze()``, passing the snooze type and snooze\ntime in the list of string parameters.\n\nTo learn more, see\n```CommonEventObject`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/Event#commoneventobject>`__.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__:\n\nAttributes:\n    key (str):\n        The name of the parameter for the action\n        script.\n    value (str):\n        The value of the parameter.",
      "attributes": {
        "key": {
          "type": "str",
          "description": "The name of the parameter for the action script."
        },
        "value": {
          "type": "str",
          "description": "The value of the parameter."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Widgets",
      "docstring": "The supported widgets that you can include in a column.\n\n`Google Workspace Add-ons and Chat\napps <https://developers.google.com/workspace/extend>`__: Columns\nfor Google Workspace Add-ons are in Developer Preview.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    text_paragraph (google.apps.card_v1.types.TextParagraph):\n        [TextParagraph][google.apps.card.v1.TextParagraph] widget.\n\n        This field is a member of `oneof`_ ``data``.\n    image (google.apps.card_v1.types.Image):\n        [Image][google.apps.card.v1.Image] widget.\n\n        This field is a member of `oneof`_ ``data``.\n    decorated_text (google.apps.card_v1.types.DecoratedText):\n        [DecoratedText][google.apps.card.v1.DecoratedText] widget.\n\n        This field is ",
      "attributes": {
        "text_paragraph": {
          "type": "google.apps.card_v1.types.TextParagraph",
          "description": "[TextParagraph][google.apps.card.v1.TextParagraph] widget.  This field is a member of `oneof`_ ``data``."
        },
        "image": {
          "type": "google.apps.card_v1.types.Image",
          "description": "[Image][google.apps.card.v1.Image] widget.  This field is a member of `oneof`_ ``data``."
        },
        "decorated_text": {
          "type": "google.apps.card_v1.types.DecoratedText",
          "description": "[DecoratedText][google.apps.card.v1.DecoratedText] widget.  This field is a member of `oneof`_ ``data``."
        },
        "button_list": {
          "type": "google.apps.card_v1.types.ButtonList",
          "description": "[ButtonList][google.apps.card.v1.ButtonList] widget.  This field is a member of `oneof`_ ``data``."
        },
        "text_input": {
          "type": "google.apps.card_v1.types.TextInput",
          "description": "[TextInput][google.apps.card.v1.TextInput] widget.  This field is a member of `oneof`_ ``data``."
        },
        "selection_input": {
          "type": "google.apps.card_v1.types.SelectionInput",
          "description": "[SelectionInput][google.apps.card.v1.SelectionInput] widget.  This field is a member of `oneof`_ ``data``."
        },
        "date_time_picker": {
          "type": "google.apps.card_v1.types.DateTimePicker",
          "description": "[DateTimePicker][google.apps.card.v1.DateTimePicker] widget.  This field is a member of `oneof`_ ``data``."
        }
      }
    }
  ]
}