{
  "ImageAnnotator": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "batch_annotate_images",
          "description": "Run image detection and annotation for a batch of\nimages.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_batch_annotate_images():\n        # Create a client\n        client = vision_v1p3beta1.ImageAnnotatorAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.BatchAnnotateImagesRequest(\n        )\n\n        # Make the request\n        response = await client.batch_annotate_images(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vision_v1p3beta1.types.BatchA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "requests": {
                "type": "MutableSequence[google.cloud.vision_v1p3beta1.types.AnnotateImageRequest]",
                "description": "Individual image annotation requests for this batch.  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.BatchAnnotateImagesResponse: Response to a batch image annotation request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "image_annotator.BatchAnnotateImagesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "async_batch_annotate_files",
          "description": "Run asynchronous image detection and annotation for a list of\ngeneric files, such as PDF files, which may contain multiple\npages and multiple images per page. Progress and results can be\nretrieved through the ``google.longrunning.Operations``\ninterface. ``Operation.metadata`` contains ``OperationMetadata``\n(metadata). ``Operation.response`` contains\n``AsyncBatchAnnotateFilesResponse`` (results).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_async_batch_annotate_files():\n        # Create a client\n        client = vision_v1p3beta1.ImageAnnotatorAsyncClient()\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "requests": {
                "type": "MutableSequence[google.cloud.vision_v1p3beta1.types.AsyncAnnotateFileRequest]",
                "description": "Required. Individual async file annotation requests for this batch.  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vision_v1p3beta1.types.AsyncBatchAnnotateFilesResponse` Response to an async batch file annotation request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "image_annotator.AsyncBatchAnnotateFilesRequest"
          ]
        }
      }
    ]
  },
  "ProductSearch": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_product_set",
          "description": "Creates and returns a new ProductSet resource.\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if display_name is missing, or is\n   longer than 4096 characters.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_create_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.CreateProductSetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_product_set(request=request)\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project in which the ProductSet should be created.  Format is ``projects/PROJECT_ID/locations/LOC_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product_set": {
                "type": "google.cloud.vision_v1p3beta1.types.ProductSet",
                "description": "Required. The ProductSet to create. This corresponds to the ``product_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product_set_id": {
                "type": "str",
                "description": "A user-supplied resource id for this ProductSet. If set, the server will attempt to use this value as the resource id. If it is already in use, an error is returned with code ALREADY_EXISTS. Must be at most 128 characters long. It cannot contain the character ``/``.  This corresponds to the ``product_set_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.ProductSet: A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "product_set",
              "product_set_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.CreateProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_product_sets",
          "description": "Lists ProductSets in an unspecified order.\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if page_size is greater than 100, or\n   less than 1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_list_product_sets():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.ListProductSetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_product_sets(request=request)\n\n        # Handle the respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project from which ProductSets should be listed.  Format is ``projects/PROJECT_ID/locations/LOC_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.services.product_search.pagers.ListProductSetsAsyncPager: Response message for the ListProductSets method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.ListProductSetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_product_set",
          "description": "Gets information associated with a ProductSet.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the ProductSet does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_get_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.GetProductSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_product_set(request=request)\n\n        # Handle the response\n        print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the ProductSet to get.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.ProductSet: A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.GetProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_product_set",
          "description": "Makes changes to a ProductSet resource. Only display_name can be\nupdated currently.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the ProductSet does not exist.\n-  Returns INVALID_ARGUMENT if display_name is present in\n   update_mask but missing from the request or longer than 4096\n   characters.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_update_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.UpdateProductSetRequest(\n        )\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "product_set": {
                "type": "google.cloud.vision_v1p3beta1.types.ProductSet",
                "description": "Required. The ProductSet resource which replaces the one on the server.  This corresponds to the ``product_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The [FieldMask][google.protobuf.FieldMask] that specifies which fields to update. If update_mask isn't specified, all mutable fields are to be updated. Valid mask path is ``display_name``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.ProductSet: A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "product_set",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.UpdateProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_product_set",
          "description": "Permanently deletes a ProductSet. All Products and\nReferenceImages in the ProductSet will be deleted.\n\nThe actual image files are not deleted from Google Cloud\nStorage.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the ProductSet does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_delete_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.DeleteProductSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the ProductSet to delete.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.DeleteProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_product",
          "description": "Creates and returns a new product resource.\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if display_name is missing or longer\n   than 4096 characters.\n-  Returns INVALID_ARGUMENT if description is longer than 4096\n   characters.\n-  Returns INVALID_ARGUMENT if product_category is missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_create_product():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.CreateProductRequest(\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project in which the Product should be created.  Format is ``projects/PROJECT_ID/locations/LOC_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product": {
                "type": "google.cloud.vision_v1p3beta1.types.Product",
                "description": "Required. The product to create. This corresponds to the ``product`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product_id": {
                "type": "str",
                "description": "A user-supplied resource id for this Product. If set, the server will attempt to use this value as the resource id. If it is already in use, an error is returned with code ALREADY_EXISTS. Must be at most 128 characters long. It cannot contain the character ``/``.  This corresponds to the ``product_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.Product: A Product contains ReferenceImages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "product",
              "product_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.CreateProductRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_products",
          "description": "Lists products in an unspecified order.\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if page_size is greater than 100 or\n   less than 1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_list_products():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.ListProductsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_products(request=request)\n\n        # Handle the response\n        asyn",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project OR ProductSet from which Products should be listed.  Format: ``projects/PROJECT_ID/locations/LOC_ID``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.services.product_search.pagers.ListProductsAsyncPager: Response message for the ListProducts method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.ListProductsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_product",
          "description": "Gets information associated with a Product.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the Product does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_get_product():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.GetProductRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_product(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the Product to get.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.Product: A Product contains ReferenceImages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.GetProductRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_product",
          "description": "Makes changes to a Product resource. Only display_name,\ndescription and labels can be updated right now.\n\nIf labels are updated, the change will not be reflected in\nqueries until the next index time.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the Product does not exist.\n-  Returns INVALID_ARGUMENT if display_name is present in\n   update_mask but is missing from the request or longer than\n   4096 characters.\n-  Returns INVALID_ARGUMENT if description is present in\n   update_mask but is longer than 4096 characters.\n-  Returns INVALID_ARGUMENT if product_category is present in\n   update_mask.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "product": {
                "type": "google.cloud.vision_v1p3beta1.types.Product",
                "description": "Required. The Product resource which replaces the one on the server. product.name is immutable.  This corresponds to the ``product`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The [FieldMask][google.protobuf.FieldMask] that specifies which fields to update. If update_mask isn't specified, all mutable fields are to be updated. Valid mask paths include ``product_labels``, ``display_name``, and ``description``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.Product: A Product contains ReferenceImages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "product",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.UpdateProductRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_product",
          "description": "Permanently deletes a product and its reference images.\n\nMetadata of the product and all its images will be deleted right\naway, but search queries against ProductSets containing the\nproduct may still work until all related caches are refreshed.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the product does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_delete_product():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.DeleteProductReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of product to delete.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.DeleteProductRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_reference_image",
          "description": "Creates and returns a new ReferenceImage resource.\n\nThe ``bounding_poly`` field is optional. If ``bounding_poly`` is\nnot specified, the system will try to detect regions of interest\nin the image that are compatible with the product_category on\nthe parent product. If it is specified, detection is ALWAYS\nskipped. The system converts polygons into non-rotated\nrectangles.\n\nNote that the pipeline will resize the image if the image\nresolution is too large to process (above 50MP).\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if the image_uri is missing or\n   longer than 4096 characters.\n-  Returns INVALID_ARGUMENT if the product does not exist.\n-  Returns INVALID_ARGUMENT if bounding_poly is not provided,\n   and nothing compatible with the parent product's\n   product_category is detected.\n-  Returns INVALID_ARGUMENT if bounding_poly contains more than\n   10 polygons.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the product in which to create the reference image.  Format is ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "reference_image": {
                "type": "google.cloud.vision_v1p3beta1.types.ReferenceImage",
                "description": "Required. The reference image to create. If an image ID is specified, it is ignored.  This corresponds to the ``reference_image`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "reference_image_id": {
                "type": "str",
                "description": "A user-supplied resource id for the ReferenceImage to be added. If set, the server will attempt to use this value as the resource id. If it is already in use, an error is returned with code ALREADY_EXISTS. Must be at most 128 characters long. It cannot contain the character ``/``.  This corresponds to the ``reference_image_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.ReferenceImage: A ReferenceImage represents a product image and its associated metadata, such as bounding boxes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "reference_image",
              "reference_image_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.CreateReferenceImageRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_reference_image",
          "description": "Permanently deletes a reference image.\n\nThe image metadata will be deleted right away, but search\nqueries against ProductSets containing the image may still work\nuntil all related caches are refreshed.\n\nThe actual image files are not deleted from Google Cloud\nStorage.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the reference image does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_delete_reference_image():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the reference image to delete.  Format is:  ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.DeleteReferenceImageRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_reference_images",
          "description": "Lists reference images.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the parent product does not exist.\n-  Returns INVALID_ARGUMENT if the page_size is greater than\n   100, or less than 1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_list_reference_images():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.ListReferenceImagesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_refere",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the product containing the reference images.  Format is ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.services.product_search.pagers.ListReferenceImagesAsyncPager: Response message for the ListReferenceImages method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.ListReferenceImagesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_reference_image",
          "description": "Gets information associated with a ReferenceImage.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the specified image does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_get_reference_image():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.GetReferenceImageRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_reference_image(request=request)\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the ReferenceImage to get.  Format is:  ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.types.ReferenceImage: A ReferenceImage represents a product image and its associated metadata, such as bounding boxes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.GetReferenceImageRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "add_product_to_product_set",
          "description": "Adds a Product to the specified ProductSet. If the Product is\nalready present, no change is made.\n\nOne Product can be added to at most 100 ProductSets.\n\nPossible errors:\n\n-  Returns NOT_FOUND if the Product or the ProductSet doesn't\n   exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_add_product_to_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.AddProductToProductSetRequest(\n            name=\"name_value\",\n            produc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name for the ProductSet to modify.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product": {
                "type": "str",
                "description": "Required. The resource name for the Product to be added to this ProductSet.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``  This corresponds to the ``product`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "product",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.AddProductToProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_product_from_product_set",
          "description": "Removes a Product from the specified ProductSet.\n\nPossible errors:\n\n-  Returns NOT_FOUND If the Product is not found under the\n   ProductSet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_remove_product_from_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.RemoveProductFromProductSetRequest(\n            name=\"name_value\",\n            product=\"product_value\",\n        )\n\n        # Make the request\n        await client.remove_produc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name for the ProductSet to modify.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "product": {
                "type": "str",
                "description": "Required. The resource name for the Product to be removed from this ProductSet.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID``  This corresponds to the ``product`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "product",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.RemoveProductFromProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_products_in_product_set",
          "description": "Lists the Products in a ProductSet, in an unspecified order. If\nthe ProductSet does not exist, the products field of the\nresponse will be empty.\n\nPossible errors:\n\n-  Returns INVALID_ARGUMENT if page_size is greater than 100 or\n   less than 1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vision_v1p3beta1\n\n    async def sample_list_products_in_product_set():\n        # Create a client\n        client = vision_v1p3beta1.ProductSearchAsyncClient()\n\n        # Initialize request argument(s)\n        request = vision_v1p3beta1.ListProductsInProductSetRequest(\n            name=\"name_value\",\n        )\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ProductSet resource for which to retrieve Products.  Format is: ``projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vision_v1p3beta1.services.product_search.pagers.ListProductsInProductSetAsyncPager: Response message for the ListProductsInProductSet method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.ListProductsInProductSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_product_sets",
          "description": "Asynchronous API that imports a list of reference images to\nspecified product sets based on a list of image information.\n\nThe [google.longrunning.Operation][google.longrunning.Operation]\nAPI can be used to keep track of the progress and results of the\nrequest. ``Operation.metadata`` contains\n``BatchOperationMetadata``. (progress) ``Operation.response``\ncontains ``ImportProductSetsResponse``. (results)\n\nThe input source of this method is a csv file on Google Cloud\nStorage. For the format of the csv file please see\n[ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/py",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project in which the ProductSets should be imported.  Format is ``projects/PROJECT_ID/locations/LOC_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.vision_v1p3beta1.types.ImportProductSetsInputConfig",
                "description": "Required. The input content for the list of requests.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vision_v1p3beta1.types.ImportProductSetsResponse` Response message for the ImportProductSets method.  This message is returned by the [google.longrunning.Operations.GetOperation][google.longrunning.Operations.GetOperation] method in the returned [google.longrunning.Operation.response][google.longrunning.Operation.response] field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "product_search_service.ImportProductSetsRequest"
          ]
        }
      }
    ]
  }
}