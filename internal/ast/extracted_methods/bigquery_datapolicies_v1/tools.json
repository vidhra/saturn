{
  "DataPolicyService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_data_policy",
          "description": "Creates a new data policy under a project with the given\n``dataPolicyId`` (used as the display name), policy tag, and\ndata policy type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_create_data_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_policy = bigquery_datapolicies_v1.DataPolicy()\n        data_policy.policy_tag = \"policy_tag_value\"\n        data_policy.data_masking_policy.predefined_expression = \"DATE_YEAR_MASK\"\n\n        request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project that the data policy will belong to. The format is ``projects/{project_number}/locations/{location_id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_policy": {
                "type": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy",
                "description": "Required. The data policy to create. The ``name`` field does not need to be provided for the data policy creation.  This corresponds to the ``data_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datapolicies_v1.types.DataPolicy: Represents the label-policy binding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "data_policy",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datapolicies_v1.types.DataPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_policy",
          "description": "Updates the metadata for an existing data policy. The\ntarget data policy can be specified by the resource\nname.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_update_data_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_policy = bigquery_datapolicies_v1.DataPolicy()\n        data_policy.policy_tag = \"policy_tag_value\"\n        data_policy.data_masking_policy.predefined_expression = \"DATE_YEAR_MASK\"\n\n        request = bigquery_datapolicies_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_policy": {
                "type": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy",
                "description": "Required. Update the data policy's metadata.  The target data policy is determined by the ``name`` field. Other fields are updated to the specified values based on the field masks.  This corresponds to the ``data_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.  Updates to the ``name`` and ``dataPolicyId`` fields are not allowed.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datapolicies_v1.types.DataPolicy: Represents the label-policy binding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_policy",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datapolicies_v1.types.DataPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_data_policy",
          "description": "Renames the id (display name) of the specified data\npolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_rename_data_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datapolicies_v1.RenameDataPolicyRequest(\n            name=\"name_value\",\n            new_data_policy_id=\"new_data_policy_id_value\",\n        )\n\n        # Make the request\n        response = await client.rename_data_policy(request=request)\n\n        # Handle the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the data policy to rename. The format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "new_data_policy_id": {
                "type": "str",
                "description": "Required. The new data policy id. This corresponds to the ``new_data_policy_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datapolicies_v1.types.DataPolicy: Represents the label-policy binding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "new_data_policy_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datapolicies_v1.types.DataPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_data_policy",
          "description": "Deletes the data policy specified by its resource\nname.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_delete_data_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datapolicies_v1.DeleteDataPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_data_policy(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_datapolicies_v1.types.DeleteDataPolicyR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the data policy to delete. Format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_policy",
          "description": "Gets the data policy specified by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_get_data_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datapolicies_v1.GetDataPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the requested data policy. Format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datapolicies_v1.types.DataPolicy: Represents the label-policy binding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datapolicies_v1.types.DataPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_policies",
          "description": "List all of the data policies in the specified parent\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n\n    async def sample_list_data_policies():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datapolicies_v1.ListDataPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_policies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project for which to list data policies. Format is ``projects/{project_number}/locations/{location_id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datapolicies_v1.services.data_policy_service.pagers.ListDataPoliciesAsyncPager: Response message for the ListDataPolicies method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datapolicies_v1.services.data_policy_service.pagers.ListDataPoliciesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the IAM policy for the specified data policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.get_iam_policy(request=request)\n\n        # Handle the response\n        prin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the IAM policy for the specified data policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.SetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.set_iam_policy(request=request)\n\n        # Handle the response\n        prin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "SetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns the caller's permission on the specified data\npolicy resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datapolicies_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = bigquery_datapolicies_v1.DataPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resource=\"resource_value\",\n            permissions=['permissions_value1', 'permissions_value2'],\n        )\n\n        # Make the request\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "TestIamPermissionsRequest"
          ],
          "response_types": [
            "google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse"
          ]
        }
      }
    ]
  }
}