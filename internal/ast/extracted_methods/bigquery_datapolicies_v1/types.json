{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-bigquery-datapolicies/google/cloud/bigquery_datapolicies_v1/types/datapolicy.py": [
    {
      "type": "function",
      "name": "CreateDataPolicyRequest",
      "description": "Request message for the CreateDataPolicy method.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project that the data policy\n        will belong to. The format is\n        ``projects/{project_number}/locations/{location_id}``.\n    data_policy (google.cloud.bigquery_datapolicies_v1.types.DataPolicy):\n        Required. The data policy to create. The ``name`` field does\n        not need to be provided for the data policy creation.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project that the data policy will belong to. The format is ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "data_policy": {
            "description": "Required. The data policy to create. The ``name`` field does not need to be provided for the data policy creation.",
            "reference": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "policy_tag": {
                  "description": "Policy tag resource name, in the format of ``projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}``.  This field is a member of `oneof`_ ``matching_label``.",
                  "type": "string"
                },
                "data_masking_policy": {
                  "description": "The data masking policy that specifies the data masking rule to use.  This field is a member of `oneof`_ ``policy``.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_datapolicies_v1.types.DataMaskingPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "predefined_expression": {
                        "description": "A predefined masking expression.  This field is a member of `oneof`_ ``masking_expression``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_datapolicies_v1.types.DataMaskingPolicy.PredefinedExpression"
                      },
                      "routine": {
                        "description": "The name of the BigQuery routine that contains the custom masking routine, in the format of ``projects/{project_number}/datasets/{dataset_id}/routines/{routine_id}``.  This field is a member of `oneof`_ ``masking_expression``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Output only. Resource name of this data policy, in the format of ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
                  "type": "string"
                },
                "data_policy_type": {
                  "description": "Type of data policy.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy.DataPolicyType"
                },
                "data_policy_id": {
                  "description": "User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {data_policy_id} in part of the resource name.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "data_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDataPolicyRequest",
      "description": "Response message for the UpdateDataPolicy method.\n\nAttributes:\n    data_policy (google.cloud.bigquery_datapolicies_v1.types.DataPolicy):\n        Required. Update the data policy's metadata.\n\n        The target data policy is determined by the ``name`` field.\n        Other fields are updated to the specified values based on\n        the field masks.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource. For the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.\n\n        Updates to the ``name`` and ``dataPolicyId`` fields are not\n        allowed.",
      "parameters": {
        "type": "object",
        "properties": {
          "data_policy": {
            "description": "Required. Update the data policy's metadata.  The target data policy is determined by the ``name`` field. Other fields are updated to the specified values based on the field masks.",
            "reference": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "policy_tag": {
                  "description": "Policy tag resource name, in the format of ``projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}``.  This field is a member of `oneof`_ ``matching_label``.",
                  "type": "string"
                },
                "data_masking_policy": {
                  "description": "The data masking policy that specifies the data masking rule to use.  This field is a member of `oneof`_ ``policy``.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_datapolicies_v1.types.DataMaskingPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "predefined_expression": {
                        "description": "A predefined masking expression.  This field is a member of `oneof`_ ``masking_expression``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_datapolicies_v1.types.DataMaskingPolicy.PredefinedExpression"
                      },
                      "routine": {
                        "description": "The name of the BigQuery routine that contains the custom masking routine, in the format of ``projects/{project_number}/datasets/{dataset_id}/routines/{routine_id}``.  This field is a member of `oneof`_ ``masking_expression``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Output only. Resource name of this data policy, in the format of ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
                  "type": "string"
                },
                "data_policy_type": {
                  "description": "Type of data policy.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_datapolicies_v1.types.DataPolicy.DataPolicyType"
                },
                "data_policy_id": {
                  "description": "User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {data_policy_id} in part of the resource name.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.  Updates to the ``name`` and ``dataPolicyId`` fields are not allowed.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "data_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameDataPolicyRequest",
      "description": "Request message for the RenameDataPolicy method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the data policy to rename. The\n        format is\n        ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``\n    new_data_policy_id (str):\n        Required. The new data policy id.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the data policy to rename. The format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``",
            "type": "string"
          },
          "new_data_policy_id": {
            "description": "Required. The new data policy id.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_data_policy_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDataPolicyRequest",
      "description": "Request message for the DeleteDataPolicy method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the data policy to delete. Format\n        is\n        ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the data policy to delete. Format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDataPolicyRequest",
      "description": "Request message for the GetDataPolicy method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the requested data policy. Format\n        is\n        ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the requested data policy. Format is ``projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDataPoliciesRequest",
      "description": "Request message for the ListDataPolicies method.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project for which to list\n        data policies. Format is\n        ``projects/{project_number}/locations/{location_id}``.\n    page_size (int):\n        The maximum number of data policies to\n        return. Must be a value between 1 and 1000.\n        If not set, defaults to 50.\n    page_token (str):\n        The ``nextPageToken`` value returned from a previous list\n        request, if any. If not set, defaults to an empty string.\n    filter (str):\n        Filters the data policies by policy tags that they are\n        associated with. Currently filter only supports\n        \"policy\\_tag\" based filtering and OR based predicates.\n        Sample filter can be \"policy\\_tag:\n        projects/1/locations/us/taxonomies/2/policyTags/3\". You may\n        also use wildcard such as \"policy\\_tag:\n        projects/1/locations/us/taxonomies/2*\". Please note that OR\n        predicates cannot be used with wildcar",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project for which to list data policies. Format is ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of data policies to return. Must be a value between 1 and 1000. If not set, defaults to 50.",
            "type": "integer"
          },
          "page_token": {
            "description": "The ``nextPageToken`` value returned from a previous list request, if any. If not set, defaults to an empty string.",
            "type": "string"
          },
          "filter": {
            "description": "Filters the data policies by policy tags that they are associated with. Currently filter only supports \"policy\\_tag\" based filtering and OR based predicates. Sample filter can be \"policy\\_tag: projects/1/locations/us/taxonomies/2/policyTags/3\". You may also use wildcard such as \"policy\\_tag: projects/1/locations/us/taxonomies/2*\". Please note that OR predicates cannot be used with wildcard filters.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ]
}