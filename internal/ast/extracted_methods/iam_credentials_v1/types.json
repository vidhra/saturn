{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-iam\\google\\cloud\\iam_credentials_v1\\types\\common.py": [
    {
      "type": "function",
      "name": "GenerateAccessTokenRequest",
      "description": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "string"
          },
          "delegates": {
            "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "description": "Required. Code to identify the scopes to be included in the OAuth 2.0 access token. See https://developers.google.com/identity/protocols/googlescopes for more information. At least one value required.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lifetime": {
            "description": "The desired lifetime duration of the access token in seconds. Must be set to a value less than or equal to 3600 (1 hour). If a value is not specified, the token's lifetime will be set to a default value of one hour.",
            "type": "object",
            "properties": {
              "nanos": {
                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                "type": "integer"
              },
              "seconds": {
                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "name",
          "scope"
        ]
      }
    },
    {
      "type": "function",
      "name": "SignBlobRequest",
      "description": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "string"
          },
          "delegates": {
            "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "payload": {
            "description": "Required. The bytes to sign.",
            "type": "object",
            "reference": "bytes"
          }
        },
        "required": [
          "name",
          "payload"
        ]
      }
    },
    {
      "type": "function",
      "name": "SignJwtRequest",
      "description": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "string"
          },
          "delegates": {
            "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "payload": {
            "description": "Required. The JWT payload to sign: a JSON object that contains a JWT Claims Set.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "payload"
        ]
      }
    },
    {
      "type": "function",
      "name": "GenerateIdTokenRequest",
      "description": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "string"
          },
          "delegates": {
            "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audience": {
            "description": "Required. The audience for the token, such as the API or account that this token grants access to.",
            "type": "string"
          },
          "include_email": {
            "description": "Include the service account email in the token. If set to ``true``, the token will contain ``email`` and ``email_verified`` claims.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "audience"
        ]
      }
    }
  ]
}