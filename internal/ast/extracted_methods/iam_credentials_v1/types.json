{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-iam\\google\\cloud\\iam_credentials_v1\\types\\common.py": [
    {
      "type": "request_class",
      "name": "GenerateAccessTokenRequest",
      "docstring": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "delegates": {
          "type": "MutableSequence[str]",
          "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "scope": {
          "type": "MutableSequence[str]",
          "description": "Required. Code to identify the scopes to be included in the OAuth 2.0 access token. See https://developers.google.com/identity/protocols/googlescopes for more information. At least one value required."
        },
        "lifetime": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The desired lifetime duration of the access token in seconds. Must be set to a value less than or equal to 3600 (1 hour). If a value is not specified, the token's lifetime will be set to a default value of one hour."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateAccessTokenResponse",
      "docstring": "Attributes:\n    access_token (str):\n        The OAuth 2.0 access token.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        Token expiration time.\n        The expiration time is always set.",
      "attributes": {
        "access_token": {
          "type": "str",
          "description": "The OAuth 2.0 access token."
        },
        "expire_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Token expiration time. The expiration time is always set."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SignBlobRequest",
      "docstring": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "delegates": {
          "type": "MutableSequence[str]",
          "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "payload": {
          "type": "bytes",
          "description": "Required. The bytes to sign."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SignBlobResponse",
      "docstring": "Attributes:\n    key_id (str):\n        The ID of the key used to sign the blob.\n    signed_blob (bytes):\n        The signed blob.",
      "attributes": {
        "key_id": {
          "type": "str",
          "description": "The ID of the key used to sign the blob."
        },
        "signed_blob": {
          "type": "bytes",
          "description": "The signed blob."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SignJwtRequest",
      "docstring": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "delegates": {
          "type": "MutableSequence[str]",
          "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "payload": {
          "type": "str",
          "description": "Required. The JWT payload to sign: a JSON object that contains a JWT Claims Set."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SignJwtResponse",
      "docstring": "Attributes:\n    key_id (str):\n        The ID of the key used to sign the JWT.\n    signed_jwt (str):\n        The signed JWT.",
      "attributes": {
        "key_id": {
          "type": "str",
          "description": "The ID of the key used to sign the JWT."
        },
        "signed_jwt": {
          "type": "str",
          "description": "The signed JWT."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateIdTokenRequest",
      "docstring": "Attributes:\n    name (str):\n        Required. The resource name of the service account for which\n        the credentials are requested, in the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n    delegates (MutableSequence[str]):\n        The sequence of service accounts in a delegation chain. Each\n        service account must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on its next\n        service account in the chain. The last service account in\n        the chain must be granted the\n        ``roles/iam.serviceAccountTokenCreator`` role on the service\n        account that is specified in the ``name`` field of the\n        request.\n\n        The delegates must have the following format:\n        ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``.\n        The ``-`` wildcard character is required; replacing it with\n        a project ID is invalid.\n",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the service account for which the credentials are requested, in the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "delegates": {
          "type": "MutableSequence[str]",
          "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the ``roles/iam.serviceAccountTokenCreator`` role on its next service account in the chain. The last service account in the chain must be granted the ``roles/iam.serviceAccountTokenCreator`` role on the service account that is specified in the ``name`` field of the request.  The delegates must have the following format: ``projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}``. The ``-`` wildcard character is required; replacing it with a project ID is invalid."
        },
        "audience": {
          "type": "str",
          "description": "Required. The audience for the token, such as the API or account that this token grants access to."
        },
        "include_email": {
          "type": "bool",
          "description": "Include the service account email in the token. If set to ``true``, the token will contain ``email`` and ``email_verified`` claims."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateIdTokenResponse",
      "docstring": "Attributes:\n    token (str):\n        The OpenId Connect ID token.",
      "attributes": {
        "token": {
          "type": "str",
          "description": "The OpenId Connect ID token."
        }
      }
    }
  ]
}