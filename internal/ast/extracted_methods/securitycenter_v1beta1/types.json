{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-securitycenter\\google\\cloud\\securitycenter_v1beta1\\types\\securitycenter_service.py": [
    {
      "type": "function",
      "name": "CreateFindingRequest",
      "description": "Request message for creating a finding.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the new finding's parent. Its\n        format should be\n        \"organizations/[organization_id]/sources/[source_id]\".\n    finding_id (str):\n        Required. Unique identifier provided by the\n        client within the parent scope. It must be\n        alphanumeric and less than or equal to 32\n        characters and greater than 0 characters in\n        length.\n    finding (google.cloud.securitycenter_v1beta1.types.Finding):\n        Required. The Finding being created. The name and\n        security_marks will be ignored as they are both output only\n        fields on this resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the new finding's parent. Its format should be \"organizations/[organization_id]/sources/[source_id]\".",
            "type": "string"
          },
          "finding_id": {
            "description": "Required. Unique identifier provided by the client within the parent scope. It must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.",
            "type": "string"
          },
          "finding": {
            "description": "Required. The Finding being created. The name and security_marks will be ignored as they are both output only fields on this resource.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.",
                "type": "string"
              },
              "finding_type": {
                "description": "The type of the Finding. Detailed and up-to-date information on findings can be found here:  https://cloud.google.com/security-scanner/docs/scan-result-details",
                "type": "string"
              },
              "http_method": {
                "description": "The http method of the request that triggered the vulnerability, in uppercase.",
                "type": "string"
              },
              "fuzzed_url": {
                "description": "The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.",
                "type": "string"
              },
              "body": {
                "description": "The body of the request that triggered the vulnerability.",
                "type": "string"
              },
              "description": {
                "description": "The description of the vulnerability.",
                "type": "string"
              },
              "reproduction_url": {
                "description": "The URL containing human-readable payload that user can leverage to reproduce the vulnerability.",
                "type": "string"
              },
              "frame_url": {
                "description": "If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.",
                "type": "string"
              },
              "final_url": {
                "description": "The URL where the browser lands when the vulnerability is detected.",
                "type": "string"
              },
              "tracking_id": {
                "description": "The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.",
                "type": "string"
              },
              "form": {
                "type": "object",
                "properties": {
                  "action_uri": {
                    "description": "! The URI where to send the form when it's submitted.",
                    "type": "string"
                  },
                  "fields": {
                    "description": "! The names of form fields related to the vulnerability.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "outdated_library": {
                "type": "object",
                "properties": {
                  "library_name": {
                    "description": "The name of the outdated library.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The version number.",
                    "type": "string"
                  },
                  "learn_more_urls": {
                    "description": "URLs to learn more information about the vulnerabilities in the library.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "violating_resource": {
                "type": "object",
                "properties": {
                  "content_type": {
                    "description": "The MIME type of this resource.",
                    "type": "string"
                  },
                  "resource_url": {
                    "description": "URL of this violating resource.",
                    "type": "string"
                  }
                }
              },
              "vulnerable_headers": {
                "type": "object",
                "properties": {
                  "headers": {
                    "description": "List of vulnerable headers.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "missing_headers": {
                    "description": "List of missing headers.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "vulnerable_parameters": {
                "type": "object",
                "properties": {
                  "parameter_names": {
                    "description": "The vulnerable parameter names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "xss": {
                "type": "object",
                "properties": {
                  "stack_traces": {
                    "description": "Stack traces leading to the point where the XSS occurred.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "error_message": {
                    "description": "An error message generated by a javascript breakage.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "finding_id",
          "finding"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateSourceRequest",
      "description": "Request message for creating a source.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the new source's parent. Its\n        format should be \"organizations/[organization_id]\".\n    source (google.cloud.securitycenter_v1beta1.types.Source):\n        Required. The Source being created, only the display_name\n        and description will be used. All other fields will be\n        ignored.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the new source's parent. Its format should be \"organizations/[organization_id]\".",
            "type": "string"
          },
          "source": {
            "description": "Required. The Source being created, only the display_name and description will be used. All other fields will be ignored.",
            "type": "object",
            "properties": {
              "artifact_storage_source_uri": {
                "description": "If provided, the input binary artifacts for the build came from this location.",
                "type": "string"
              },
              "file_hashes": {
                "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build.  The keys to this map are file paths used as build source and the values contain the hash values for those files.  If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "file_hash": {
                      "description": "Required. Collection of file hashes.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_": {
                            "description": "Required. The type of hash that was performed, e.g. \"SHA-256\".",
                            "type": "string"
                          },
                          "value": {
                            "description": "Required. The hash value.",
                            "type": "object",
                            "reference": "bytes"
                          }
                        },
                        "required": [
                          "type_",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "file_hash"
                  ]
                }
              },
              "context": {
                "type": "object",
                "properties": {
                  "cloud_repo": {
                    "type": "object",
                    "properties": {
                      "repo_id": {
                        "type": "object",
                        "properties": {
                          "project_repo_id": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The ID of the project.",
                                "type": "string"
                              },
                              "repo_name": {
                                "description": "The name of the repo. Leave empty for the default repo.",
                                "type": "string"
                              }
                            }
                          },
                          "uid": {
                            "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                            "type": "string"
                          }
                        }
                      },
                      "revision_id": {
                        "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                        "type": "string"
                      },
                      "alias_context": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "enum",
                            "name": "Kind",
                            "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                            "values": {
                              "KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "FIXED": {
                                "value": 1
                              },
                              "MOVABLE": {
                                "value": 2
                              },
                              "OTHER": {
                                "value": 4
                              }
                            }
                          },
                          "name": {
                            "description": "The alias name.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "gerrit": {
                    "type": "object",
                    "properties": {
                      "host_uri": {
                        "description": "The URI of a running Gerrit instance.",
                        "type": "string"
                      },
                      "gerrit_project": {
                        "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                        "type": "string"
                      },
                      "revision_id": {
                        "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                        "type": "string"
                      },
                      "alias_context": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "enum",
                            "name": "Kind",
                            "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                            "values": {
                              "KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "FIXED": {
                                "value": 1
                              },
                              "MOVABLE": {
                                "value": 2
                              },
                              "OTHER": {
                                "value": 4
                              }
                            }
                          },
                          "name": {
                            "description": "The alias name.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "git": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "Git repository URL.",
                        "type": "string"
                      },
                      "revision_id": {
                        "description": "Git commit hash.",
                        "type": "string"
                      }
                    }
                  },
                  "labels": {
                    "description": "Labels with user defined metadata.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "additional_contexts": {
                "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cloud_repo": {
                      "type": "object",
                      "properties": {
                        "repo_id": {
                          "type": "object",
                          "properties": {
                            "project_repo_id": {
                              "type": "object",
                              "properties": {
                                "project_id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "repo_name": {
                                  "description": "The name of the repo. Leave empty for the default repo.",
                                  "type": "string"
                                }
                              }
                            },
                            "uid": {
                              "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                              "type": "string"
                            }
                          }
                        },
                        "revision_id": {
                          "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                          "type": "string"
                        },
                        "alias_context": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "enum",
                              "name": "Kind",
                              "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                              "values": {
                                "KIND_UNSPECIFIED": {
                                  "value": 0
                                },
                                "FIXED": {
                                  "value": 1
                                },
                                "MOVABLE": {
                                  "value": 2
                                },
                                "OTHER": {
                                  "value": 4
                                }
                              }
                            },
                            "name": {
                              "description": "The alias name.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "gerrit": {
                      "type": "object",
                      "properties": {
                        "host_uri": {
                          "description": "The URI of a running Gerrit instance.",
                          "type": "string"
                        },
                        "gerrit_project": {
                          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                          "type": "string"
                        },
                        "revision_id": {
                          "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                          "type": "string"
                        },
                        "alias_context": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "enum",
                              "name": "Kind",
                              "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                              "values": {
                                "KIND_UNSPECIFIED": {
                                  "value": 0
                                },
                                "FIXED": {
                                  "value": 1
                                },
                                "MOVABLE": {
                                  "value": 2
                                },
                                "OTHER": {
                                  "value": 4
                                }
                              }
                            },
                            "name": {
                              "description": "The alias name.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "git": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL.",
                          "type": "string"
                        },
                        "revision_id": {
                          "description": "Git commit hash.",
                          "type": "string"
                        }
                      }
                    },
                    "labels": {
                      "description": "Labels with user defined metadata.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "source"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetOrganizationSettingsRequest",
      "description": "Request message for getting organization settings.\n\nAttributes:\n    name (str):\n        Required. Name of the organization to get organization\n        settings for. Its format is\n        \"organizations/[organization_id]/organizationSettings\".",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the organization to get organization settings for. Its format is \"organizations/[organization_id]/organizationSettings\".",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSourceRequest",
      "description": "Request message for getting a source.\n\nAttributes:\n    name (str):\n        Required. Relative resource name of the source. Its format\n        is \"organizations/[organization_id]/source/[source_id]\".",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Relative resource name of the source. Its format is \"organizations/[organization_id]/source/[source_id]\".",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GroupAssetsRequest",
      "description": "Request message for grouping by assets.\n\nAttributes:\n    parent (str):\n        Required. Name of the organization to groupBy. Its format is\n        \"organizations/[organization_id]\".\n    filter (str):\n        Expression that defines the filter to apply across assets.\n        The expression is a list of zero or more restrictions\n        combined via logical operators ``AND`` and ``OR``.\n        Parentheses are not supported, and ``OR`` has higher\n        precedence than ``AND``.\n\n        Restrictions have the form ``<field> <operator> <value>``\n        and may have a ``-`` character in front of them to indicate\n        negation. The fields map to those defined in the Asset\n        resource. Examples include:\n\n        -  name\n        -  security_center_properties.resource_name\n        -  resource_properties.a_property\n        -  security_marks.marks.marka\n\n        The supported operators are:\n\n        -  ``=`` for all value types.\n        -  ``>``, ``<``, ``>=``, ``<=`` for integer values.\n        -  ``:``, mea",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the organization to groupBy. Its format is \"organizations/[organization_id]\".",
            "type": "string"
          },
          "filter": {
            "description": "Expression that defines the filter to apply across assets. The expression is a list of zero or more restrictions combined via logical operators ``AND`` and ``OR``. Parentheses are not supported, and ``OR`` has higher precedence than ``AND``.  Restrictions have the form ``<field> <operator> <value>`` and may have a ``-`` character in front of them to indicate negation. The fields map to those defined in the Asset resource. Examples include:  -  name -  security_center_properties.resource_name -  resource_properties.a_property -  security_marks.marks.marka  The supported operators are:  -  ``=`` for all value types. -  ``>``, ``<``, ``>=``, ``<=`` for integer values. -  ``:``, meaning substring matching, for strings.  The supported value types are:  -  string literals in quotes. -  integer literals without quotes. -  boolean literals ``true`` and ``false`` without quotes.  For example, ``resource_properties.size = 100`` is a valid filter string.",
            "type": "string"
          },
          "group_by": {
            "description": "Required. Expression that defines what assets fields to use for grouping. The string value should follow SQL syntax: comma separated list of fields. For example: \"security_center_properties.resource_project,security_center_properties.project\".  The following fields are supported when compare_duration is not set:  -  security_center_properties.resource_project -  security_center_properties.resource_type -  security_center_properties.resource_parent  The following fields are supported when compare_duration is set:  -  security_center_properties.resource_type",
            "type": "string"
          },
          "compare_duration": {
            "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
            "type": "enum",
            "name": "Duration",
            "values": {
              "UNDEFINED_DURATION": {
                "value": 0
              },
              "DURATION_UNSPECIFIED": {
                "value": 529071340
              },
              "HOUR": {
                "value": 2223588
              },
              "MAX": {
                "value": 76100
              },
              "MINUTE": {
                "value": 126786068
              }
            }
          },
          "read_time": {
            "description": "Time used as a reference point when filtering assets. The filter is limited to assets existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "page_token": {
            "description": "The value returned by the last ``GroupAssetsResponse``; indicates that this is a continuation of a prior ``GroupAssets`` call, and that the system should return the next page of data.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.",
            "type": "integer"
          }
        },
        "required": [
          "parent",
          "group_by"
        ]
      }
    },
    {
      "type": "function",
      "name": "GroupFindingsRequest",
      "description": "Request message for grouping by findings.\n\nAttributes:\n    parent (str):\n        Required. Name of the source to groupBy. Its format is\n        \"organizations/[organization_id]/sources/[source_id]\". To\n        groupBy across all sources provide a source_id of ``-``. For\n        example: organizations/{organization_id}/sources/-\n    filter (str):\n        Expression that defines the filter to apply across findings.\n        The expression is a list of one or more restrictions\n        combined via logical operators ``AND`` and ``OR``.\n        Parentheses are not supported, and ``OR`` has higher\n        precedence than ``AND``.\n\n        Restrictions have the form ``<field> <operator> <value>``\n        and may have a ``-`` character in front of them to indicate\n        negation. Examples include:\n\n        -  name\n        -  source_properties.a_property\n        -  security_marks.marks.marka\n\n        The supported operators are:\n\n        -  ``=`` for all value types.\n        -  ``>``, ``<``, ``>=``, ``<=`` for intege",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the source to groupBy. Its format is \"organizations/[organization_id]/sources/[source_id]\". To groupBy across all sources provide a source_id of ``-``. For example: organizations/{organization_id}/sources/-",
            "type": "string"
          },
          "filter": {
            "description": "Expression that defines the filter to apply across findings. The expression is a list of one or more restrictions combined via logical operators ``AND`` and ``OR``. Parentheses are not supported, and ``OR`` has higher precedence than ``AND``.  Restrictions have the form ``<field> <operator> <value>`` and may have a ``-`` character in front of them to indicate negation. Examples include:  -  name -  source_properties.a_property -  security_marks.marks.marka  The supported operators are:  -  ``=`` for all value types. -  ``>``, ``<``, ``>=``, ``<=`` for integer values. -  ``:``, meaning substring matching, for strings.  The supported value types are:  -  string literals in quotes. -  integer literals without quotes. -  boolean literals ``true`` and ``false`` without quotes.  For example, ``source_properties.size = 100`` is a valid filter string.",
            "type": "string"
          },
          "group_by": {
            "description": "Required. Expression that defines what assets fields to use for grouping (including ``state``). The string value should follow SQL syntax: comma separated list of fields. For example: \"parent,resource_name\".  The following fields are supported:  -  resource_name -  category -  state -  parent",
            "type": "string"
          },
          "read_time": {
            "description": "Time used as a reference point when filtering findings. The filter is limited to findings existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "page_token": {
            "description": "The value returned by the last ``GroupFindingsResponse``; indicates that this is a continuation of a prior ``GroupFindings`` call, and that the system should return the next page of data.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.",
            "type": "integer"
          }
        },
        "required": [
          "parent",
          "group_by"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSourcesRequest",
      "description": "Request message for listing sources.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the parent of sources to list.\n        Its format should be \"organizations/[organization_id]\".\n    page_token (str):\n        The value returned by the last ``ListSourcesResponse``;\n        indicates that this is a continuation of a prior\n        ``ListSources`` call, and that the system should return the\n        next page of data.\n    page_size (int):\n        The maximum number of results to return in a\n        single response. Default is 10, minimum is 1,\n        maximum is 1000.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the parent of sources to list. Its format should be \"organizations/[organization_id]\".",
            "type": "string"
          },
          "page_token": {
            "description": "The value returned by the last ``ListSourcesResponse``; indicates that this is a continuation of a prior ``ListSources`` call, and that the system should return the next page of data.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.",
            "type": "integer"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListAssetsRequest",
      "description": "Request message for listing assets.\n\nAttributes:\n    parent (str):\n        Required. Name of the organization assets should belong to.\n        Its format is \"organizations/[organization_id]\".\n    filter (str):\n        Expression that defines the filter to apply across assets.\n        The expression is a list of zero or more restrictions\n        combined via logical operators ``AND`` and ``OR``.\n        Parentheses are not supported, and ``OR`` has higher\n        precedence than ``AND``.\n\n        Restrictions have the form ``<field> <operator> <value>``\n        and may have a ``-`` character in front of them to indicate\n        negation. The fields map to those defined in the Asset\n        resource. Examples include:\n\n        -  name\n        -  security_center_properties.resource_name\n        -  resource_properties.a_property\n        -  security_marks.marks.marka\n\n        The supported operators are:\n\n        -  ``=`` for all value types.\n        -  ``>``, ``<``, ``>=``, ``<=`` for integer values.\n        -  `",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the organization assets should belong to. Its format is \"organizations/[organization_id]\".",
            "type": "string"
          },
          "filter": {
            "description": "Expression that defines the filter to apply across assets. The expression is a list of zero or more restrictions combined via logical operators ``AND`` and ``OR``. Parentheses are not supported, and ``OR`` has higher precedence than ``AND``.  Restrictions have the form ``<field> <operator> <value>`` and may have a ``-`` character in front of them to indicate negation. The fields map to those defined in the Asset resource. Examples include:  -  name -  security_center_properties.resource_name -  resource_properties.a_property -  security_marks.marks.marka  The supported operators are:  -  ``=`` for all value types. -  ``>``, ``<``, ``>=``, ``<=`` for integer values. -  ``:``, meaning substring matching, for strings.  The supported value types are:  -  string literals in quotes. -  integer literals without quotes. -  boolean literals ``true`` and ``false`` without quotes.  For example, ``resource_properties.size = 100`` is a valid filter string.",
            "type": "string"
          },
          "order_by": {
            "description": "Expression that defines what fields and order to use for sorting. The string value should follow SQL syntax: comma separated list of fields. For example: \"name,resource_properties.a_property\". The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be appended to the field name. For example: \"name desc,resource_properties.a_property\". Redundant space characters in the syntax are insignificant. \"name desc,resource_properties.a_property\" and \" name desc , resource_properties.a_property \" are equivalent.",
            "type": "string"
          },
          "read_time": {
            "description": "Time used as a reference point when filtering assets. The filter is limited to assets existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "compare_duration": {
            "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
            "type": "enum",
            "name": "Duration",
            "values": {
              "UNDEFINED_DURATION": {
                "value": 0
              },
              "DURATION_UNSPECIFIED": {
                "value": 529071340
              },
              "HOUR": {
                "value": 2223588
              },
              "MAX": {
                "value": 76100
              },
              "MINUTE": {
                "value": 126786068
              }
            }
          },
          "field_mask": {
            "description": "Optional. A field mask to specify the ListAssetsResult fields to be listed in the response. An empty field mask will list all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "page_token": {
            "description": "The value returned by the last ``ListAssetsResponse``; indicates that this is a continuation of a prior ``ListAssets`` call, and that the system should return the next page of data.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.",
            "type": "integer"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListFindingsRequest",
      "description": "Request message for listing findings.\n\nAttributes:\n    parent (str):\n        Required. Name of the source the findings belong to. Its\n        format is\n        \"organizations/[organization_id]/sources/[source_id]\". To\n        list across all sources provide a source_id of ``-``. For\n        example: organizations/{organization_id}/sources/-\n    filter (str):\n        Expression that defines the filter to apply across findings.\n        The expression is a list of one or more restrictions\n        combined via logical operators ``AND`` and ``OR``.\n        Parentheses are not supported, and ``OR`` has higher\n        precedence than ``AND``.\n\n        Restrictions have the form ``<field> <operator> <value>``\n        and may have a ``-`` character in front of them to indicate\n        negation. Examples include:\n\n        -  name\n        -  source_properties.a_property\n        -  security_marks.marks.marka\n\n        The supported operators are:\n\n        -  ``=`` for all value types.\n        -  ``>``, ``<``, ``>=``, ``<=",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the source the findings belong to. Its format is \"organizations/[organization_id]/sources/[source_id]\". To list across all sources provide a source_id of ``-``. For example: organizations/{organization_id}/sources/-",
            "type": "string"
          },
          "filter": {
            "description": "Expression that defines the filter to apply across findings. The expression is a list of one or more restrictions combined via logical operators ``AND`` and ``OR``. Parentheses are not supported, and ``OR`` has higher precedence than ``AND``.  Restrictions have the form ``<field> <operator> <value>`` and may have a ``-`` character in front of them to indicate negation. Examples include:  -  name -  source_properties.a_property -  security_marks.marks.marka  The supported operators are:  -  ``=`` for all value types. -  ``>``, ``<``, ``>=``, ``<=`` for integer values. -  ``:``, meaning substring matching, for strings.  The supported value types are:  -  string literals in quotes. -  integer literals without quotes. -  boolean literals ``true`` and ``false`` without quotes.  For example, ``source_properties.size = 100`` is a valid filter string.",
            "type": "string"
          },
          "order_by": {
            "description": "Expression that defines what fields and order to use for sorting. The string value should follow SQL syntax: comma separated list of fields. For example: \"name,resource_properties.a_property\". The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be appended to the field name. For example: \"name desc,source_properties.a_property\". Redundant space characters in the syntax are insignificant. \"name desc,source_properties.a_property\" and \" name desc , source_properties.a_property \" are equivalent.",
            "type": "string"
          },
          "read_time": {
            "description": "Time used as a reference point when filtering findings. The filter is limited to findings existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "field_mask": {
            "description": "Optional. A field mask to specify the Finding fields to be listed in the response. An empty field mask will list all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "page_token": {
            "description": "The value returned by the last ``ListFindingsResponse``; indicates that this is a continuation of a prior ``ListFindings`` call, and that the system should return the next page of data.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.",
            "type": "integer"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetFindingStateRequest",
      "description": "Request message for updating a finding's state.\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the finding. See:\n        https://cloud.google.com/apis/design/resource_names#relative_resource_name\n        Example:\n        \"organizations/{organization_id}/sources/{source_id}/finding/{finding_id}\".\n    state (google.cloud.securitycenter_v1beta1.types.Finding.State):\n        Required. The desired State of the finding.\n    start_time (google.protobuf.timestamp_pb2.Timestamp):\n        Required. The time at which the updated state\n        takes effect.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/sources/{source_id}/finding/{finding_id}\".",
            "type": "string"
          },
          "state": {
            "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
            "type": "enum",
            "name": "State",
            "values": {
              "STATE_UNSPECIFIED": {
                "value": 0
              },
              "AFFECTED": {
                "value": 1
              },
              "NOT_AFFECTED": {
                "value": 2
              },
              "FIXED": {
                "value": 3
              },
              "UNDER_INVESTIGATION": {
                "value": 4
              }
            }
          },
          "start_time": {
            "description": "Required. The time at which the updated state takes effect.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "name",
          "state",
          "start_time"
        ]
      }
    },
    {
      "type": "function",
      "name": "RunAssetDiscoveryRequest",
      "description": "Request message for running asset discovery for an\norganization.\n\nAttributes:\n    parent (str):\n        Required. Name of the organization to run asset discovery\n        for. Its format is \"organizations/[organization_id]\".",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the organization to run asset discovery for. Its format is \"organizations/[organization_id]\".",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateFindingRequest",
      "description": "Request message for updating or creating a finding.\n\nAttributes:\n    finding (google.cloud.securitycenter_v1beta1.types.Finding):\n        Required. The finding resource to update or create if it\n        does not already exist. parent, security_marks, and\n        update_time will be ignored.\n\n        In the case of creation, the finding id portion of the name\n        must alphanumeric and less than or equal to 32 characters\n        and greater than 0 characters in length.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The FieldMask to use when updating the\n        finding resource. This field should not be\n        specified when creating a finding.",
      "parameters": {
        "type": "object",
        "properties": {
          "finding": {
            "description": "Required. The finding resource to update or create if it does not already exist. parent, security_marks, and update_time will be ignored.  In the case of creation, the finding id portion of the name must alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.",
                "type": "string"
              },
              "finding_type": {
                "description": "The type of the Finding. Detailed and up-to-date information on findings can be found here:  https://cloud.google.com/security-scanner/docs/scan-result-details",
                "type": "string"
              },
              "http_method": {
                "description": "The http method of the request that triggered the vulnerability, in uppercase.",
                "type": "string"
              },
              "fuzzed_url": {
                "description": "The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.",
                "type": "string"
              },
              "body": {
                "description": "The body of the request that triggered the vulnerability.",
                "type": "string"
              },
              "description": {
                "description": "The description of the vulnerability.",
                "type": "string"
              },
              "reproduction_url": {
                "description": "The URL containing human-readable payload that user can leverage to reproduce the vulnerability.",
                "type": "string"
              },
              "frame_url": {
                "description": "If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.",
                "type": "string"
              },
              "final_url": {
                "description": "The URL where the browser lands when the vulnerability is detected.",
                "type": "string"
              },
              "tracking_id": {
                "description": "The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.",
                "type": "string"
              },
              "form": {
                "type": "object",
                "properties": {
                  "action_uri": {
                    "description": "! The URI where to send the form when it's submitted.",
                    "type": "string"
                  },
                  "fields": {
                    "description": "! The names of form fields related to the vulnerability.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "outdated_library": {
                "type": "object",
                "properties": {
                  "library_name": {
                    "description": "The name of the outdated library.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The version number.",
                    "type": "string"
                  },
                  "learn_more_urls": {
                    "description": "URLs to learn more information about the vulnerabilities in the library.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "violating_resource": {
                "type": "object",
                "properties": {
                  "content_type": {
                    "description": "The MIME type of this resource.",
                    "type": "string"
                  },
                  "resource_url": {
                    "description": "URL of this violating resource.",
                    "type": "string"
                  }
                }
              },
              "vulnerable_headers": {
                "type": "object",
                "properties": {
                  "headers": {
                    "description": "List of vulnerable headers.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "missing_headers": {
                    "description": "List of missing headers.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "vulnerable_parameters": {
                "type": "object",
                "properties": {
                  "parameter_names": {
                    "description": "The vulnerable parameter names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "xss": {
                "type": "object",
                "properties": {
                  "stack_traces": {
                    "description": "Stack traces leading to the point where the XSS occurred.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "error_message": {
                    "description": "An error message generated by a javascript breakage.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "The FieldMask to use when updating the finding resource. This field should not be specified when creating a finding.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "finding"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateOrganizationSettingsRequest",
      "description": "Request message for updating an organization's settings.\n\nAttributes:\n    organization_settings (google.cloud.securitycenter_v1beta1.types.OrganizationSettings):\n        Required. The organization settings resource\n        to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The FieldMask to use when updating the\n        settings resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "organization_settings": {
            "description": "Required. The organization settings resource to update.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The relative resource name of the settings. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/organizationSettings\".",
                "type": "string"
              },
              "enable_asset_discovery": {
                "description": "A flag that indicates if Asset Discovery should be enabled. If the flag is set to ``true``, then discovery of assets will occur. If it is set to \\`false, all historical assets will remain, but discovery of future assets will not occur.",
                "type": "boolean"
              },
              "asset_discovery_config": {
                "type": "object",
                "properties": {
                  "project_ids": {
                    "description": "The project ids to use for filtering asset discovery.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "inclusion_mode": {
                    "type": "enum",
                    "name": "InclusionMode",
                    "description": "The mode of inclusion when running Asset Discovery. Asset discovery\ncan be limited by explicitly identifying projects to be included or\nexcluded. If INCLUDE_ONLY is set, then only those projects within\nthe organization and their children are discovered during asset\ndiscovery. If EXCLUDE is set, then projects that don't match those\nprojects are discovered during asset discovery. If neither are set,\nthen all projects within the organization are discovered during\nasset discovery.\n\nValues:\n    INCLUSION_MODE_UNSPECIFIED (0):\n        Unspecified. Setting the mode with this value\n        will disable inclusion/exclusion filtering for\n        Asset Discovery.\n    INCLUDE_ONLY (1):\n        Asset Discovery will capture only the\n        resources within the projects specified. All\n        other resources will be ignored.\n    EXCLUDE (2):\n        Asset Discovery will ignore all resources\n        under the projects specified. All other\n        resources will be retrieved.",
                    "values": {
                      "INCLUSION_MODE_UNSPECIFIED": {
                        "value": 0
                      },
                      "INCLUDE_ONLY": {
                        "value": 1
                      },
                      "EXCLUDE": {
                        "value": 2
                      }
                    }
                  },
                  "folder_ids": {
                    "description": "The folder ids to use for filtering asset discovery. It consists of only digits, e.g., 756619654966.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "The FieldMask to use when updating the settings resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "organization_settings"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSourceRequest",
      "description": "Request message for updating a source.\n\nAttributes:\n    source (google.cloud.securitycenter_v1beta1.types.Source):\n        Required. The source resource to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The FieldMask to use when updating the source\n        resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "source": {
            "description": "Required. The source resource to update.",
            "type": "object",
            "properties": {
              "artifact_storage_source_uri": {
                "description": "If provided, the input binary artifacts for the build came from this location.",
                "type": "string"
              },
              "file_hashes": {
                "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build.  The keys to this map are file paths used as build source and the values contain the hash values for those files.  If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "file_hash": {
                      "description": "Required. Collection of file hashes.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_": {
                            "description": "Required. The type of hash that was performed, e.g. \"SHA-256\".",
                            "type": "string"
                          },
                          "value": {
                            "description": "Required. The hash value.",
                            "type": "object",
                            "reference": "bytes"
                          }
                        },
                        "required": [
                          "type_",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "file_hash"
                  ]
                }
              },
              "context": {
                "type": "object",
                "properties": {
                  "cloud_repo": {
                    "type": "object",
                    "properties": {
                      "repo_id": {
                        "type": "object",
                        "properties": {
                          "project_repo_id": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The ID of the project.",
                                "type": "string"
                              },
                              "repo_name": {
                                "description": "The name of the repo. Leave empty for the default repo.",
                                "type": "string"
                              }
                            }
                          },
                          "uid": {
                            "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                            "type": "string"
                          }
                        }
                      },
                      "revision_id": {
                        "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                        "type": "string"
                      },
                      "alias_context": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "enum",
                            "name": "Kind",
                            "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                            "values": {
                              "KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "FIXED": {
                                "value": 1
                              },
                              "MOVABLE": {
                                "value": 2
                              },
                              "OTHER": {
                                "value": 4
                              }
                            }
                          },
                          "name": {
                            "description": "The alias name.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "gerrit": {
                    "type": "object",
                    "properties": {
                      "host_uri": {
                        "description": "The URI of a running Gerrit instance.",
                        "type": "string"
                      },
                      "gerrit_project": {
                        "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                        "type": "string"
                      },
                      "revision_id": {
                        "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                        "type": "string"
                      },
                      "alias_context": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "enum",
                            "name": "Kind",
                            "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                            "values": {
                              "KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "FIXED": {
                                "value": 1
                              },
                              "MOVABLE": {
                                "value": 2
                              },
                              "OTHER": {
                                "value": 4
                              }
                            }
                          },
                          "name": {
                            "description": "The alias name.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "git": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "Git repository URL.",
                        "type": "string"
                      },
                      "revision_id": {
                        "description": "Git commit hash.",
                        "type": "string"
                      }
                    }
                  },
                  "labels": {
                    "description": "Labels with user defined metadata.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "additional_contexts": {
                "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cloud_repo": {
                      "type": "object",
                      "properties": {
                        "repo_id": {
                          "type": "object",
                          "properties": {
                            "project_repo_id": {
                              "type": "object",
                              "properties": {
                                "project_id": {
                                  "description": "The ID of the project.",
                                  "type": "string"
                                },
                                "repo_name": {
                                  "description": "The name of the repo. Leave empty for the default repo.",
                                  "type": "string"
                                }
                              }
                            },
                            "uid": {
                              "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                              "type": "string"
                            }
                          }
                        },
                        "revision_id": {
                          "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                          "type": "string"
                        },
                        "alias_context": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "enum",
                              "name": "Kind",
                              "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                              "values": {
                                "KIND_UNSPECIFIED": {
                                  "value": 0
                                },
                                "FIXED": {
                                  "value": 1
                                },
                                "MOVABLE": {
                                  "value": 2
                                },
                                "OTHER": {
                                  "value": 4
                                }
                              }
                            },
                            "name": {
                              "description": "The alias name.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "gerrit": {
                      "type": "object",
                      "properties": {
                        "host_uri": {
                          "description": "The URI of a running Gerrit instance.",
                          "type": "string"
                        },
                        "gerrit_project": {
                          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                          "type": "string"
                        },
                        "revision_id": {
                          "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                          "type": "string"
                        },
                        "alias_context": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "enum",
                              "name": "Kind",
                              "description": "The type of an alias.\n\nValues:\n    KIND_UNSPECIFIED (0):\n        Unknown.\n    FIXED (1):\n        Git tag.\n    MOVABLE (2):\n        Git branch.\n    OTHER (4):\n        Used to specify non-standard aliases. For\n        example, if a Git repo has a ref named\n        \"refs/foo/bar\".",
                              "values": {
                                "KIND_UNSPECIFIED": {
                                  "value": 0
                                },
                                "FIXED": {
                                  "value": 1
                                },
                                "MOVABLE": {
                                  "value": 2
                                },
                                "OTHER": {
                                  "value": 4
                                }
                              }
                            },
                            "name": {
                              "description": "The alias name.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "git": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL.",
                          "type": "string"
                        },
                        "revision_id": {
                          "description": "Git commit hash.",
                          "type": "string"
                        }
                      }
                    },
                    "labels": {
                      "description": "Labels with user defined metadata.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "The FieldMask to use when updating the source resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "source"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSecurityMarksRequest",
      "description": "Request message for updating a SecurityMarks resource.\n\nAttributes:\n    security_marks (google.cloud.securitycenter_v1beta1.types.SecurityMarks):\n        Required. The security marks resource to\n        update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The FieldMask to use when updating the\n        security marks resource.\n    start_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time at which the updated SecurityMarks\n        take effect.",
      "parameters": {
        "type": "object",
        "properties": {
          "security_marks": {
            "description": "Required. The security marks resource to update.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name The following list shows some examples:  -  ``organizations/{organization_id}/assets/{asset_id}/securityMarks`` -  ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks`` + ``organizations/{organization_id}/sources/{source_id}/locations/{location}/findings/{finding_id}/securityMarks``",
                "type": "string"
              },
              "marks": {
                "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows:  -  Keys and values are treated as case insensitive -  Keys must be between 1 - 256 characters (inclusive) -  Keys must be letters, numbers, underscores, or dashes -  Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "canonical_name": {
                "description": "The canonical name of the marks. The following list shows some examples:  -  ``organizations/{organization_id}/assets/{asset_id}/securityMarks`` -  ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks`` + ``organizations/{organization_id}/sources/{source_id}/locations/{location}/findings/{finding_id}/securityMarks``  -  ``folders/{folder_id}/assets/{asset_id}/securityMarks`` -  ``folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks`` + ``folders/{folder_id}/sources/{source_id}/locations/{location}/findings/{finding_id}/securityMarks``  -  ``projects/{project_number}/assets/{asset_id}/securityMarks`` -  ``projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks`` + ``projects/{project_number}/sources/{source_id}/locations/{location}/findings/{finding_id}/securityMarks``",
                "type": "string"
              }
            }
          },
          "update_mask": {
            "description": "The FieldMask to use when updating the security marks resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "start_time": {
            "description": "The time at which the updated SecurityMarks take effect.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "security_marks"
        ]
      }
    }
  ]
}