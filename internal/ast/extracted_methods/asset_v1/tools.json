{
  "AssetService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "export_assets",
          "description": "Exports assets with time and resource types to a given Cloud\nStorage location/BigQuery table. For Cloud Storage location\ndestinations, the output format is newline-delimited JSON. Each\nline represents a\n[google.cloud.asset.v1.Asset][google.cloud.asset.v1.Asset] in\nthe JSON format; for BigQuery table destinations, the output\ntable stores the fields in asset Protobuf as columns. This API\nimplements the\n[google.longrunning.Operation][google.longrunning.Operation]\nAPI, which allows you to keep track of the export. We recommend\nintervals of at least 2 seconds with exponential retry to poll\nthe export operation result. For regular-size resource parent,\nthe export operation usually finishes within 5 minutes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when crea",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.ExportAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_assets",
          "description": "Lists assets with time and resource types and returns\npaged results in response.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_list_assets():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.ListAssetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_assets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[U",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the organization, folder, or project the assets belong to. Format: \"organizations/[organization-number]\" (such as \"organizations/123\"), \"projects/[project-id]\" (such as \"projects/my-project-id\"), \"projects/[project-number]\" (such as \"projects/12345\"), or \"folders/[folder-number]\" (such as \"folders/12345\").  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.ListAssetsAsyncPager: ListAssets response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.ListAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_get_assets_history",
          "description": "Batch gets the update history of assets that overlap a time\nwindow. For IAM_POLICY content, this API outputs history when\nthe asset and its attached IAM POLICY both exist. This can\ncreate gaps in the output history. Otherwise, this API outputs\nhistory with asset in both non-delete or deleted status. If a\nspecified asset does not exist, this API returns an\nINVALID_ARGUMENT error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_batch_get_assets_history():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argumen",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.BatchGetAssetsHistoryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_feed",
          "description": "Creates a feed in a parent\nproject/folder/organization to listen to its asset\nupdates.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_create_feed():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        feed = asset_v1.Feed()\n        feed.name = \"name_value\"\n\n        request = asset_v1.CreateFeedRequest(\n            parent=\"parent_value\",\n            feed_id=\"feed_id_value\",\n            feed=feed,\n        )\n\n        # Make the request\n        response = await client.create_feed(request=request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project/folder/organization where this feed should be created in. It can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\").  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.Feed: An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are:  Pub/Sub topics."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.CreateFeedRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_feed",
          "description": "Gets details about an asset feed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_get_feed():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.GetFeedRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_feed(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.GetFeedRequest, dict]]):\n        The request object. Get asset feed req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Feed and it must be in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id organizations/organization_number/feeds/feed_id  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.Feed: An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are:  Pub/Sub topics."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.GetFeedRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_feeds",
          "description": "Lists all asset feeds in a parent\nproject/folder/organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_list_feeds():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.ListFeedsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.list_feeds(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.ListFeedsRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent project/folder/organization whose feeds are to be listed. It can only be using project/folder/organization number (such as \"folders/12345\")\", or a project ID (such as \"projects/my-project-id\").  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.ListFeedsResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.ListFeedsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_feed",
          "description": "Updates an asset feed configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_update_feed():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        feed = asset_v1.Feed()\n        feed.name = \"name_value\"\n\n        request = asset_v1.UpdateFeedRequest(\n            feed=feed,\n        )\n\n        # Make the request\n        response = await client.update_feed(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.Up",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "feed": {
                "type": "google.cloud.asset_v1.types.Feed",
                "description": "Required. The new values of feed details. It must match an existing feed and the field ``name`` must be in the format of: projects/project_number/feeds/feed_id or folders/folder_number/feeds/feed_id or organizations/organization_number/feeds/feed_id.  This corresponds to the ``feed`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.Feed: An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are:  Pub/Sub topics."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "feed",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.UpdateFeedRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_feed",
          "description": "Deletes an asset feed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_delete_feed():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.DeleteFeedRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_feed(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.DeleteFeedRequest, dict]]):\n        The request object.\n    name (:class:`str`):\n        Required. The name of the feed and it must be in t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the feed and it must be in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id organizations/organization_number/feeds/feed_id  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.DeleteFeedRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_all_resources",
          "description": "Searches all Google Cloud resources within the specified scope,\nsuch as a project, folder, or organization. The caller must be\ngranted the ``cloudasset.assets.searchAllResources`` permission\non the desired scope, otherwise the request will be rejected.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_search_all_resources():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.SearchAllResourcesRequest(\n            scope=\"scope_value\",\n        )\n\n        # Make the request\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. A scope can be a project, a folder, or an organization. The search is limited to the resources within the ``scope``. The caller must be granted the ```cloudasset.assets.searchAllResources`` <https://cloud.google.com/asset-inventory/docs/access-control#required_permissions>`__ permission on the desired scope.  The allowed values are:  -  projects/{PROJECT_ID} (e.g., \"projects/foo-bar\") -  projects/{PROJECT_NUMBER} (e.g., \"projects/12345678\") -  folders/{FOLDER_NUMBER} (e.g., \"folders/1234567\") -  organizations/{ORGANIZATION_NUMBER} (e.g., \"organizations/123456\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Optional. The query statement. See `how to construct a query <https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query>`__ for more information. If not specified or empty, it will search all the resources within the specified ``scope``.  Examples:  -  ``name:Important`` to find Google Cloud resources whose name contains ``Important`` as a word. -  ``name=Important`` to find the Google Cloud resource whose name is exactly ``Important``. -  ``displayName:Impor*`` to find Google Cloud resources whose display name contains ``Impor`` as a prefix of any word in the field. -  ``location:us-west*`` to find Google Cloud resources whose location contains both ``us`` and ``west`` as prefixes. -  ``labels:prod`` to find Google Cloud resources whose labels contain ``prod`` as a key or value. -  ``labels.env:prod`` to find Google Cloud resources that have a label ``env`` and its value is ``prod``. -  ``labels.env:*`` to find Google Cloud resources that have a label ``env``. -  ``tagKeys:env`` to find Google Cloud resources that have directly attached tags where the ```TagKey.namespacedName`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys#resource:-tagkey>`__ contains ``env``. -  ``tagValues:prod*`` to find Google Cloud resources that have directly attached tags where the ```TagValue.namespacedName`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagValues#resource:-tagvalue>`__ contains a word prefixed by ``prod``. -  ``tagValueIds=tagValues/123`` to find Google Cloud resources that have directly attached tags where the ```TagValue.name`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagValues#resource:-tagvalue>`__ is exactly ``tagValues/123``. -  ``effectiveTagKeys:env`` to find Google Cloud resources that have directly attached or inherited tags where the ```TagKey.namespacedName`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys#resource:-tagkey>`__ contains ``env``. -  ``effectiveTagValues:prod*`` to find Google Cloud resources that have directly attached or inherited tags where the ```TagValue.namespacedName`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagValues#resource:-tagvalue>`__ contains a word prefixed by ``prod``. -  ``effectiveTagValueIds=tagValues/123`` to find Google Cloud resources that have directly attached or inherited tags where the ```TagValue.name`` <https://cloud.google.com/resource-manager/reference/rest/v3/tagValues#resource:-tagvalue>`__ is exactly ``tagValues/123``. -  ``kmsKey:key`` to find Google Cloud resources encrypted with a customer-managed encryption key whose name contains ``key`` as a word. This field is deprecated. Use the ``kmsKeys`` field to retrieve Cloud KMS key information. -  ``kmsKeys:key`` to find Google Cloud resources encrypted with customer-managed encryption keys whose name contains the word ``key``. -  ``relationships:instance-group-1`` to find Google Cloud resources that have relationships with ``instance-group-1`` in the related resource name. -  ``relationships:INSTANCE_TO_INSTANCEGROUP`` to find Compute Engine instances that have relationships of type ``INSTANCE_TO_INSTANCEGROUP``. -  ``relationships.INSTANCE_TO_INSTANCEGROUP:instance-group-1`` to find Compute Engine instances that have relationships with ``instance-group-1`` in the Compute Engine instance group resource name, for relationship type ``INSTANCE_TO_INSTANCEGROUP``. -  ``sccSecurityMarks.key=value`` to find Cloud resources that are attached with security marks whose key is ``key`` and value is ``value``. -  ``sccSecurityMarks.key:*`` to find Cloud resources that are attached with security marks whose key is ``key``. -  ``state:ACTIVE`` to find Google Cloud resources whose state contains ``ACTIVE`` as a word. -  ``NOT state:ACTIVE`` to find Google Cloud resources whose state doesn't contain ``ACTIVE`` as a word. -  ``createTime<1609459200`` to find Google Cloud resources that were created before ``2021-01-01 00:00:00 UTC``. ``1609459200`` is the epoch timestamp of ``2021-01-01 00:00:00 UTC`` in seconds. -  ``updateTime>1609459200`` to find Google Cloud resources that were updated after ``2021-01-01 00:00:00 UTC``. ``1609459200`` is the epoch timestamp of ``2021-01-01 00:00:00 UTC`` in seconds. -  ``Important`` to find Google Cloud resources that contain ``Important`` as a word in any of the searchable fields. -  ``Impor*`` to find Google Cloud resources that contain ``Impor`` as a prefix of any word in any of the searchable fields. -  ``Important location:(us-west1 OR global)`` to find Google Cloud resources that contain ``Important`` as a word in any of the searchable fields and are also located in the ``us-west1`` region or the ``global`` location.  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "asset_types": {
                "type": "MutableSequence[str]",
                "description": "Optional. A list of asset types that this request searches for. If empty, it will search all the asset types `supported by search APIs <https://cloud.google.com/asset-inventory/docs/supported-asset-types>`__.  Regular expressions are also supported. For example:  -  \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". -  \".*Instance\" snapshots resources whose asset type ends with \"Instance\". -  \".*Instance.*\" snapshots resources whose asset type contains \"Instance\".  See `RE2 <https://github.com/google/re2/wiki/Syntax>`__ for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned.  This corresponds to the ``asset_types`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.SearchAllResourcesAsyncPager: Search all resources response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "query",
              "asset_types",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.SearchAllResourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_all_iam_policies",
          "description": "Searches all IAM policies within the specified scope, such as a\nproject, folder, or organization. The caller must be granted the\n``cloudasset.assets.searchAllIamPolicies`` permission on the\ndesired scope, otherwise the request will be rejected.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_search_all_iam_policies():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.SearchAllIamPoliciesRequest(\n            scope=\"scope_value\",\n        )\n\n        # Make the request\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. A scope can be a project, a folder, or an organization. The search is limited to the IAM policies within the ``scope``. The caller must be granted the ```cloudasset.assets.searchAllIamPolicies`` <https://cloud.google.com/asset-inventory/docs/access-control#required_permissions>`__ permission on the desired scope.  The allowed values are:  -  projects/{PROJECT_ID} (e.g., \"projects/foo-bar\") -  projects/{PROJECT_NUMBER} (e.g., \"projects/12345678\") -  folders/{FOLDER_NUMBER} (e.g., \"folders/1234567\") -  organizations/{ORGANIZATION_NUMBER} (e.g., \"organizations/123456\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Optional. The query statement. See `how to construct a query <https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query>`__ for more information. If not specified or empty, it will search all the IAM policies within the specified ``scope``. Note that the query string is compared against each IAM policy binding, including its principals, roles, and IAM conditions. The returned IAM policies will only contain the bindings that match your query. To learn more about the IAM policy structure, see the `IAM policy documentation <https://cloud.google.com/iam/help/allow-policies/structure>`__.  Examples:  -  ``policy:amy@gmail.com`` to find IAM policy bindings that specify user \"amy@gmail.com\". -  ``policy:roles/compute.admin`` to find IAM policy bindings that specify the Compute Admin role. -  ``policy:comp*`` to find IAM policy bindings that contain \"comp\" as a prefix of any word in the binding. -  ``policy.role.permissions:storage.buckets.update`` to find IAM policy bindings that specify a role containing \"storage.buckets.update\" permission. Note that if callers don't have ``iam.roles.get`` access to a role's included permissions, policy bindings that specify this role will be dropped from the search results. -  ``policy.role.permissions:upd*`` to find IAM policy bindings that specify a role containing \"upd\" as a prefix of any word in the role permission. Note that if callers don't have ``iam.roles.get`` access to a role's included permissions, policy bindings that specify this role will be dropped from the search results. -  ``resource:organizations/123456`` to find IAM policy bindings that are set on \"organizations/123456\". -  ``resource=//cloudresourcemanager.googleapis.com/projects/myproject`` to find IAM policy bindings that are set on the project named \"myproject\". -  ``Important`` to find IAM policy bindings that contain \"Important\" as a word in any of the searchable fields (except for the included permissions). -  ``resource:(instance1 OR instance2) policy:amy`` to find IAM policy bindings that are set on resources \"instance1\" or \"instance2\" and also specify user \"amy\". -  ``roles:roles/compute.admin`` to find IAM policy bindings that specify the Compute Admin role. -  ``memberTypes:user`` to find IAM policy bindings that contain the principal type \"user\".  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.SearchAllIamPoliciesAsyncPager: Search all IAM policies response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.SearchAllIamPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_iam_policy",
          "description": "Analyzes IAM policies to answer which identities have\nwhat accesses on which resources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_analyze_iam_policy():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        analysis_query = asset_v1.IamPolicyAnalysisQuery()\n        analysis_query.scope = \"scope_value\"\n\n        request = asset_v1.AnalyzeIamPolicyRequest(\n            analysis_query=analysis_query,\n        )\n\n        # Make the request\n        response = await client.analyze_iam_policy(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_iam_policy_longrunning",
          "description": "Analyzes IAM policies asynchronously to answer which identities\nhave what accesses on which resources, and writes the analysis\nresults to a Google Cloud Storage or a BigQuery destination. For\nCloud Storage destination, the output format is the JSON format\nthat represents a\n[AnalyzeIamPolicyResponse][google.cloud.asset.v1.AnalyzeIamPolicyResponse].\nThis method implements the\n[google.longrunning.Operation][google.longrunning.Operation],\nwhich allows you to track the operation status. We recommend\nintervals of at least 2 seconds with exponential backoff retry\nto poll the operation result. The metadata contains the metadata\nfor the long-running operation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    # ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeIamPolicyLongrunningRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_move",
          "description": "Analyze moving a resource to a specified destination\nwithout kicking off the actual move. The analysis is\nbest effort depending on the user's permissions of\nviewing different hierarchical policies and\nconfigurations. The policies and configuration are\nsubject to change before the actual resource migration\ntakes place.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_analyze_move():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.AnalyzeMoveRequest(\n            resource=\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeMoveRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_assets",
          "description": "Issue a job that queries assets using a SQL statement compatible\nwith `BigQuery\nSQL <https://cloud.google.com/bigquery/docs/introduction-sql>`__.\n\nIf the query execution finishes within timeout and there's no\npagination, the full query results will be returned in the\n``QueryAssetsResponse``.\n\nOtherwise, full query results can be obtained by issuing extra\nrequests with the ``job_reference`` from the a previous\n``QueryAssets`` call.\n\nNote, the query result has approximately 10 GB limitation\nenforced by\n`BigQuery <https://cloud.google.com/bigquery/docs/best-practices-performance-output>`__.\nQueries return larger results will result in errors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://go",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.QueryAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_saved_query",
          "description": "Creates a saved query in a parent\nproject/folder/organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_create_saved_query():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.CreateSavedQueryRequest(\n            parent=\"parent_value\",\n            saved_query_id=\"saved_query_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_saved_query(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project/folder/organization where this saved_query should be created in. It can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\").  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "saved_query": {
                "type": "google.cloud.asset_v1.types.SavedQuery",
                "description": "Required. The saved_query details. The ``name`` field must be empty as it will be generated based on the parent and saved_query_id.  This corresponds to the ``saved_query`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "saved_query_id": {
                "type": "str",
                "description": "Required. The ID to use for the saved query, which must be unique in the specified parent. It will become the final component of the saved query's resource name.  This value should be 4-63 characters, and valid characters are ``[a-z][0-9]-``.  Notice that this field is required in the saved query creation, and the ``name`` field of the ``saved_query`` will be ignored.  This corresponds to the ``saved_query_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.SavedQuery: A saved query which can be shared with others or used later."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "saved_query",
              "saved_query_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.CreateSavedQueryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_saved_query",
          "description": "Gets details about a saved query.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_get_saved_query():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.GetSavedQueryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_saved_query(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.GetSavedQueryRequest, dict]]):\n        The request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the saved query and it must be in the format of:  -  projects/project_number/savedQueries/saved_query_id -  folders/folder_number/savedQueries/saved_query_id -  organizations/organization_number/savedQueries/saved_query_id  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.SavedQuery: A saved query which can be shared with others or used later."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.GetSavedQueryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_saved_queries",
          "description": "Lists all saved queries in a parent\nproject/folder/organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_list_saved_queries():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.ListSavedQueriesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_saved_queries(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent project/folder/organization whose savedQueries are to be listed. It can only be using project/folder/organization number (such as \"folders/12345\")\", or a project ID (such as \"projects/my-project-id\").  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.ListSavedQueriesAsyncPager: Response of listing saved queries.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.ListSavedQueriesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_saved_query",
          "description": "Updates a saved query.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_update_saved_query():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.UpdateSavedQueryRequest(\n        )\n\n        # Make the request\n        response = await client.update_saved_query(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.UpdateSavedQueryRequest, dict]]):\n        The request object. Request to update a sa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "saved_query": {
                "type": "google.cloud.asset_v1.types.SavedQuery",
                "description": "Required. The saved query to update.  The saved query's ``name`` field is used to identify the one to update, which has format as below:  -  projects/project_number/savedQueries/saved_query_id -  folders/folder_number/savedQueries/saved_query_id -  organizations/organization_number/savedQueries/saved_query_id  This corresponds to the ``saved_query`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.types.SavedQuery: A saved query which can be shared with others or used later."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "saved_query",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.UpdateSavedQueryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_saved_query",
          "description": "Deletes a saved query.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_delete_saved_query():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.DeleteSavedQueryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_saved_query(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.asset_v1.types.DeleteSavedQueryRequest, dict]]):\n        The request object. Request to delete a saved query.\n    name (:class:`str`):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the saved query to delete. It must be in the format of:  -  projects/project_number/savedQueries/saved_query_id -  folders/folder_number/savedQueries/saved_query_id -  organizations/organization_number/savedQueries/saved_query_id  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.DeleteSavedQueryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_get_effective_iam_policies",
          "description": "Gets effective IAM policies for a batch of resources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_batch_get_effective_iam_policies():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.BatchGetEffectiveIamPoliciesRequest(\n            scope=\"scope_value\",\n            names=['names_value1', 'names_value2'],\n        )\n\n        # Make the request\n        response = await client.batch_get_effective_iam_policies(request=request)\n\n        # Handle the response\n        print(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.BatchGetEffectiveIamPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_org_policies",
          "description": "Analyzes organization policies under a scope.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_analyze_org_policies():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.AnalyzeOrgPoliciesRequest(\n            scope=\"scope_value\",\n            constraint=\"constraint_value\",\n        )\n\n        # Make the request\n        page_result = client.analyze_org_policies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. The organization to scope the request. Only organization policies within the scope will be analyzed.  -  organizations/{ORGANIZATION_NUMBER} (e.g., \"organizations/123456\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "constraint": {
                "type": "str",
                "description": "Required. The name of the constraint to analyze organization policies for. The response only contains analyzed organization policies for the provided constraint.  This corresponds to the ``constraint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "The expression to filter [AnalyzeOrgPoliciesResponse.org_policy_results][google.cloud.asset.v1.AnalyzeOrgPoliciesResponse.org_policy_results]. Filtering is currently available for bare literal values and the following fields:  -  consolidated_policy.attached_resource -  consolidated_policy.rules.enforce  When filtering by a specific field, the only supported operator is ``=``. For example, filtering by consolidated_policy.attached_resource=\"//cloudresourcemanager.googleapis.com/folders/001\" will return all the Organization Policy results attached to \"folders/001\".  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.AnalyzeOrgPoliciesAsyncPager: The response message for [AssetService.AnalyzeOrgPolicies][google.cloud.asset.v1.AssetService.AnalyzeOrgPolicies].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "constraint",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeOrgPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_org_policy_governed_containers",
          "description": "Analyzes organization policies governed containers\n(projects, folders or organization) under a scope.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1\n\n    async def sample_analyze_org_policy_governed_containers():\n        # Create a client\n        client = asset_v1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = asset_v1.AnalyzeOrgPolicyGovernedContainersRequest(\n            scope=\"scope_value\",\n            constraint=\"constraint_value\",\n        )\n\n        # Make the request\n        page_result = client.analyze_org_policy_governed_containers(request=r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. The organization to scope the request. Only organization policies within the scope will be analyzed. The output containers will also be limited to the ones governed by those in-scope organization policies.  -  organizations/{ORGANIZATION_NUMBER} (e.g., \"organizations/123456\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "constraint": {
                "type": "str",
                "description": "Required. The name of the constraint to analyze governed containers for. The analysis only contains organization policies for the provided constraint.  This corresponds to the ``constraint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "The expression to filter [AnalyzeOrgPolicyGovernedContainersResponse.governed_containers][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedContainersResponse.governed_containers]. Filtering is currently available for bare literal values and the following fields:  -  parent -  consolidated_policy.rules.enforce  When filtering by a specific field, the only supported operator is ``=``. For example, filtering by parent=\"//cloudresourcemanager.googleapis.com/folders/001\" will return all the containers under \"folders/001\".  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.AnalyzeOrgPolicyGovernedContainersAsyncPager: The response message for [AssetService.AnalyzeOrgPolicyGovernedContainers][google.cloud.asset.v1.AssetService.AnalyzeOrgPolicyGovernedContainers].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "constraint",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeOrgPolicyGovernedContainersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_org_policy_governed_assets",
          "description": "Analyzes organization policies governed assets (Google Cloud\nresources or policies) under a scope. This RPC supports custom\nconstraints and the following canned constraints:\n\n-  constraints/ainotebooks.accessMode\n-  constraints/ainotebooks.disableFileDownloads\n-  constraints/ainotebooks.disableRootAccess\n-  constraints/ainotebooks.disableTerminal\n-  constraints/ainotebooks.environmentOptions\n-  constraints/ainotebooks.requireAutoUpgradeSchedule\n-  constraints/ainotebooks.restrictVpcNetworks\n-  constraints/compute.disableGuestAttributesAccess\n-  constraints/compute.disableInstanceDataAccessApis\n-  constraints/compute.disableNestedVirtualization\n-  constraints/compute.disableSerialPortAccess\n-  constraints/compute.disableSerialPortLogging\n-  constraints/compute.disableVpcExternalIpv6\n-  constraints/compute.requireOsLogin\n-  constraints/compute.requireShieldedVm\n-  constraints/compute.restrictLoadBalancerCreationForTypes\n-  constraints/compute.restrictProtocolForwardingCreationForTypes\n-  constraints/compute.res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. The organization to scope the request. Only organization policies within the scope will be analyzed. The output assets will also be limited to the ones governed by those in-scope organization policies.  -  organizations/{ORGANIZATION_NUMBER} (e.g., \"organizations/123456\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "constraint": {
                "type": "str",
                "description": "Required. The name of the constraint to analyze governed assets for. The analysis only contains analyzed organization policies for the provided constraint.  This corresponds to the ``constraint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "The expression to filter [AnalyzeOrgPolicyGovernedAssetsResponse.governed_assets][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.governed_assets].  For governed resources, filtering is currently available for bare literal values and the following fields:  -  governed_resource.project -  governed_resource.folders -  consolidated_policy.rules.enforce When filtering by ``governed_resource.project`` or ``consolidated_policy.rules.enforce``, the only supported operator is ``=``. When filtering by ``governed_resource.folders``, the supported operators are ``=`` and ``:``. For example, filtering by ``governed_resource.project=\"projects/12345678\"`` will return all the governed resources under \"projects/12345678\", including the project itself if applicable.  For governed IAM policies, filtering is currently available for bare literal values and the following fields:  -  governed_iam_policy.project -  governed_iam_policy.folders -  consolidated_policy.rules.enforce When filtering by ``governed_iam_policy.project`` or ``consolidated_policy.rules.enforce``, the only supported operator is ``=``. When filtering by ``governed_iam_policy.folders``, the supported operators are ``=`` and ``:``. For example, filtering by ``governed_iam_policy.folders:\"folders/12345678\"`` will return all the governed IAM policies under \"folders/001\".  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1.services.asset_service.pagers.AnalyzeOrgPolicyGovernedAssetsAsyncPager: The response message for [AssetService.AnalyzeOrgPolicyGovernedAssets][google.cloud.asset.v1.AssetService.AnalyzeOrgPolicyGovernedAssets].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "constraint",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "asset_service.AnalyzeOrgPolicyGovernedAssetsRequest"
          ]
        }
      }
    ]
  }
}