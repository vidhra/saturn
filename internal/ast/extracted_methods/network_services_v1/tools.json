{
  "DepService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_lb_traffic_extensions",
          "description": "Lists ``LbTrafficExtension`` resources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_lb_traffic_extensions():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListLbTrafficExtensionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_lb_traffic_extensions(request=request)\n\n        # Handle the response\n        async for response in page_r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the ``LbTrafficExtension`` resources are listed, specified in the following format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.dep_service.pagers.ListLbTrafficExtensionsAsyncPager: Message for response to listing LbTrafficExtension resources.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.ListLbTrafficExtensionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_lb_traffic_extension",
          "description": "Gets details of the specified ``LbTrafficExtension`` resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_lb_traffic_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetLbTrafficExtensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_lb_traffic_extension(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the ``LbTrafficExtension`` resource to get. Must be in the format ``projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.LbTrafficExtension: LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.GetLbTrafficExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_lb_traffic_extension",
          "description": "Creates a new ``LbTrafficExtension`` resource in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_lb_traffic_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lb_traffic_extension = network_services_v1.LbTrafficExtension()\n        lb_traffic_extension.name = \"name_value\"\n        lb_traffic_extension.forwarding_rules = ['forwarding_rules_value1', 'forwarding_rules_value2']\n        lb_traffic_extension.extension_chains.name ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the ``LbTrafficExtension`` resource. Must be in the format ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lb_traffic_extension": {
                "type": "google.cloud.network_services_v1.types.LbTrafficExtension",
                "description": "Required. ``LbTrafficExtension`` resource to be created. This corresponds to the ``lb_traffic_extension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lb_traffic_extension_id": {
                "type": "str",
                "description": "Required. User-provided ID of the ``LbTrafficExtension`` resource to be created.  This corresponds to the ``lb_traffic_extension_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.LbTrafficExtension` LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "lb_traffic_extension",
              "lb_traffic_extension_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.CreateLbTrafficExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_lb_traffic_extension",
          "description": "Updates the parameters of the specified ``LbTrafficExtension``\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_lb_traffic_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lb_traffic_extension = network_services_v1.LbTrafficExtension()\n        lb_traffic_extension.name = \"name_value\"\n        lb_traffic_extension.forwarding_rules = ['forwarding_rules_value1', 'forwarding_rules_value2']\n        lb_traffic_extension.extension_chains.name = \"nam",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "lb_traffic_extension": {
                "type": "google.cloud.network_services_v1.types.LbTrafficExtension",
                "description": "Required. ``LbTrafficExtension`` resource being updated. This corresponds to the ``lb_traffic_extension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Used to specify the fields to be overwritten in the ``LbTrafficExtension`` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not specify a mask, then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.LbTrafficExtension` LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "lb_traffic_extension",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.UpdateLbTrafficExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_lb_traffic_extension",
          "description": "Deletes the specified ``LbTrafficExtension`` resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_lb_traffic_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteLbTrafficExtensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_lb_traffic_extension(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``LbTrafficExtension`` resource to delete. Must be in the format ``projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.DeleteLbTrafficExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_lb_route_extensions",
          "description": "Lists ``LbRouteExtension`` resources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_lb_route_extensions():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListLbRouteExtensionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_lb_route_extensions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the ``LbRouteExtension`` resources are listed, specified in the following format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.dep_service.pagers.ListLbRouteExtensionsAsyncPager: Message for response to listing LbRouteExtension resources.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.ListLbRouteExtensionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_lb_route_extension",
          "description": "Gets details of the specified ``LbRouteExtension`` resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_lb_route_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetLbRouteExtensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_lb_route_extension(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the ``LbRouteExtension`` resource to get. Must be in the format ``projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.LbRouteExtension: LbRouteExtension is a resource that lets you control where traffic is routed to for a given request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.GetLbRouteExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_lb_route_extension",
          "description": "Creates a new ``LbRouteExtension`` resource in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_lb_route_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lb_route_extension = network_services_v1.LbRouteExtension()\n        lb_route_extension.name = \"name_value\"\n        lb_route_extension.forwarding_rules = ['forwarding_rules_value1', 'forwarding_rules_value2']\n        lb_route_extension.extension_chains.name = \"name_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the ``LbRouteExtension`` resource. Must be in the format ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lb_route_extension": {
                "type": "google.cloud.network_services_v1.types.LbRouteExtension",
                "description": "Required. ``LbRouteExtension`` resource to be created. This corresponds to the ``lb_route_extension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lb_route_extension_id": {
                "type": "str",
                "description": "Required. User-provided ID of the ``LbRouteExtension`` resource to be created.  This corresponds to the ``lb_route_extension_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.LbRouteExtension` LbRouteExtension is a resource that lets you control where traffic is routed to for a given request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "lb_route_extension",
              "lb_route_extension_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.CreateLbRouteExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_lb_route_extension",
          "description": "Updates the parameters of the specified ``LbRouteExtension``\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_lb_route_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lb_route_extension = network_services_v1.LbRouteExtension()\n        lb_route_extension.name = \"name_value\"\n        lb_route_extension.forwarding_rules = ['forwarding_rules_value1', 'forwarding_rules_value2']\n        lb_route_extension.extension_chains.name = \"name_value\"\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "lb_route_extension": {
                "type": "google.cloud.network_services_v1.types.LbRouteExtension",
                "description": "Required. ``LbRouteExtension`` resource being updated. This corresponds to the ``lb_route_extension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Used to specify the fields to be overwritten in the ``LbRouteExtension`` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not specify a mask, then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.LbRouteExtension` LbRouteExtension is a resource that lets you control where traffic is routed to for a given request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "lb_route_extension",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.UpdateLbRouteExtensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_lb_route_extension",
          "description": "Deletes the specified ``LbRouteExtension`` resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_lb_route_extension():\n        # Create a client\n        client = network_services_v1.DepServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteLbRouteExtensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_lb_route_extension(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``LbRouteExtension`` resource to delete. Must be in the format ``projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dep.DeleteLbRouteExtensionRequest"
          ]
        }
      }
    ]
  },
  "NetworkServices": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_endpoint_policies",
          "description": "Lists EndpointPolicies in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_endpoint_policies():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListEndpointPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_endpoint_policies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the EndpointPolicies should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListEndpointPoliciesAsyncPager: Response returned by the ListEndpointPolicies method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "endpoint_policy.ListEndpointPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_endpoint_policy",
          "description": "Gets details of a single EndpointPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_endpoint_policy():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetEndpointPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_endpoint_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_ser",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the EndpointPolicy to get. Must be in the format ``projects/*/locations/global/endpointPolicies/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.EndpointPolicy: EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "endpoint_policy.GetEndpointPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_endpoint_policy",
          "description": "Creates a new EndpointPolicy in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_endpoint_policy():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        endpoint_policy = network_services_v1.EndpointPolicy()\n        endpoint_policy.name = \"name_value\"\n        endpoint_policy.type_ = \"GRPC_SERVER\"\n\n        request = network_services_v1.CreateEndpointPolicyRequest(\n            parent=\"parent_value\",\n            endpoint_policy_id=\"endp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the EndpointPolicy. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "endpoint_policy": {
                "type": "google.cloud.network_services_v1.types.EndpointPolicy",
                "description": "Required. EndpointPolicy resource to be created.  This corresponds to the ``endpoint_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "endpoint_policy_id": {
                "type": "str",
                "description": "Required. Short name of the EndpointPolicy resource to be created. E.g. \"CustomECS\".  This corresponds to the ``endpoint_policy_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.EndpointPolicy` EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "endpoint_policy",
              "endpoint_policy_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_endpoint_policy.CreateEndpointPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_endpoint_policy",
          "description": "Updates the parameters of a single EndpointPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_endpoint_policy():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        endpoint_policy = network_services_v1.EndpointPolicy()\n        endpoint_policy.name = \"name_value\"\n        endpoint_policy.type_ = \"GRPC_SERVER\"\n\n        request = network_services_v1.UpdateEndpointPolicyRequest(\n            endpoint_policy=endpoint_policy,\n        )\n\n        # Make the request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "endpoint_policy": {
                "type": "google.cloud.network_services_v1.types.EndpointPolicy",
                "description": "Required. Updated EndpointPolicy resource.  This corresponds to the ``endpoint_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the EndpointPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.EndpointPolicy` EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "endpoint_policy",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_endpoint_policy.UpdateEndpointPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_endpoint_policy",
          "description": "Deletes a single EndpointPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_endpoint_policy():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteEndpointPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_endpoint_policy(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the EndpointPolicy to delete. Must be in the format ``projects/*/locations/global/endpointPolicies/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "endpoint_policy.DeleteEndpointPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_gateways",
          "description": "Lists Gateways in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_gateways():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListGatewaysRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_gateways(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the Gateways should be listed, specified in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListGatewaysAsyncPager: Response returned by the ListGateways method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gateway.ListGatewaysRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_gateway",
          "description": "Gets details of a single Gateway.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_gateway():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetGatewayRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_gateway(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetGatewayReque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the Gateway to get. Must be in the format ``projects/*/locations/*/gateways/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.Gateway: Gateway represents the configuration for a proxy, typically a load balancer. It captures the ip:port over which the services are exposed by the proxy, along with any policy configurations. Routes have reference to to Gateways to dictate how requests should be routed by this Gateway."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gateway.GetGatewayRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_gateway",
          "description": "Creates a new Gateway in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_gateway():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        gateway = network_services_v1.Gateway()\n        gateway.name = \"name_value\"\n        gateway.ports = [569, 570]\n        gateway.scope = \"scope_value\"\n\n        request = network_services_v1.CreateGatewayRequest(\n            parent=\"parent_value\",\n            gateway_id=\"gateway_id_value\",\n           ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the Gateway. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "gateway": {
                "type": "google.cloud.network_services_v1.types.Gateway",
                "description": "Required. Gateway resource to be created.  This corresponds to the ``gateway`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "gateway_id": {
                "type": "str",
                "description": "Required. Short name of the Gateway resource to be created.  This corresponds to the ``gateway_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.Gateway` Gateway represents the configuration for a proxy, typically a load balancer. It captures the ip:port over which the services are exposed by the proxy, along with any policy configurations. Routes have reference to to Gateways to dictate how requests should be routed by this Gateway."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "gateway",
              "gateway_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_gateway.CreateGatewayRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_gateway",
          "description": "Updates the parameters of a single Gateway.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_gateway():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        gateway = network_services_v1.Gateway()\n        gateway.name = \"name_value\"\n        gateway.ports = [569, 570]\n        gateway.scope = \"scope_value\"\n\n        request = network_services_v1.UpdateGatewayRequest(\n            gateway=gateway,\n        )\n\n        # Make the request\n        operation = client.update",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "gateway": {
                "type": "google.cloud.network_services_v1.types.Gateway",
                "description": "Required. Updated Gateway resource. This corresponds to the ``gateway`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the Gateway resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.Gateway` Gateway represents the configuration for a proxy, typically a load balancer. It captures the ip:port over which the services are exposed by the proxy, along with any policy configurations. Routes have reference to to Gateways to dictate how requests should be routed by this Gateway."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "gateway",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_gateway.UpdateGatewayRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_gateway",
          "description": "Deletes a single Gateway.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_gateway():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteGatewayRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_gateway(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the Gateway to delete. Must be in the format ``projects/*/locations/*/gateways/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gateway.DeleteGatewayRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_grpc_routes",
          "description": "Lists GrpcRoutes in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_grpc_routes():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListGrpcRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_grpc_routes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the GrpcRoutes should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListGrpcRoutesAsyncPager: Response returned by the ListGrpcRoutes method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "grpc_route.ListGrpcRoutesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_grpc_route",
          "description": "Gets details of a single GrpcRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_grpc_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetGrpcRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_grpc_route(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetGr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the GrpcRoute to get. Must be in the format ``projects/*/locations/global/grpcRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.GrpcRoute: GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or Gateway resource is routed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "grpc_route.GetGrpcRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_grpc_route",
          "description": "Creates a new GrpcRoute in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_grpc_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        grpc_route = network_services_v1.GrpcRoute()\n        grpc_route.name = \"name_value\"\n        grpc_route.hostnames = ['hostnames_value1', 'hostnames_value2']\n\n        request = network_services_v1.CreateGrpcRouteRequest(\n            parent=\"parent_value\",\n            grpc_route_id=\"grpc_route_id",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the GrpcRoute. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "grpc_route": {
                "type": "google.cloud.network_services_v1.types.GrpcRoute",
                "description": "Required. GrpcRoute resource to be created.  This corresponds to the ``grpc_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "grpc_route_id": {
                "type": "str",
                "description": "Required. Short name of the GrpcRoute resource to be created.  This corresponds to the ``grpc_route_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.GrpcRoute` GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or Gateway resource is routed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "grpc_route",
              "grpc_route_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_grpc_route.CreateGrpcRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_grpc_route",
          "description": "Updates the parameters of a single GrpcRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_grpc_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        grpc_route = network_services_v1.GrpcRoute()\n        grpc_route.name = \"name_value\"\n        grpc_route.hostnames = ['hostnames_value1', 'hostnames_value2']\n\n        request = network_services_v1.UpdateGrpcRouteRequest(\n            grpc_route=grpc_route,\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "grpc_route": {
                "type": "google.cloud.network_services_v1.types.GrpcRoute",
                "description": "Required. Updated GrpcRoute resource. This corresponds to the ``grpc_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the GrpcRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.GrpcRoute` GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or Gateway resource is routed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "grpc_route",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_grpc_route.UpdateGrpcRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_grpc_route",
          "description": "Deletes a single GrpcRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_grpc_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteGrpcRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_grpc_route(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the GrpcRoute to delete. Must be in the format ``projects/*/locations/global/grpcRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "grpc_route.DeleteGrpcRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_http_routes",
          "description": "Lists HttpRoute in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_http_routes():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListHttpRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_http_routes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the HttpRoutes should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListHttpRoutesAsyncPager: Response returned by the ListHttpRoutes method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "http_route.ListHttpRoutesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_http_route",
          "description": "Gets details of a single HttpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_http_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetHttpRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_http_route(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetHt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the HttpRoute to get. Must be in the format ``projects/*/locations/global/httpRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.HttpRoute: HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "http_route.GetHttpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_http_route",
          "description": "Creates a new HttpRoute in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_http_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        http_route = network_services_v1.HttpRoute()\n        http_route.name = \"name_value\"\n        http_route.hostnames = ['hostnames_value1', 'hostnames_value2']\n\n        request = network_services_v1.CreateHttpRouteRequest(\n            parent=\"parent_value\",\n            http_route_id=\"http_route_id",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the HttpRoute. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "http_route": {
                "type": "google.cloud.network_services_v1.types.HttpRoute",
                "description": "Required. HttpRoute resource to be created.  This corresponds to the ``http_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "http_route_id": {
                "type": "str",
                "description": "Required. Short name of the HttpRoute resource to be created.  This corresponds to the ``http_route_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.HttpRoute` HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "http_route",
              "http_route_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_http_route.CreateHttpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_http_route",
          "description": "Updates the parameters of a single HttpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_http_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        http_route = network_services_v1.HttpRoute()\n        http_route.name = \"name_value\"\n        http_route.hostnames = ['hostnames_value1', 'hostnames_value2']\n\n        request = network_services_v1.UpdateHttpRouteRequest(\n            http_route=http_route,\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "http_route": {
                "type": "google.cloud.network_services_v1.types.HttpRoute",
                "description": "Required. Updated HttpRoute resource. This corresponds to the ``http_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the HttpRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.HttpRoute` HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "http_route",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_http_route.UpdateHttpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_http_route",
          "description": "Deletes a single HttpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_http_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteHttpRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_http_route(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the HttpRoute to delete. Must be in the format ``projects/*/locations/global/httpRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "http_route.DeleteHttpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tcp_routes",
          "description": "Lists TcpRoute in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_tcp_routes():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListTcpRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tcp_routes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the TcpRoutes should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListTcpRoutesAsyncPager: Response returned by the ListTcpRoutes method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tcp_route.ListTcpRoutesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_tcp_route",
          "description": "Gets details of a single TcpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_tcp_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetTcpRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_tcp_route(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetTcpRou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the TcpRoute to get. Must be in the format ``projects/*/locations/global/tcpRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.TcpRoute: TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tcp_route.GetTcpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_tcp_route",
          "description": "Creates a new TcpRoute in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_tcp_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        tcp_route = network_services_v1.TcpRoute()\n        tcp_route.name = \"name_value\"\n\n        request = network_services_v1.CreateTcpRouteRequest(\n            parent=\"parent_value\",\n            tcp_route_id=\"tcp_route_id_value\",\n            tcp_route=tcp_route,\n        )\n\n        # Make the request\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the TcpRoute. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tcp_route": {
                "type": "google.cloud.network_services_v1.types.TcpRoute",
                "description": "Required. TcpRoute resource to be created.  This corresponds to the ``tcp_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tcp_route_id": {
                "type": "str",
                "description": "Required. Short name of the TcpRoute resource to be created.  This corresponds to the ``tcp_route_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.TcpRoute` TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "tcp_route",
              "tcp_route_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_tcp_route.CreateTcpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_tcp_route",
          "description": "Updates the parameters of a single TcpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_tcp_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        tcp_route = network_services_v1.TcpRoute()\n        tcp_route.name = \"name_value\"\n\n        request = network_services_v1.UpdateTcpRouteRequest(\n            tcp_route=tcp_route,\n        )\n\n        # Make the request\n        operation = client.update_tcp_route(request=request)\n\n        print(\"Waiting for oper",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "tcp_route": {
                "type": "google.cloud.network_services_v1.types.TcpRoute",
                "description": "Required. Updated TcpRoute resource. This corresponds to the ``tcp_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the TcpRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.TcpRoute` TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "tcp_route",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_tcp_route.UpdateTcpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_tcp_route",
          "description": "Deletes a single TcpRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_tcp_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteTcpRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_tcp_route(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the TcpRoute to delete. Must be in the format ``projects/*/locations/global/tcpRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tcp_route.DeleteTcpRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tls_routes",
          "description": "Lists TlsRoute in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_tls_routes():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListTlsRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tls_routes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the TlsRoutes should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListTlsRoutesAsyncPager: Response returned by the ListTlsRoutes method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tls_route.ListTlsRoutesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_tls_route",
          "description": "Gets details of a single TlsRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_tls_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetTlsRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_tls_route(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetTlsRou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the TlsRoute to get. Must be in the format ``projects/*/locations/global/tlsRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.TlsRoute: TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tls_route.GetTlsRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_tls_route",
          "description": "Creates a new TlsRoute in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_tls_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        tls_route = network_services_v1.TlsRoute()\n        tls_route.name = \"name_value\"\n        tls_route.rules.action.destinations.service_name = \"service_name_value\"\n\n        request = network_services_v1.CreateTlsRouteRequest(\n            parent=\"parent_value\",\n            tls_route_id=\"tls_route_id",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the TlsRoute. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tls_route": {
                "type": "google.cloud.network_services_v1.types.TlsRoute",
                "description": "Required. TlsRoute resource to be created.  This corresponds to the ``tls_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tls_route_id": {
                "type": "str",
                "description": "Required. Short name of the TlsRoute resource to be created.  This corresponds to the ``tls_route_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.TlsRoute` TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "tls_route",
              "tls_route_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_tls_route.CreateTlsRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_tls_route",
          "description": "Updates the parameters of a single TlsRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_tls_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        tls_route = network_services_v1.TlsRoute()\n        tls_route.name = \"name_value\"\n        tls_route.rules.action.destinations.service_name = \"service_name_value\"\n\n        request = network_services_v1.UpdateTlsRouteRequest(\n            tls_route=tls_route,\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "tls_route": {
                "type": "google.cloud.network_services_v1.types.TlsRoute",
                "description": "Required. Updated TlsRoute resource. This corresponds to the ``tls_route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the TlsRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.TlsRoute` TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "tls_route",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_tls_route.UpdateTlsRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_tls_route",
          "description": "Deletes a single TlsRoute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_tls_route():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteTlsRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_tls_route(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the TlsRoute to delete. Must be in the format ``projects/*/locations/global/tlsRoutes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tls_route.DeleteTlsRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_service_bindings",
          "description": "Lists ServiceBinding in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_service_bindings():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListServiceBindingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_service_bindings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the ServiceBindings should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListServiceBindingsAsyncPager: Response returned by the ListServiceBindings method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service_binding.ListServiceBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service_binding",
          "description": "Gets details of a single ServiceBinding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_service_binding():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetServiceBindingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_service_binding(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_ser",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the ServiceBinding to get. Must be in the format ``projects/*/locations/global/serviceBindings/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.ServiceBinding: ServiceBinding is the resource that defines a Service Directory Service to be used in a BackendService resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service_binding.GetServiceBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service_binding",
          "description": "Creates a new ServiceBinding in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_service_binding():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        service_binding = network_services_v1.ServiceBinding()\n        service_binding.name = \"name_value\"\n        service_binding.service = \"service_value\"\n\n        request = network_services_v1.CreateServiceBindingRequest(\n            parent=\"parent_value\",\n            service_binding_id=\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the ServiceBinding. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "service_binding": {
                "type": "google.cloud.network_services_v1.types.ServiceBinding",
                "description": "Required. ServiceBinding resource to be created.  This corresponds to the ``service_binding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "service_binding_id": {
                "type": "str",
                "description": "Required. Short name of the ServiceBinding resource to be created.  This corresponds to the ``service_binding_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.ServiceBinding` ServiceBinding is the resource that defines a Service Directory Service to be used in a BackendService resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "service_binding",
              "service_binding_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_service_binding.CreateServiceBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_service_binding",
          "description": "Deletes a single ServiceBinding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_service_binding():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteServiceBindingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_service_binding(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the ServiceBinding to delete. Must be in the format ``projects/*/locations/global/serviceBindings/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service_binding.DeleteServiceBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_meshes",
          "description": "Lists Meshes in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_list_meshes():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.ListMeshesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_meshes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the Meshes should be listed, specified in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.services.network_services.pagers.ListMeshesAsyncPager: Response returned by the ListMeshes method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "mesh.ListMeshesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_mesh",
          "description": "Gets details of a single Mesh.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_get_mesh():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.GetMeshRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_mesh(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.network_services_v1.types.GetMeshRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the Mesh to get. Must be in the format ``projects/*/locations/global/meshes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.network_services_v1.types.Mesh: Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "mesh.GetMeshRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_mesh",
          "description": "Creates a new Mesh in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_create_mesh():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        mesh = network_services_v1.Mesh()\n        mesh.name = \"name_value\"\n\n        request = network_services_v1.CreateMeshRequest(\n            parent=\"parent_value\",\n            mesh_id=\"mesh_id_value\",\n            mesh=mesh,\n        )\n\n        # Make the request\n        operation = client.create_mesh(request=",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the Mesh. Must be in the format ``projects/*/locations/global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mesh": {
                "type": "google.cloud.network_services_v1.types.Mesh",
                "description": "Required. Mesh resource to be created.  This corresponds to the ``mesh`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mesh_id": {
                "type": "str",
                "description": "Required. Short name of the Mesh resource to be created.  This corresponds to the ``mesh_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.Mesh` Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "mesh",
              "mesh_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_mesh.CreateMeshRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_mesh",
          "description": "Updates the parameters of a single Mesh.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_update_mesh():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        mesh = network_services_v1.Mesh()\n        mesh.name = \"name_value\"\n\n        request = network_services_v1.UpdateMeshRequest(\n            mesh=mesh,\n        )\n\n        # Make the request\n        operation = client.update_mesh(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "mesh": {
                "type": "google.cloud.network_services_v1.types.Mesh",
                "description": "Required. Updated Mesh resource. This corresponds to the ``mesh`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the Mesh resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.network_services_v1.types.Mesh` Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "mesh",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcn_mesh.UpdateMeshRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_mesh",
          "description": "Deletes a single Mesh.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import network_services_v1\n\n    async def sample_delete_mesh():\n        # Create a client\n        client = network_services_v1.NetworkServicesAsyncClient()\n\n        # Initialize request argument(s)\n        request = network_services_v1.DeleteMeshRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_mesh(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A name of the Mesh to delete. Must be in the format ``projects/*/locations/global/meshes/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "mesh.DeleteMeshRequest"
          ]
        }
      }
    ]
  }
}