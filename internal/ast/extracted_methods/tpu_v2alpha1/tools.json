{
  "Tpu": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_nodes",
          "description": "Lists nodes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_list_nodes():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.ListNodesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_nodes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.ListNodesRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.services.tpu.pagers.ListNodesAsyncPager: Response for [ListNodes][google.cloud.tpu.v2alpha1.Tpu.ListNodes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.ListNodesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_node",
          "description": "Gets the details of a node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_get_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GetNodeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_node(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.GetNodeRequest, dict]]):\n        The request object. Request for\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.types.Node: A TPU instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GetNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_node",
          "description": "Creates a node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_create_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        node = tpu_v2alpha1.Node()\n        node.runtime_version = \"runtime_version_value\"\n\n        request = tpu_v2alpha1.CreateNodeRequest(\n            parent=\"parent_value\",\n            node=node,\n        )\n\n        # Make the request\n        operation = client.create_node(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "node": {
                "type": "google.cloud.tpu_v2alpha1.types.Node",
                "description": "Required. The node. This corresponds to the ``node`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "node_id": {
                "type": "str",
                "description": "The unqualified resource name. This corresponds to the ``node_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.tpu_v2alpha1.types.Node` A TPU instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "node",
              "node_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.CreateNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_node",
          "description": "Deletes a node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_delete_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.DeleteNodeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_node(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.DeleteNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_node",
          "description": "Stops a node. This operation is only available with\nsingle TPU nodes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_stop_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.StopNodeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_node(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.StopNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_node",
          "description": "Starts a node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_start_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.StartNodeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_node(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.StartNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_node",
          "description": "Updates the configurations of a node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_update_node():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        node = tpu_v2alpha1.Node()\n        node.runtime_version = \"runtime_version_value\"\n\n        request = tpu_v2alpha1.UpdateNodeRequest(\n            node=node,\n        )\n\n        # Make the request\n        operation = client.update_node(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "node": {
                "type": "google.cloud.tpu_v2alpha1.types.Node",
                "description": "Required. The node. Only fields specified in update_mask are updated.  This corresponds to the ``node`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields from [Node][Tpu.Node] to update. Supported fields: [description, tags, labels, metadata, network_config.enable_external_ips].  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.tpu_v2alpha1.types.Node` A TPU instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "node",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.UpdateNodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_queued_resources",
          "description": "Lists queued resources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_list_queued_resources():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.ListQueuedResourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_queued_resources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.services.tpu.pagers.ListQueuedResourcesAsyncPager: Response for [ListQueuedResources][google.cloud.tpu.v2alpha1.Tpu.ListQueuedResources].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.ListQueuedResourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_queued_resource",
          "description": "Gets details of a queued resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_get_queued_resource():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GetQueuedResourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_queued_resource(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.GetQueuedResourceRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.types.QueuedResource: A QueuedResource represents a request for resources that will be placed in a queue and fulfilled when the necessary resources are available."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GetQueuedResourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_queued_resource",
          "description": "Creates a QueuedResource TPU instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_create_queued_resource():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.CreateQueuedResourceRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_queued_resource(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "queued_resource": {
                "type": "google.cloud.tpu_v2alpha1.types.QueuedResource",
                "description": "Required. The queued resource. This corresponds to the ``queued_resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "queued_resource_id": {
                "type": "str",
                "description": "The unqualified resource name. Should follow the ``^[A-Za-z0-9_.~+%-]+$`` regex format.  This corresponds to the ``queued_resource_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.tpu_v2alpha1.types.QueuedResource` A QueuedResource represents a request for resources that will be placed in a queue and fulfilled when the necessary resources are available."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "queued_resource",
              "queued_resource_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.CreateQueuedResourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_queued_resource",
          "description": "Deletes a QueuedResource TPU instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_delete_queued_resource():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.DeleteQueuedResourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_queued_resource(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        prin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.tpu_v2alpha1.types.QueuedResource` A QueuedResource represents a request for resources that will be placed in a queue and fulfilled when the necessary resources are available."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.DeleteQueuedResourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_queued_resource",
          "description": "Resets a QueuedResource TPU instance\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_reset_queued_resource():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.ResetQueuedResourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.reset_queued_resource(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the queued resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.tpu_v2alpha1.types.QueuedResource` A QueuedResource represents a request for resources that will be placed in a queue and fulfilled when the necessary resources are available."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.ResetQueuedResourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_service_identity",
          "description": "Generates the Cloud TPU service identity for the\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_generate_service_identity():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GenerateServiceIdentityRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.generate_service_identity(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GenerateServiceIdentityRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_accelerator_types",
          "description": "Lists accelerator types supported by this API.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_list_accelerator_types():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.ListAcceleratorTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_accelerator_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.services.tpu.pagers.ListAcceleratorTypesAsyncPager: Response for [ListAcceleratorTypes][google.cloud.tpu.v2alpha1.Tpu.ListAcceleratorTypes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.ListAcceleratorTypesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_accelerator_type",
          "description": "Gets AcceleratorType.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_get_accelerator_type():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GetAcceleratorTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_accelerator_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.GetAcceleratorTypeRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.types.AcceleratorType: A accelerator type that a Node can be configured with."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GetAcceleratorTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_runtime_versions",
          "description": "Lists runtime versions supported by this API.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_list_runtime_versions():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.ListRuntimeVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_runtime_versions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.services.tpu.pagers.ListRuntimeVersionsAsyncPager: Response for [ListRuntimeVersions][google.cloud.tpu.v2alpha1.Tpu.ListRuntimeVersions].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.ListRuntimeVersionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_runtime_version",
          "description": "Gets a runtime version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_get_runtime_version():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GetRuntimeVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_runtime_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.GetRuntimeVersionRequest, dict]]):\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.tpu_v2alpha1.types.RuntimeVersion: A runtime version that a Node can be configured with."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GetRuntimeVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_guest_attributes",
          "description": "Retrieves the guest attributes for the node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_get_guest_attributes():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.GetGuestAttributesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_guest_attributes(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tpu_v2alpha1.types.GetGuestAttributes",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.GetGuestAttributesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "simulate_maintenance_event",
          "description": "Simulates a maintenance event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import tpu_v2alpha1\n\n    async def sample_simulate_maintenance_event():\n        # Create a client\n        client = tpu_v2alpha1.TpuAsyncClient()\n\n        # Initialize request argument(s)\n        request = tpu_v2alpha1.SimulateMaintenanceEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.simulate_maintenance_event(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_tpu.SimulateMaintenanceEventRequest"
          ]
        }
      }
    ]
  }
}