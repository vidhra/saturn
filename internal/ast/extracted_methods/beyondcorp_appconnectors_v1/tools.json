{
  "AppConnectorsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_app_connectors",
          "description": "Lists AppConnectors in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_list_app_connectors():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnectors_v1.ListAppConnectorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_app_connectors(request=request)\n\n        # Handle the response\n        async for response in page_result",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the AppConnector location using the form: ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.beyondcorp_appconnectors_v1.services.app_connectors_service.pagers.ListAppConnectorsAsyncPager: Response message for BeyondCorp.ListAppConnectors. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.ListAppConnectorsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_app_connector",
          "description": "Gets details of a single AppConnector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_get_app_connector():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnectors_v1.GetAppConnectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_app_connector(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. BeyondCorp AppConnector name using the form: ``projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.beyondcorp_appconnectors_v1.types.AppConnector: A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.GetAppConnectorRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_app_connector",
          "description": "Creates a new AppConnector in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_create_app_connector():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        app_connector = beyondcorp_appconnectors_v1.AppConnector()\n        app_connector.name = \"name_value\"\n\n        request = beyondcorp_appconnectors_v1.CreateAppConnectorRequest(\n            parent=\"parent_value\",\n            app_connector=app_connector,\n        )\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource project name of the AppConnector location using the form: ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "app_connector": {
                "type": "google.cloud.beyondcorp_appconnectors_v1.types.AppConnector",
                "description": "Required. A BeyondCorp AppConnector resource.  This corresponds to the ``app_connector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "app_connector_id": {
                "type": "str",
                "description": "Optional. User-settable AppConnector resource ID.  -  Must start with a letter. -  Must contain between 4-63 characters from ``/[a-z][0-9]-/``. -  Must end with a number or a letter.  This corresponds to the ``app_connector_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.beyondcorp_appconnectors_v1.types.AppConnector` A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "app_connector",
              "app_connector_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.CreateAppConnectorRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_app_connector",
          "description": "Updates the parameters of a single AppConnector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_update_app_connector():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        app_connector = beyondcorp_appconnectors_v1.AppConnector()\n        app_connector.name = \"name_value\"\n\n        request = beyondcorp_appconnectors_v1.UpdateAppConnectorRequest(\n            app_connector=app_connector,\n        )\n\n        # Make the request\n        operation = clie",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "app_connector": {
                "type": "google.cloud.beyondcorp_appconnectors_v1.types.AppConnector",
                "description": "Required. AppConnector message with updated fields. Only supported fields specified in update_mask are updated.  This corresponds to the ``app_connector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnector]:  -  ``labels`` -  ``display_name``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.beyondcorp_appconnectors_v1.types.AppConnector` A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "app_connector",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.UpdateAppConnectorRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_app_connector",
          "description": "Deletes a single AppConnector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_delete_app_connector():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnectors_v1.DeleteAppConnectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_app_connector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. BeyondCorp AppConnector name using the form: ``projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.DeleteAppConnectorRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "report_status",
          "description": "Report status for a given connector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnectors_v1\n\n    async def sample_report_status():\n        # Create a client\n        client = beyondcorp_appconnectors_v1.AppConnectorsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        resource_info = beyondcorp_appconnectors_v1.ResourceInfo()\n        resource_info.id = \"id_value\"\n\n        request = beyondcorp_appconnectors_v1.ReportStatusRequest(\n            app_connector=\"app_connector_value\",\n            resource_info=resource_info,\n        )\n\n        # Make the request\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "app_connector": {
                "type": "str",
                "description": "Required. BeyondCorp Connector name using the form: ``projects/{project_id}/locations/{location_id}/connectors/{connector}``  This corresponds to the ``app_connector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource_info": {
                "type": "google.cloud.beyondcorp_appconnectors_v1.types.ResourceInfo",
                "description": "Required. Resource info of the connector.  This corresponds to the ``resource_info`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.beyondcorp_appconnectors_v1.types.AppConnector` A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "app_connector",
              "resource_info",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "app_connectors_service.ReportStatusRequest"
          ]
        }
      }
    ]
  }
}