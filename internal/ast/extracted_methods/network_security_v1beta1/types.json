{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-network-security/google/cloud/network_security_v1beta1/types/authorization_policy.py": [
    {
      "type": "function",
      "name": "ListAuthorizationPoliciesRequest",
      "description": "Request used with the ListAuthorizationPolicies method.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which the\n        AuthorizationPolicies should be listed, specified in the\n        format ``projects/{project}/locations/{location}``.\n    page_size (int):\n        Maximum number of AuthorizationPolicies to\n        return per call.\n    page_token (str):\n        The value returned by the last\n        ``ListAuthorizationPoliciesResponse`` Indicates that this is\n        a continuation of a prior ``ListAuthorizationPolicies``\n        call, and that the system should return the next page of\n        data.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The project and location from which the AuthorizationPolicies should be listed, specified in the format ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of AuthorizationPolicies to return per call.",
            "type": "integer"
          },
          "page_token": {
            "description": "The value returned by the last ``ListAuthorizationPoliciesResponse`` Indicates that this is a continuation of a prior ``ListAuthorizationPolicies`` call, and that the system should return the next page of data.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetAuthorizationPolicyRequest",
      "description": "Request used by the GetAuthorizationPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the AuthorizationPolicy to get. Must be\n        in the format\n        ``projects/{project}/locations/{location}/authorizationPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the AuthorizationPolicy to get. Must be in the format ``projects/{project}/locations/{location}/authorizationPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateAuthorizationPolicyRequest",
      "description": "Request used by the CreateAuthorizationPolicy method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the AuthorizationPolicy.\n        Must be in the format\n        ``projects/{project}/locations/{location}``.\n    authorization_policy_id (str):\n        Required. Short name of the AuthorizationPolicy resource to\n        be created. This value should be 1-63 characters long,\n        containing only letters, numbers, hyphens, and underscores,\n        and should not start with a number. E.g. \"authz_policy\".\n    authorization_policy (google.cloud.network_security_v1beta1.types.AuthorizationPolicy):\n        Required. AuthorizationPolicy resource to be\n        created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the AuthorizationPolicy. Must be in the format ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "authorization_policy_id": {
            "description": "Required. Short name of the AuthorizationPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. \"authz_policy\".",
            "type": "string"
          },
          "authorization_policy": {
            "description": "Required. AuthorizationPolicy resource to be created.",
            "reference": "google.cloud.network_security_v1beta1.types.AuthorizationPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the AuthorizationPolicy resource. It matches pattern ``projects/{project}/locations/{location}/authorizationPolicies/<authorization_policy>``.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Set of label tags associated with the AuthorizationPolicy resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "action": {
                  "description": "Required. The action to take when a rule match is found. Possible values are \"ALLOW\" or \"DENY\".",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.AuthorizationPolicy.Action",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "container_name": {
                        "description": "An optional name for the container. The container hostname will be set to this name, making it useful for inter-container communication. The name must contain only upper and lowercase alphanumeric characters and hyphens and cannot start with a hyphen.",
                        "type": "string"
                      },
                      "image_uri": {
                        "description": "Required. The URI to pull the container image from. Note that all images referenced by actions in the pipeline are pulled before the first action runs. If multiple actions reference the same image, it is only pulled once, ensuring that the same image is used for all actions in a single pipeline.  The image URI can be either a complete host and image specification (e.g., quay.io/biocontainers/samtools), a library and image name (e.g., google/cloud-sdk) or a bare image name ('bash') to pull from the default library. No schema is required in any of these cases.  If the specified image is not public, the service account specified for the Virtual Machine must have access to pull the images from GCR, or appropriate credentials must be specified in the [google.cloud.lifesciences.v2beta.Action.credentials][google.cloud.lifesciences.v2beta.Action.credentials] field.",
                        "type": "string"
                      },
                      "commands": {
                        "description": "If specified, overrides the ``CMD`` specified in the container. If the container also has an ``ENTRYPOINT`` the values are used as entrypoint arguments. Otherwise, they are used as a command and arguments to run inside the container.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "entrypoint": {
                        "description": "If specified, overrides the ``ENTRYPOINT`` specified in the container.",
                        "type": "string"
                      },
                      "environment": {
                        "description": "The environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  In addition to the values passed here, a few other values are automatically injected into the environment. These cannot be hidden or overwritten.  ``GOOGLE_PIPELINE_FAILED`` will be set to \"1\" if the pipeline failed because an action has exited with a non-zero status (and did not have the ``IGNORE_EXIT_STATUS`` flag set). This can be used to determine if additional debug or logging actions should execute.  ``GOOGLE_LAST_EXIT_STATUS`` will be set to the exit status of the last non-background action that executed. This can be used by workflow engine authors to determine whether an individual action has succeeded or failed.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "encrypted_environment": {
                        "description": "The encrypted environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  The secret must decrypt to a JSON-encoded dictionary where key-value pairs serve as environment variable names and their values. The decoded environment variables can overwrite the values specified by the ``environment`` field.",
                        "type": "object",
                        "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key_name": {
                              "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                              "type": "string"
                            },
                            "cipher_text": {
                              "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "pid_namespace": {
                        "description": "An optional identifier for a PID namespace to run the action inside. Multiple actions should use the same string to share a namespace.  If unspecified, a separate isolated namespace is used.",
                        "type": "string"
                      },
                      "port_mappings": {
                        "description": "A map of containers to host port mappings for this container. If the container already specifies exposed ports, use the ``PUBLISH_EXPOSED_PORTS`` flag instead.  The host port number must be less than 65536. If it is zero, an unused random port is assigned. To determine the resulting port number, consult the ``ContainerStartedEvent`` in the operation metadata.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "integer"
                        }
                      },
                      "mounts": {
                        "description": "A list of mounts to make available to the action.  In addition to the values specified here, every action has a special virtual disk mounted under ``/google`` that contains log files and other operational components.  .. raw:: html  <ul> <li><code>/google/logs</code> All logs written during the pipeline execution.</li> <li><code>/google/logs/output</code> The combined standard output and standard error of all actions run as part of the pipeline execution.</li> <li><code>/google/logs/action/*/stdout</code> The complete contents of each individual action's standard output.</li> <li><code>/google/logs/action/*/stderr</code> The complete contents of each individual action's standard error output.</li> </ul>",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.lifesciences_v2beta.types.Mount",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "disk": {
                                "description": "The name of the disk to mount, as specified in the resources section.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to mount the disk inside the container.",
                                "type": "string"
                              },
                              "read_only": {
                                "description": "If true, the disk is mounted read-only inside the container.",
                                "type": "boolean",
                                "output_only": true
                              }
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "Labels to associate with the action. This field is provided to assist workflow engine authors in identifying actions (for example, to indicate what sort of action they perform, such as localization or debugging). They are returned in the operation metadata, but are otherwise ignored.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "credentials": {
                        "description": "If the specified image is hosted on a private registry other than Google Container Registry, the credentials required to pull the image must be specified here as an encrypted secret.  The secret must decrypt to a JSON-encoded dictionary containing both ``username`` and ``password`` keys.",
                        "type": "object",
                        "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key_name": {
                              "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                              "type": "string"
                            },
                            "cipher_text": {
                              "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "timeout": {
                        "description": "The maximum amount of time to give the action to complete. If the action fails to complete before the timeout, it will be terminated and the exit status will be non-zero. The pipeline will continue or terminate based on the rules defined by the ``ALWAYS_RUN`` and ``IGNORE_EXIT_STATUS`` flags.",
                        "type": "object",
                        "reference": "google.protobuf.duration_pb2.Duration",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "ignore_exit_status": {
                        "description": "Normally, a non-zero exit status causes the pipeline to fail. This flag allows execution of other actions to continue instead.",
                        "type": "boolean"
                      },
                      "run_in_background": {
                        "description": "This flag allows an action to continue running in the background while executing subsequent actions. This is useful to provide services to other actions (or to provide debugging support tools like SSH servers).",
                        "type": "boolean"
                      },
                      "always_run": {
                        "description": "By default, after an action fails, no further actions are run. This flag indicates that this action must be run even if the pipeline has already failed. This is useful for actions that copy output files off of the VM or for debugging. Note that no actions will be run if image prefetching fails.",
                        "type": "boolean"
                      },
                      "enable_fuse": {
                        "description": "Enable access to the FUSE device for this action. Filesystems can then be mounted into disks shared with other actions. The other actions do not need the ``enable_fuse`` flag to access the mounted filesystem.  This has the effect of causing the container to be executed with ``CAP_SYS_ADMIN`` and exposes ``/dev/fuse`` to the container, so use it only for containers you trust.",
                        "type": "boolean"
                      },
                      "publish_exposed_ports": {
                        "description": "Exposes all ports specified by ``EXPOSE`` statements in the container. To discover the host side port numbers, consult the ``ACTION_STARTED`` event in the operation metadata.",
                        "type": "boolean"
                      },
                      "disable_image_prefetch": {
                        "description": "All container images are typically downloaded before any actions are executed. This helps prevent typos in URIs or issues like lack of disk space from wasting large amounts of compute resources.  If set, this flag prevents the worker from downloading the image until just before the action is executed.",
                        "type": "boolean"
                      },
                      "disable_standard_error_capture": {
                        "description": "A small portion of the container's standard error stream is typically captured and returned inside the ``ContainerStoppedEvent``. Setting this flag disables this functionality.",
                        "type": "boolean"
                      },
                      "block_external_network": {
                        "description": "Prevents the container from accessing the external network.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "image_uri"
                    ]
                  }
                },
                "rules": {
                  "description": "Optional. List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified in the ``action`` field will be applied on every request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.network_security_v1.types.AuthorizationPolicy.Rule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "List of values to be used for this policy rule. This field can be set only in policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.AnalyzerOrgPolicy.Rule.StringValues",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "allowed_values": {
                                "description": "List of values allowed at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "denied_values": {
                                "description": "List of values denied at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "allow_all": {
                          "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "deny_all": {
                          "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "enforce": {
                          "description": "If ``true``, then the ``Policy`` is enforced. If ``false``, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "condition": {
                          "description": "The evaluating condition for this rule.",
                          "type": "object",
                          "reference": "google.type.expr_pb2.Expr",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.  This field is a member of `oneof`_ ``_description``.",
                                "type": "string"
                              },
                              "expression": {
                                "description": "Textual representation of an expression in Common Expression Language syntax.  This field is a member of `oneof`_ ``_expression``.",
                                "type": "string"
                              },
                              "location": {
                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.  This field is a member of `oneof`_ ``_location``.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.  This field is a member of `oneof`_ ``_title``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "condition_evaluation": {
                          "description": "The condition evaluation result for this rule. Only populated if it meets all the following criteria:  -  There is a [condition][google.cloud.asset.v1.AnalyzerOrgPolicy.Rule.condition] defined for this rule. -  This rule is within [AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy], or [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy] when the [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset] has [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource].",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.ConditionEvaluation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "evaluation_value": {
                                "description": "The evaluation result.",
                                "type": "object",
                                "reference": "google.cloud.asset_v1.types.ConditionEvaluation.EvaluationValue"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "action"
              ]
            }
          }
        },
        "required": [
          "parent",
          "authorization_policy_id",
          "authorization_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateAuthorizationPolicyRequest",
      "description": "Request used by the UpdateAuthorizationPolicy method.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Field mask is used to specify the fields to be\n        overwritten in the AuthorizationPolicy resource by the\n        update. The fields specified in the update_mask are relative\n        to the resource, not the full request. A field will be\n        overwritten if it is in the mask. If the user does not\n        provide a mask then all fields will be overwritten.\n    authorization_policy (google.cloud.network_security_v1beta1.types.AuthorizationPolicy):\n        Required. Updated AuthorizationPolicy\n        resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Optional. Field mask is used to specify the fields to be overwritten in the AuthorizationPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "authorization_policy": {
            "description": "Required. Updated AuthorizationPolicy resource.",
            "reference": "google.cloud.network_security_v1beta1.types.AuthorizationPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the AuthorizationPolicy resource. It matches pattern ``projects/{project}/locations/{location}/authorizationPolicies/<authorization_policy>``.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Set of label tags associated with the AuthorizationPolicy resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "action": {
                  "description": "Required. The action to take when a rule match is found. Possible values are \"ALLOW\" or \"DENY\".",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.AuthorizationPolicy.Action",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "container_name": {
                        "description": "An optional name for the container. The container hostname will be set to this name, making it useful for inter-container communication. The name must contain only upper and lowercase alphanumeric characters and hyphens and cannot start with a hyphen.",
                        "type": "string"
                      },
                      "image_uri": {
                        "description": "Required. The URI to pull the container image from. Note that all images referenced by actions in the pipeline are pulled before the first action runs. If multiple actions reference the same image, it is only pulled once, ensuring that the same image is used for all actions in a single pipeline.  The image URI can be either a complete host and image specification (e.g., quay.io/biocontainers/samtools), a library and image name (e.g., google/cloud-sdk) or a bare image name ('bash') to pull from the default library. No schema is required in any of these cases.  If the specified image is not public, the service account specified for the Virtual Machine must have access to pull the images from GCR, or appropriate credentials must be specified in the [google.cloud.lifesciences.v2beta.Action.credentials][google.cloud.lifesciences.v2beta.Action.credentials] field.",
                        "type": "string"
                      },
                      "commands": {
                        "description": "If specified, overrides the ``CMD`` specified in the container. If the container also has an ``ENTRYPOINT`` the values are used as entrypoint arguments. Otherwise, they are used as a command and arguments to run inside the container.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "entrypoint": {
                        "description": "If specified, overrides the ``ENTRYPOINT`` specified in the container.",
                        "type": "string"
                      },
                      "environment": {
                        "description": "The environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  In addition to the values passed here, a few other values are automatically injected into the environment. These cannot be hidden or overwritten.  ``GOOGLE_PIPELINE_FAILED`` will be set to \"1\" if the pipeline failed because an action has exited with a non-zero status (and did not have the ``IGNORE_EXIT_STATUS`` flag set). This can be used to determine if additional debug or logging actions should execute.  ``GOOGLE_LAST_EXIT_STATUS`` will be set to the exit status of the last non-background action that executed. This can be used by workflow engine authors to determine whether an individual action has succeeded or failed.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "encrypted_environment": {
                        "description": "The encrypted environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  The secret must decrypt to a JSON-encoded dictionary where key-value pairs serve as environment variable names and their values. The decoded environment variables can overwrite the values specified by the ``environment`` field.",
                        "type": "object",
                        "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key_name": {
                              "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                              "type": "string"
                            },
                            "cipher_text": {
                              "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "pid_namespace": {
                        "description": "An optional identifier for a PID namespace to run the action inside. Multiple actions should use the same string to share a namespace.  If unspecified, a separate isolated namespace is used.",
                        "type": "string"
                      },
                      "port_mappings": {
                        "description": "A map of containers to host port mappings for this container. If the container already specifies exposed ports, use the ``PUBLISH_EXPOSED_PORTS`` flag instead.  The host port number must be less than 65536. If it is zero, an unused random port is assigned. To determine the resulting port number, consult the ``ContainerStartedEvent`` in the operation metadata.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "integer"
                        }
                      },
                      "mounts": {
                        "description": "A list of mounts to make available to the action.  In addition to the values specified here, every action has a special virtual disk mounted under ``/google`` that contains log files and other operational components.  .. raw:: html  <ul> <li><code>/google/logs</code> All logs written during the pipeline execution.</li> <li><code>/google/logs/output</code> The combined standard output and standard error of all actions run as part of the pipeline execution.</li> <li><code>/google/logs/action/*/stdout</code> The complete contents of each individual action's standard output.</li> <li><code>/google/logs/action/*/stderr</code> The complete contents of each individual action's standard error output.</li> </ul>",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.lifesciences_v2beta.types.Mount",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "disk": {
                                "description": "The name of the disk to mount, as specified in the resources section.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path to mount the disk inside the container.",
                                "type": "string"
                              },
                              "read_only": {
                                "description": "If true, the disk is mounted read-only inside the container.",
                                "type": "boolean",
                                "output_only": true
                              }
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "Labels to associate with the action. This field is provided to assist workflow engine authors in identifying actions (for example, to indicate what sort of action they perform, such as localization or debugging). They are returned in the operation metadata, but are otherwise ignored.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "credentials": {
                        "description": "If the specified image is hosted on a private registry other than Google Container Registry, the credentials required to pull the image must be specified here as an encrypted secret.  The secret must decrypt to a JSON-encoded dictionary containing both ``username`` and ``password`` keys.",
                        "type": "object",
                        "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key_name": {
                              "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                              "type": "string"
                            },
                            "cipher_text": {
                              "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "timeout": {
                        "description": "The maximum amount of time to give the action to complete. If the action fails to complete before the timeout, it will be terminated and the exit status will be non-zero. The pipeline will continue or terminate based on the rules defined by the ``ALWAYS_RUN`` and ``IGNORE_EXIT_STATUS`` flags.",
                        "type": "object",
                        "reference": "google.protobuf.duration_pb2.Duration",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "ignore_exit_status": {
                        "description": "Normally, a non-zero exit status causes the pipeline to fail. This flag allows execution of other actions to continue instead.",
                        "type": "boolean"
                      },
                      "run_in_background": {
                        "description": "This flag allows an action to continue running in the background while executing subsequent actions. This is useful to provide services to other actions (or to provide debugging support tools like SSH servers).",
                        "type": "boolean"
                      },
                      "always_run": {
                        "description": "By default, after an action fails, no further actions are run. This flag indicates that this action must be run even if the pipeline has already failed. This is useful for actions that copy output files off of the VM or for debugging. Note that no actions will be run if image prefetching fails.",
                        "type": "boolean"
                      },
                      "enable_fuse": {
                        "description": "Enable access to the FUSE device for this action. Filesystems can then be mounted into disks shared with other actions. The other actions do not need the ``enable_fuse`` flag to access the mounted filesystem.  This has the effect of causing the container to be executed with ``CAP_SYS_ADMIN`` and exposes ``/dev/fuse`` to the container, so use it only for containers you trust.",
                        "type": "boolean"
                      },
                      "publish_exposed_ports": {
                        "description": "Exposes all ports specified by ``EXPOSE`` statements in the container. To discover the host side port numbers, consult the ``ACTION_STARTED`` event in the operation metadata.",
                        "type": "boolean"
                      },
                      "disable_image_prefetch": {
                        "description": "All container images are typically downloaded before any actions are executed. This helps prevent typos in URIs or issues like lack of disk space from wasting large amounts of compute resources.  If set, this flag prevents the worker from downloading the image until just before the action is executed.",
                        "type": "boolean"
                      },
                      "disable_standard_error_capture": {
                        "description": "A small portion of the container's standard error stream is typically captured and returned inside the ``ContainerStoppedEvent``. Setting this flag disables this functionality.",
                        "type": "boolean"
                      },
                      "block_external_network": {
                        "description": "Prevents the container from accessing the external network.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "image_uri"
                    ]
                  }
                },
                "rules": {
                  "description": "Optional. List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified in the ``action`` field will be applied on every request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.network_security_v1.types.AuthorizationPolicy.Rule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "List of values to be used for this policy rule. This field can be set only in policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.AnalyzerOrgPolicy.Rule.StringValues",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "allowed_values": {
                                "description": "List of values allowed at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "denied_values": {
                                "description": "List of values denied at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "allow_all": {
                          "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "deny_all": {
                          "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "enforce": {
                          "description": "If ``true``, then the ``Policy`` is enforced. If ``false``, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "condition": {
                          "description": "The evaluating condition for this rule.",
                          "type": "object",
                          "reference": "google.type.expr_pb2.Expr",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.  This field is a member of `oneof`_ ``_description``.",
                                "type": "string"
                              },
                              "expression": {
                                "description": "Textual representation of an expression in Common Expression Language syntax.  This field is a member of `oneof`_ ``_expression``.",
                                "type": "string"
                              },
                              "location": {
                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.  This field is a member of `oneof`_ ``_location``.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.  This field is a member of `oneof`_ ``_title``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "condition_evaluation": {
                          "description": "The condition evaluation result for this rule. Only populated if it meets all the following criteria:  -  There is a [condition][google.cloud.asset.v1.AnalyzerOrgPolicy.Rule.condition] defined for this rule. -  This rule is within [AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy], or [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy] when the [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset] has [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource].",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.ConditionEvaluation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "evaluation_value": {
                                "description": "The evaluation result.",
                                "type": "object",
                                "reference": "google.cloud.asset_v1.types.ConditionEvaluation.EvaluationValue"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "action"
              ]
            }
          }
        },
        "required": [
          "authorization_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteAuthorizationPolicyRequest",
      "description": "Request used by the DeleteAuthorizationPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the AuthorizationPolicy to delete. Must\n        be in the format\n        ``projects/{project}/locations/{location}/authorizationPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the AuthorizationPolicy to delete. Must be in the format ``projects/{project}/locations/{location}/authorizationPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-network-security/google/cloud/network_security_v1beta1/types/client_tls_policy.py": [
    {
      "type": "function",
      "name": "ListClientTlsPoliciesRequest",
      "description": "Request used by the ListClientTlsPolicies method.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which the\n        ClientTlsPolicies should be listed, specified in the format\n        ``projects/*/locations/{location}``.\n    page_size (int):\n        Maximum number of ClientTlsPolicies to return\n        per call.\n    page_token (str):\n        The value returned by the last\n        ``ListClientTlsPoliciesResponse`` Indicates that this is a\n        continuation of a prior ``ListClientTlsPolicies`` call, and\n        that the system should return the next page of data.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The project and location from which the ClientTlsPolicies should be listed, specified in the format ``projects/*/locations/{location}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of ClientTlsPolicies to return per call.",
            "type": "integer"
          },
          "page_token": {
            "description": "The value returned by the last ``ListClientTlsPoliciesResponse`` Indicates that this is a continuation of a prior ``ListClientTlsPolicies`` call, and that the system should return the next page of data.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetClientTlsPolicyRequest",
      "description": "Request used by the GetClientTlsPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the ClientTlsPolicy to get. Must be in\n        the format\n        ``projects/*/locations/{location}/clientTlsPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the ClientTlsPolicy to get. Must be in the format ``projects/*/locations/{location}/clientTlsPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateClientTlsPolicyRequest",
      "description": "Request used by the CreateClientTlsPolicy method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the ClientTlsPolicy. Must\n        be in the format ``projects/*/locations/{location}``.\n    client_tls_policy_id (str):\n        Required. Short name of the ClientTlsPolicy resource to be\n        created. This value should be 1-63 characters long,\n        containing only letters, numbers, hyphens, and underscores,\n        and should not start with a number. E.g.\n        \"client_mtls_policy\".\n    client_tls_policy (google.cloud.network_security_v1beta1.types.ClientTlsPolicy):\n        Required. ClientTlsPolicy resource to be\n        created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the ClientTlsPolicy. Must be in the format ``projects/*/locations/{location}``.",
            "type": "string"
          },
          "client_tls_policy_id": {
            "description": "Required. Short name of the ClientTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. \"client_mtls_policy\".",
            "type": "string"
          },
          "client_tls_policy": {
            "description": "Required. ClientTlsPolicy resource to be created.",
            "reference": "google.cloud.network_security_v1beta1.types.ClientTlsPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the ClientTlsPolicy resource. It matches the pattern ``projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}``",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Set of label tags associated with the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sni": {
                  "description": "Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \"secure.example.com\".",
                  "type": "string"
                },
                "client_certificate": {
                  "description": "Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.CertificateProvider",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "grpc_endpoint": {
                        "description": "gRPC specific configuration to access the gRPC server to obtain the cert and private key.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_uri": {
                              "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "target_uri"
                          ]
                        }
                      },
                      "certificate_provider_instance": {
                        "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "plugin_instance": {
                              "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "plugin_instance"
                          ]
                        }
                      }
                    }
                  }
                },
                "server_validation_ca": {
                  "description": "Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.network_security_v1.types.ValidationCA",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "grpc_endpoint": {
                          "description": "gRPC specific configuration to access the gRPC server to obtain the CA certificate.  This field is a member of `oneof`_ ``type``.",
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "target_uri": {
                                "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                                "type": "string"
                              }
                            },
                            "required": [
                              "target_uri"
                            ]
                          }
                        },
                        "certificate_provider_instance": {
                          "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "plugin_instance": {
                                "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "plugin_instance"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "parent",
          "client_tls_policy_id",
          "client_tls_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateClientTlsPolicyRequest",
      "description": "Request used by UpdateClientTlsPolicy method.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Field mask is used to specify the fields to be\n        overwritten in the ClientTlsPolicy resource by the update.\n        The fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. If the user does not provide a mask\n        then all fields will be overwritten.\n    client_tls_policy (google.cloud.network_security_v1beta1.types.ClientTlsPolicy):\n        Required. Updated ClientTlsPolicy resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Optional. Field mask is used to specify the fields to be overwritten in the ClientTlsPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "client_tls_policy": {
            "description": "Required. Updated ClientTlsPolicy resource.",
            "reference": "google.cloud.network_security_v1beta1.types.ClientTlsPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the ClientTlsPolicy resource. It matches the pattern ``projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}``",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Set of label tags associated with the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sni": {
                  "description": "Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \"secure.example.com\".",
                  "type": "string"
                },
                "client_certificate": {
                  "description": "Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.CertificateProvider",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "grpc_endpoint": {
                        "description": "gRPC specific configuration to access the gRPC server to obtain the cert and private key.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_uri": {
                              "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "target_uri"
                          ]
                        }
                      },
                      "certificate_provider_instance": {
                        "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "plugin_instance": {
                              "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "plugin_instance"
                          ]
                        }
                      }
                    }
                  }
                },
                "server_validation_ca": {
                  "description": "Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.network_security_v1.types.ValidationCA",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "grpc_endpoint": {
                          "description": "gRPC specific configuration to access the gRPC server to obtain the CA certificate.  This field is a member of `oneof`_ ``type``.",
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "target_uri": {
                                "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                                "type": "string"
                              }
                            },
                            "required": [
                              "target_uri"
                            ]
                          }
                        },
                        "certificate_provider_instance": {
                          "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "plugin_instance": {
                                "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "plugin_instance"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "client_tls_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteClientTlsPolicyRequest",
      "description": "Request used by the DeleteClientTlsPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the ClientTlsPolicy to delete. Must be\n        in the format\n        ``projects/*/locations/{location}/clientTlsPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the ClientTlsPolicy to delete. Must be in the format ``projects/*/locations/{location}/clientTlsPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-network-security/google/cloud/network_security_v1beta1/types/server_tls_policy.py": [
    {
      "type": "function",
      "name": "ListServerTlsPoliciesRequest",
      "description": "Request used by the ListServerTlsPolicies method.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which the\n        ServerTlsPolicies should be listed, specified in the format\n        ``projects/*/locations/{location}``.\n    page_size (int):\n        Maximum number of ServerTlsPolicies to return\n        per call.\n    page_token (str):\n        The value returned by the last\n        ``ListServerTlsPoliciesResponse`` Indicates that this is a\n        continuation of a prior ``ListServerTlsPolicies`` call, and\n        that the system should return the next page of data.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The project and location from which the ServerTlsPolicies should be listed, specified in the format ``projects/*/locations/{location}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of ServerTlsPolicies to return per call.",
            "type": "integer"
          },
          "page_token": {
            "description": "The value returned by the last ``ListServerTlsPoliciesResponse`` Indicates that this is a continuation of a prior ``ListServerTlsPolicies`` call, and that the system should return the next page of data.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetServerTlsPolicyRequest",
      "description": "Request used by the GetServerTlsPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the ServerTlsPolicy to get. Must be in\n        the format\n        ``projects/*/locations/{location}/serverTlsPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the ServerTlsPolicy to get. Must be in the format ``projects/*/locations/{location}/serverTlsPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateServerTlsPolicyRequest",
      "description": "Request used by the CreateServerTlsPolicy method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the ServerTlsPolicy. Must\n        be in the format ``projects/*/locations/{location}``.\n    server_tls_policy_id (str):\n        Required. Short name of the ServerTlsPolicy resource to be\n        created. This value should be 1-63 characters long,\n        containing only letters, numbers, hyphens, and underscores,\n        and should not start with a number. E.g.\n        \"server_mtls_policy\".\n    server_tls_policy (google.cloud.network_security_v1beta1.types.ServerTlsPolicy):\n        Required. ServerTlsPolicy resource to be\n        created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the ServerTlsPolicy. Must be in the format ``projects/*/locations/{location}``.",
            "type": "string"
          },
          "server_tls_policy_id": {
            "description": "Required. Short name of the ServerTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. \"server_mtls_policy\".",
            "type": "string"
          },
          "server_tls_policy": {
            "description": "Required. ServerTlsPolicy resource to be created.",
            "reference": "google.cloud.network_security_v1beta1.types.ServerTlsPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the ServerTlsPolicy resource. It matches the pattern ``projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}``",
                  "type": "string"
                },
                "description": {
                  "description": "Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Set of label tags associated with the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "allow_open": {
                  "description": "Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if ``allow_open`` and ``mtls_policy`` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility.  Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                  "type": "boolean"
                },
                "server_certificate": {
                  "description": "Defines a mechanism to provision server identity (public and private keys). Cannot be combined with ``allow_open`` as a permissive mode that allows both plain text and TLS is not supported.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.CertificateProvider",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "grpc_endpoint": {
                        "description": "gRPC specific configuration to access the gRPC server to obtain the cert and private key.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_uri": {
                              "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "target_uri"
                          ]
                        }
                      },
                      "certificate_provider_instance": {
                        "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "plugin_instance": {
                              "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "plugin_instance"
                          ]
                        }
                      }
                    }
                  }
                },
                "mtls_policy": {
                  "description": "Defines a mechanism to provision peer validation certificates for peer to peer authentication (Mutual TLS - mTLS). If not specified, client certificate will not be requested. The connection is treated as TLS and not mTLS. If ``allow_open`` and ``mtls_policy`` are set, server allows both plain text and mTLS connections.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.ServerTlsPolicy.MTLSPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "client_validation_ca": {
                        "description": "Defines the mechanism to obtain the Certificate Authority certificate to validate the client certificate.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.ValidationCA",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "grpc_endpoint": {
                                "description": "gRPC specific configuration to access the gRPC server to obtain the CA certificate.  This field is a member of `oneof`_ ``type``.",
                                "type": "object",
                                "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "target_uri": {
                                      "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "target_uri"
                                  ]
                                }
                              },
                              "certificate_provider_instance": {
                                "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                                "type": "object",
                                "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "plugin_instance": {
                                      "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "plugin_instance"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "parent",
          "server_tls_policy_id",
          "server_tls_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateServerTlsPolicyRequest",
      "description": "Request used by UpdateServerTlsPolicy method.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Field mask is used to specify the fields to be\n        overwritten in the ServerTlsPolicy resource by the update.\n        The fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. If the user does not provide a mask\n        then all fields will be overwritten.\n    server_tls_policy (google.cloud.network_security_v1beta1.types.ServerTlsPolicy):\n        Required. Updated ServerTlsPolicy resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServerTlsPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "server_tls_policy": {
            "description": "Required. Updated ServerTlsPolicy resource.",
            "reference": "google.cloud.network_security_v1beta1.types.ServerTlsPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Name of the ServerTlsPolicy resource. It matches the pattern ``projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}``",
                  "type": "string"
                },
                "description": {
                  "description": "Free-text description of the resource.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp when the resource was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when the resource was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Set of label tags associated with the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "allow_open": {
                  "description": "Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if ``allow_open`` and ``mtls_policy`` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility.  Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                  "type": "boolean"
                },
                "server_certificate": {
                  "description": "Defines a mechanism to provision server identity (public and private keys). Cannot be combined with ``allow_open`` as a permissive mode that allows both plain text and TLS is not supported.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.CertificateProvider",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "grpc_endpoint": {
                        "description": "gRPC specific configuration to access the gRPC server to obtain the cert and private key.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_uri": {
                              "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "target_uri"
                          ]
                        }
                      },
                      "certificate_provider_instance": {
                        "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                        "type": "object",
                        "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "plugin_instance": {
                              "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "plugin_instance"
                          ]
                        }
                      }
                    }
                  }
                },
                "mtls_policy": {
                  "description": "Defines a mechanism to provision peer validation certificates for peer to peer authentication (Mutual TLS - mTLS). If not specified, client certificate will not be requested. The connection is treated as TLS and not mTLS. If ``allow_open`` and ``mtls_policy`` are set, server allows both plain text and mTLS connections.",
                  "type": "object",
                  "reference": "google.cloud.network_security_v1.types.ServerTlsPolicy.MTLSPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "client_validation_ca": {
                        "description": "Defines the mechanism to obtain the Certificate Authority certificate to validate the client certificate.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.network_security_v1.types.ValidationCA",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "grpc_endpoint": {
                                "description": "gRPC specific configuration to access the gRPC server to obtain the CA certificate.  This field is a member of `oneof`_ ``type``.",
                                "type": "object",
                                "reference": "google.cloud.network_security_v1.types.GrpcEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "target_uri": {
                                      "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "target_uri"
                                  ]
                                }
                              },
                              "certificate_provider_instance": {
                                "description": "The certificate provider instance specification that will be passed to the data plane, which will be used to load necessary credential information.  This field is a member of `oneof`_ ``type``.",
                                "type": "object",
                                "reference": "google.cloud.network_security_v1.types.CertificateProviderInstance",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "plugin_instance": {
                                      "description": "Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "plugin_instance"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "server_tls_policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteServerTlsPolicyRequest",
      "description": "Request used by the DeleteServerTlsPolicy method.\n\nAttributes:\n    name (str):\n        Required. A name of the ServerTlsPolicy to delete. Must be\n        in the format\n        ``projects/*/locations/{location}/serverTlsPolicies/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. A name of the ServerTlsPolicy to delete. Must be in the format ``projects/*/locations/{location}/serverTlsPolicies/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}