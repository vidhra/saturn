{
  "VmMigration": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_sources",
          "description": "Lists Sources in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_sources():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListSourcesRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of sources.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListSourcesAsyncPager: Response message for 'ListSources' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_source",
          "description": "Gets details of a single Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_source():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetSourceRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Source name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.Source: Source message describes a specific vm migration Source resource. It contains the source environment information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_source",
          "description": "Creates a new Source in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_source():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateSourceRequest(\n            parent=\"parent_value\",\n            source_id=\"source_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Source's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source": {
                "type": "google.cloud.vmmigration_v1.types.Source",
                "description": "Required. The create request body. This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source_id": {
                "type": "str",
                "description": "Required. The source identifier. This corresponds to the ``source_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.Source` Source message describes a specific vm migration Source resource. It contains the source environment information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source",
              "source_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_source",
          "description": "Updates the parameters of a single Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_update_source():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.UpdateSourceRequest(\n        )\n\n        # Make the request\n        operation = client.update_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "source": {
                "type": "google.cloud.vmmigration_v1.types.Source",
                "description": "Required. The update request body. This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Source resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.Source` Source message describes a specific vm migration Source resource. It contains the source environment information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "source",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_source",
          "description": "Deletes a single Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_source():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Source name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_inventory",
          "description": "List remote source's inventory of VMs.\nThe remote source is the onprem vCenter (remote in the\nsense it's not in Compute Engine). The inventory\ndescribes the list of existing VMs in that source. Note\nthat this operation lists the VMs on the remote source,\nas opposed to listing the MigratingVms resources in the\nvmmigration service.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_fetch_inventory():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.FetchInven",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "source": {
                "type": "str",
                "description": "Required. The name of the Source. This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.FetchInventoryResponse: Response message for [fetchInventory][google.cloud.vmmigration.v1.VmMigration.FetchInventory]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_utilization_reports",
          "description": "Lists Utilization Reports of the given Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_utilization_reports():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListUtilizationReportsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_utilization_reports(request=request)\n\n        # Handle the response\n        async for response in page_re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Utilization Reports parent.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListUtilizationReportsAsyncPager: Response message for 'ListUtilizationReports' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_utilization_report",
          "description": "Gets a single Utilization Report.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_utilization_report():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetUtilizationReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_utilization_report(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetUtil",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Utilization Report name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.UtilizationReport: Utilization report details the utilization (CPU, memory, etc.) of selected source VMs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_utilization_report",
          "description": "Creates a new UtilizationReport.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_utilization_report():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateUtilizationReportRequest(\n            parent=\"parent_value\",\n            utilization_report_id=\"utilization_report_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_utilization_report(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Utilization Report's parent.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "utilization_report": {
                "type": "google.cloud.vmmigration_v1.types.UtilizationReport",
                "description": "Required. The report to create. This corresponds to the ``utilization_report`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "utilization_report_id": {
                "type": "str",
                "description": "Required. The ID to use for the report, which will become the final component of the reports's resource name.  This value maximum length is 63 characters, and valid characters are /[a-z][0-9]-/. It must start with an english letter and must not end with a hyphen.  This corresponds to the ``utilization_report_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.UtilizationReport` Utilization report details the utilization (CPU, memory, etc.) of selected source VMs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "utilization_report",
              "utilization_report_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_utilization_report",
          "description": "Deletes a single Utilization Report.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_utilization_report():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteUtilizationReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_utilization_report(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Utilization Report name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_datacenter_connectors",
          "description": "Lists DatacenterConnectors in a given Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_datacenter_connectors():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListDatacenterConnectorsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_datacenter_connectors(request=request)\n\n        # Handle the response\n        async for response in pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of connectors.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListDatacenterConnectorsAsyncPager: Response message for 'ListDatacenterConnectors' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_datacenter_connector",
          "description": "Gets details of a single DatacenterConnector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_datacenter_connector():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetDatacenterConnectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_datacenter_connector(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigratio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DatacenterConnector.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.DatacenterConnector: DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_datacenter_connector",
          "description": "Creates a new DatacenterConnector in a given Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_datacenter_connector():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateDatacenterConnectorRequest(\n            parent=\"parent_value\",\n            datacenter_connector_id=\"datacenter_connector_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_datacenter_connector(request=request)\n\n        print(\"Waiting for o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The DatacenterConnector's parent. Required. The Source in where the new DatacenterConnector will be created. For example: ``projects/my-project/locations/us-central1/sources/my-source``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "datacenter_connector": {
                "type": "google.cloud.vmmigration_v1.types.DatacenterConnector",
                "description": "Required. The create request body. This corresponds to the ``datacenter_connector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "datacenter_connector_id": {
                "type": "str",
                "description": "Required. The datacenterConnector identifier.  This corresponds to the ``datacenter_connector_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.DatacenterConnector` DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "datacenter_connector",
              "datacenter_connector_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_datacenter_connector",
          "description": "Deletes a single DatacenterConnector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_datacenter_connector():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteDatacenterConnectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_datacenter_connector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Hand",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The DatacenterConnector name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_appliance",
          "description": "Upgrades the appliance relate to this\nDatacenterConnector to the in-place updateable version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_upgrade_appliance():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.UpgradeApplianceRequest(\n            datacenter_connector=\"datacenter_connector_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_appliance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_migrating_vm",
          "description": "Creates a new MigratingVm in a given Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_migrating_vm():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateMigratingVmRequest(\n            parent=\"parent_value\",\n            migrating_vm_id=\"migrating_vm_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_migrating_vm(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The MigratingVm's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "migrating_vm": {
                "type": "google.cloud.vmmigration_v1.types.MigratingVm",
                "description": "Required. The create request body. This corresponds to the ``migrating_vm`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "migrating_vm_id": {
                "type": "str",
                "description": "Required. The migratingVm identifier. This corresponds to the ``migrating_vm_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.MigratingVm` MigratingVm describes the VM that will be migrated from a Source environment and its replication state."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "migrating_vm",
              "migrating_vm_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_migrating_vms",
          "description": "Lists MigratingVms in a given Source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_migrating_vms():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListMigratingVmsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_migrating_vms(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of MigratingVms.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListMigratingVmsAsyncPager: Response message for 'ListMigratingVms' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_migrating_vm",
          "description": "Gets details of a single MigratingVm.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_migrating_vm():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetMigratingVmRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_migrating_vm(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetMigratingVmRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the MigratingVm.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.MigratingVm: MigratingVm describes the VM that will be migrated from a Source environment and its replication state."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_migrating_vm",
          "description": "Updates the parameters of a single MigratingVm.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_update_migrating_vm():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.UpdateMigratingVmRequest(\n        )\n\n        # Make the request\n        operation = client.update_migrating_vm(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "migrating_vm": {
                "type": "google.cloud.vmmigration_v1.types.MigratingVm",
                "description": "Required. The update request body. This corresponds to the ``migrating_vm`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.MigratingVm` MigratingVm describes the VM that will be migrated from a Source environment and its replication state."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "migrating_vm",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_migrating_vm",
          "description": "Deletes a single MigratingVm.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_migrating_vm():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteMigratingVmRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_migrating_vm(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the MigratingVm.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_migration",
          "description": "Starts migration for a VM. Starts the process of\nuploading data and creating snapshots, in replication\ncycles scheduled by the policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_start_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.StartMigrationRequest(\n            migrating_vm=\"migrating_vm_value\",\n        )\n\n        # Make the request\n        operation = client.start_migration(request=request)\n\n        print(\"Waiting for operation t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "migrating_vm": {
                "type": "str",
                "description": "Required. The name of the MigratingVm.  This corresponds to the ``migrating_vm`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.StartMigrationResponse` Response message for 'StartMigration' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "migrating_vm",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resume_migration",
          "description": "Resumes a migration for a VM. When called on a paused\nmigration, will start the process of uploading data and\ncreating snapshots; when called on a completed cut-over\nmigration, will update the migration to active state and\nstart the process of uploading data and creating\nsnapshots.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_resume_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ResumeMigrationRequest(\n            migrating_vm=\"migratin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "pause_migration",
          "description": "Pauses a migration for a VM. If cycle tasks are\nrunning they will be cancelled, preserving source task\ndata. Further replication cycles will not be triggered\nwhile the VM is paused.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_pause_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.PauseMigrationRequest(\n            migrating_vm=\"migrating_vm_value\",\n        )\n\n        # Make the request\n        operation = client.pause_migration(request=r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "finalize_migration",
          "description": "Marks a migration as completed, deleting migration\nresources that are no longer being used. Only applicable\nafter cutover is done.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_finalize_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.FinalizeMigrationRequest(\n            migrating_vm=\"migrating_vm_value\",\n        )\n\n        # Make the request\n        operation = client.finalize_migration(request=request)\n\n        print(\"Waiting for operat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "migrating_vm": {
                "type": "str",
                "description": "Required. The name of the MigratingVm.  This corresponds to the ``migrating_vm`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.FinalizeMigrationResponse` Response message for 'FinalizeMigration' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "migrating_vm",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_clone_job",
          "description": "Initiates a Clone of a specific migrating VM.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_clone_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateCloneJobRequest(\n            parent=\"parent_value\",\n            clone_job_id=\"clone_job_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_clone_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Clone's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "clone_job": {
                "type": "google.cloud.vmmigration_v1.types.CloneJob",
                "description": "Required. The clone request body. This corresponds to the ``clone_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "clone_job_id": {
                "type": "str",
                "description": "Required. The clone job identifier. This corresponds to the ``clone_job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.CloneJob` CloneJob describes the process of creating a clone of a [MigratingVM][google.cloud.vmmigration.v1.MigratingVm] to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "clone_job",
              "clone_job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_clone_job",
          "description": "Initiates the cancellation of a running clone job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_cancel_clone_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CancelCloneJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.cancel_clone_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The clone job id This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.CancelCloneJobResponse` Response message for 'CancelCloneJob' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_clone_jobs",
          "description": "Lists CloneJobs of a given migrating VM.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_clone_jobs():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListCloneJobsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_clone_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of source VMs.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListCloneJobsAsyncPager: Response message for 'ListCloneJobs' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_clone_job",
          "description": "Gets details of a single CloneJob.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_clone_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetCloneJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_clone_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetCloneJobRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CloneJob. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.CloneJob: CloneJob describes the process of creating a clone of a [MigratingVM][google.cloud.vmmigration.v1.MigratingVm] to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_cutover_job",
          "description": "Initiates a Cutover of a specific migrating VM.\nThe returned LRO is completed when the cutover job\nresource is created and the job is initiated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_cutover_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateCutoverJobRequest(\n            parent=\"parent_value\",\n            cutover_job_id=\"cutover_job_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_cutover_job",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Cutover's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cutover_job": {
                "type": "google.cloud.vmmigration_v1.types.CutoverJob",
                "description": "Required. The cutover request body. This corresponds to the ``cutover_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cutover_job_id": {
                "type": "str",
                "description": "Required. The cutover job identifier. This corresponds to the ``cutover_job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.CutoverJob` CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "cutover_job",
              "cutover_job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_cutover_job",
          "description": "Initiates the cancellation of a running cutover job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_cancel_cutover_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CancelCutoverJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.cancel_cutover_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The cutover job id This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.CancelCutoverJobResponse` Response message for 'CancelCutoverJob' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_cutover_jobs",
          "description": "Lists CutoverJobs of a given migrating VM.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_cutover_jobs():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListCutoverJobsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_cutover_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of migrating VMs.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListCutoverJobsAsyncPager: Response message for 'ListCutoverJobs' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_cutover_job",
          "description": "Gets details of a single CutoverJob.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_cutover_job():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetCutoverJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_cutover_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetCutoverJobRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CutoverJob. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.CutoverJob: CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_groups",
          "description": "Lists Groups in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_groups():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListGroupsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_groups(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of groups.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListGroupsAsyncPager: Response message for 'ListGroups' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_group",
          "description": "Gets details of a single Group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_group():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_group(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.GetGroupRequest, dict]]):\n        The request o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The group name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.Group: Describes message for 'Group' resource. The Group is a collections of several MigratingVms."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_group",
          "description": "Creates a new Group in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_group():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateGroupRequest(\n            parent=\"parent_value\",\n            group_id=\"group_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Group's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group": {
                "type": "google.cloud.vmmigration_v1.types.Group",
                "description": "Required. The create request body. This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group_id": {
                "type": "str",
                "description": "Required. The group identifier. This corresponds to the ``group_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.Group` Describes message for 'Group' resource. The Group is a collections of several MigratingVms."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "group",
              "group_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_group",
          "description": "Updates the parameters of a single Group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_update_group():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.UpdateGroupRequest(\n        )\n\n        # Make the request\n        operation = client.update_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "google.cloud.vmmigration_v1.types.Group",
                "description": "Required. The update request body. This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Group resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.Group` Describes message for 'Group' resource. The Group is a collections of several MigratingVms."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_group",
          "description": "Deletes a single Group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_group():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Group name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "add_group_migration",
          "description": "Adds a MigratingVm to a Group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_add_group_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.AddGroupMigrationRequest(\n            group=\"group_value\",\n        )\n\n        # Make the request\n        operation = client.add_group_migration(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "str",
                "description": "Required. The full path name of the Group to add to.  This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.AddGroupMigrationResponse` Response message for 'AddGroupMigration' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_group_migration",
          "description": "Removes a MigratingVm from a Group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_remove_group_migration():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.RemoveGroupMigrationRequest(\n            group=\"group_value\",\n        )\n\n        # Make the request\n        operation = client.remove_group_migration(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "str",
                "description": "Required. The name of the Group. This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.RemoveGroupMigrationResponse` Response message for 'RemoveMigration' request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_target_projects",
          "description": "Lists TargetProjects in a given project.\n\nNOTE: TargetProject is a global resource; hence the only\nsupported value for location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_target_projects():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListTargetProjectsRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_target_projects(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of targets.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListTargetProjectsAsyncPager: Response message for 'ListTargetProjects' call. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_target_project",
          "description": "Gets details of a single TargetProject.\n\nNOTE: TargetProject is a global resource; hence the only\nsupported value for location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_target_project():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetTargetProjectRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_target_project(request=request)\n\n        # Handle the response\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The TargetProject name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.TargetProject: TargetProject message represents a target Compute Engine project for a migration or a clone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_target_project",
          "description": "Creates a new TargetProject in a given project.\n\nNOTE: TargetProject is a global resource; hence the only\nsupported value for location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_create_target_project():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.CreateTargetProjectRequest(\n            parent=\"parent_value\",\n            target_project_id=\"target_project_id_value\",\n        )\n\n        # Make the request\n        operation = client.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The TargetProject's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_project": {
                "type": "google.cloud.vmmigration_v1.types.TargetProject",
                "description": "Required. The create request body. This corresponds to the ``target_project`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_project_id": {
                "type": "str",
                "description": "Required. The target_project identifier. This corresponds to the ``target_project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.TargetProject` TargetProject message represents a target Compute Engine project for a migration or a clone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "target_project",
              "target_project_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_target_project",
          "description": "Updates the parameters of a single TargetProject.\n\nNOTE: TargetProject is a global resource; hence the only\nsupported value for location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_update_target_project():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.UpdateTargetProjectRequest(\n        )\n\n        # Make the request\n        operation = client.update_target_project(request=request)\n\n        print(\"Waiting for operation to complete...",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "target_project": {
                "type": "google.cloud.vmmigration_v1.types.TargetProject",
                "description": "Required. The update request body. This corresponds to the ``target_project`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the TargetProject resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmmigration_v1.types.TargetProject` TargetProject message represents a target Compute Engine project for a migration or a clone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "target_project",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_target_project",
          "description": "Deletes a single TargetProject.\n\nNOTE: TargetProject is a global resource; hence the only\nsupported value for location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_delete_target_project():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.DeleteTargetProjectRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_target_project(request=request)\n\n        print(\"Waiting for operation t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The TargetProject name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_replication_cycles",
          "description": "Lists ReplicationCycles in a given MigratingVM.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_list_replication_cycles():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.ListReplicationCyclesRequest(\n            parent=\"parent_value\",\n            page_token=\"page_token_value\",\n        )\n\n        # Make the request\n        page_result = client.list_replication_cycles(request=request)\n\n        # Handle the response\n        async for response in page_resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of ReplicationCycles.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.services.vm_migration.pagers.ListReplicationCyclesAsyncPager: Response message for 'ListReplicationCycles' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_replication_cycle",
          "description": "Gets details of a single ReplicationCycle.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmmigration_v1\n\n    async def sample_get_replication_cycle():\n        # Create a client\n        client = vmmigration_v1.VmMigrationAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmmigration_v1.GetReplicationCycleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_replication_cycle(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmmigration_v1.types.G",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ReplicationCycle.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmmigration_v1.types.ReplicationCycle: ReplicationCycle contains information about the current replication cycle status."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}