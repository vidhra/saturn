{
  "DataMigrationService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_migration_jobs",
          "description": "Lists migration jobs in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_list_migration_jobs():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ListMigrationJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_migration_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of migrationJobs.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.ListMigrationJobsAsyncPager: Response message for 'ListMigrationJobs' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_migration_job",
          "description": "Gets details of a single migration job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_get_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GetMigrationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_migration_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_v1.types.GetMigrationJobRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the migration job resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.MigrationJob: Represents a Database Migration Service migration job object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_migration_job",
          "description": "Creates a new migration job in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_create_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        migration_job = clouddms_v1.MigrationJob()\n        migration_job.reverse_ssh_connectivity.vm_ip = \"vm_ip_value\"\n        migration_job.reverse_ssh_connectivity.vm_port = 775\n        migration_job.type_ = \"CONTINUOUS\"\n        migration_job.source = \"source_value\"\n        migration_job.destination = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of migration jobs.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "migration_job": {
                "type": "google.cloud.clouddms_v1.types.MigrationJob",
                "description": "Required. Represents a `migration job <https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs>`__ object.  This corresponds to the ``migration_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "migration_job_id": {
                "type": "str",
                "description": "Required. The ID of the instance to create.  This corresponds to the ``migration_job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.MigrationJob` Represents a Database Migration Service migration job object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "migration_job",
              "migration_job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_migration_job",
          "description": "Updates the parameters of a single migration job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_update_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        migration_job = clouddms_v1.MigrationJob()\n        migration_job.reverse_ssh_connectivity.vm_ip = \"vm_ip_value\"\n        migration_job.reverse_ssh_connectivity.vm_port = 775\n        migration_job.type_ = \"CONTINUOUS\"\n        migration_job.source = \"source_value\"\n        migration_job.destination = \"destinatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "migration_job": {
                "type": "google.cloud.clouddms_v1.types.MigrationJob",
                "description": "Required. The migration job parameters to update.  This corresponds to the ``migration_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.MigrationJob` Represents a Database Migration Service migration job object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "migration_job",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_migration_job",
          "description": "Deletes a single migration job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_delete_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DeleteMigrationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the migration job resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_migration_job",
          "description": "Start an already created migration job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_start_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.StartMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.start_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_migration_job",
          "description": "Stops a running migration job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_stop_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.StopMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.stop_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resume_migration_job",
          "description": "Resume a migration job that is currently stopped and\nis resumable (was stopped during CDC phase).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_resume_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ResumeMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.resume_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "promote_migration_job",
          "description": "Promote a migration job, stopping replication to the\ndestination and promoting the destination to be a\nstandalone database.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_promote_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.PromoteMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.promote_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (awai",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "verify_migration_job",
          "description": "Verify a migration job, making sure the destination\ncan reach the source and that all configuration and\nprerequisites are met.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_verify_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.VerifyMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.verify_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (awai",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restart_migration_job",
          "description": "Restart a stopped or failed migration job, resetting\nthe destination instance to its original state and\nstarting the migration process from scratch.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_restart_migration_job():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.RestartMigrationJobRequest(\n        )\n\n        # Make the request\n        operation = client.restart_migration_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_ssh_script",
          "description": "Generate a SSH configuration script to configure the\nreverse SSH connectivity.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_generate_ssh_script():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        vm_creation_config = clouddms_v1.VmCreationConfig()\n        vm_creation_config.vm_machine_type = \"vm_machine_type_value\"\n\n        request = clouddms_v1.GenerateSshScriptRequest(\n            vm_creation_config=vm_creation_config,\n            vm=\"vm_value\",\n        )\n\n        # Make",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_tcp_proxy_script",
          "description": "Generate a TCP Proxy configuration script to\nconfigure a cloud-hosted VM running a TCP Proxy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_generate_tcp_proxy_script():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GenerateTcpProxyScriptRequest(\n            vm_name=\"vm_name_value\",\n            vm_machine_type=\"vm_machine_type_value\",\n            vm_subnet=\"vm_subnet_value\",\n        )\n\n        # Make the request\n        response = await client.genera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_connection_profiles",
          "description": "Retrieves a list of all connection profiles in a\ngiven project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_list_connection_profiles():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ListConnectionProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_connection_profiles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of connection profiles.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.ListConnectionProfilesAsyncPager: Response message for 'ListConnectionProfiles' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_connection_profile",
          "description": "Gets details of a single connection profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_get_connection_profile():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GetConnectionProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_connection_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_v1.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the connection profile resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.ConnectionProfile: A connection profile definition."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_connection_profile",
          "description": "Creates a new connection profile in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_create_connection_profile():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        connection_profile = clouddms_v1.ConnectionProfile()\n        connection_profile.mysql.host = \"host_value\"\n        connection_profile.mysql.port = 453\n        connection_profile.mysql.username = \"username_value\"\n        connection_profile.mysql.password = \"password_value\"\n\n        request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of connection profiles.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection_profile": {
                "type": "google.cloud.clouddms_v1.types.ConnectionProfile",
                "description": "Required. The create request body including the connection profile data  This corresponds to the ``connection_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection_profile_id": {
                "type": "str",
                "description": "Required. The connection profile identifier.  This corresponds to the ``connection_profile_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.ConnectionProfile` A connection profile definition."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "connection_profile",
              "connection_profile_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_connection_profile",
          "description": "Update the configuration of a single connection\nprofile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_update_connection_profile():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        connection_profile = clouddms_v1.ConnectionProfile()\n        connection_profile.mysql.host = \"host_value\"\n        connection_profile.mysql.port = 453\n        connection_profile.mysql.username = \"username_value\"\n        connection_profile.mysql.password = \"password_value\"\n\n        request = cloudd",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "connection_profile": {
                "type": "google.cloud.clouddms_v1.types.ConnectionProfile",
                "description": "Required. The connection profile parameters to update.  This corresponds to the ``connection_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.ConnectionProfile` A connection profile definition."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "connection_profile",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_connection_profile",
          "description": "Deletes a single Database Migration Service\nconnection profile. A connection profile can only be\ndeleted if it is not in use by any active migration\njobs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_delete_connection_profile():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DeleteConnectionProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_connection_profile(request=request)\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the connection profile resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_private_connection",
          "description": "Creates a new private connection in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_create_private_connection():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        private_connection = clouddms_v1.PrivateConnection()\n        private_connection.vpc_peering_config.vpc_name = \"vpc_name_value\"\n        private_connection.vpc_peering_config.subnet = \"subnet_value\"\n\n        request = clouddms_v1.CreatePrivateConnectionRequest(\n            parent=\"parent_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of PrivateConnections.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection": {
                "type": "google.cloud.clouddms_v1.types.PrivateConnection",
                "description": "Required. The private connection resource to create.  This corresponds to the ``private_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection_id": {
                "type": "str",
                "description": "Required. The private connection identifier.  This corresponds to the ``private_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.PrivateConnection` The PrivateConnection resource is used to establish private connectivity with the customer's network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "private_connection",
              "private_connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_private_connection",
          "description": "Gets details of a single private connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_get_private_connection():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GetPrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_private_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_v1.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the private connection to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.PrivateConnection: The PrivateConnection resource is used to establish private connectivity with the customer's network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_private_connections",
          "description": "Retrieves a list of private connections in a given\nproject and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_list_private_connections():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ListPrivateConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_private_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n           ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of private connections.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.ListPrivateConnectionsAsyncPager: Response message for 'ListPrivateConnections' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_private_connection",
          "description": "Deletes a single Database Migration Service private\nconnection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_delete_private_connection():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DeletePrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_private_connection(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the private connection to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversion_workspace",
          "description": "Gets details of a single conversion workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_get_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GetConversionWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conversion_workspace(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the conversion workspace resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.ConversionWorkspace: The main conversion workspace resource entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conversion_workspaces",
          "description": "Lists conversion workspaces in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_list_conversion_workspaces():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ListConversionWorkspacesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_conversion_workspaces(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of conversion workspaces.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.ListConversionWorkspacesAsyncPager: Response message for 'ListConversionWorkspaces' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_conversion_workspace",
          "description": "Creates a new conversion workspace in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_create_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        conversion_workspace = clouddms_v1.ConversionWorkspace()\n        conversion_workspace.source.engine = \"ORACLE\"\n        conversion_workspace.source.version = \"version_value\"\n        conversion_workspace.destination.engine = \"ORACLE\"\n        conversion_workspace.destination.version = \"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of conversion workspaces.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversion_workspace": {
                "type": "google.cloud.clouddms_v1.types.ConversionWorkspace",
                "description": "Required. Represents a conversion workspace object.  This corresponds to the ``conversion_workspace`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversion_workspace_id": {
                "type": "str",
                "description": "Required. The ID of the conversion workspace to create.  This corresponds to the ``conversion_workspace_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.ConversionWorkspace` The main conversion workspace resource entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversion_workspace",
              "conversion_workspace_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_conversion_workspace",
          "description": "Updates the parameters of a single conversion\nworkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_update_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        conversion_workspace = clouddms_v1.ConversionWorkspace()\n        conversion_workspace.source.engine = \"ORACLE\"\n        conversion_workspace.source.version = \"version_value\"\n        conversion_workspace.destination.engine = \"ORACLE\"\n        conversion_workspace.destination.version = \"version_val",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversion_workspace": {
                "type": "google.cloud.clouddms_v1.types.ConversionWorkspace",
                "description": "Required. The conversion workspace parameters to update.  This corresponds to the ``conversion_workspace`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.clouddms_v1.types.ConversionWorkspace` The main conversion workspace resource entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversion_workspace",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_conversion_workspace",
          "description": "Deletes a single conversion workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_delete_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DeleteConversionWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Han",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the conversion workspace resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_mapping_rule",
          "description": "Creates a new mapping rule for a given conversion\nworkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_create_mapping_rule():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        mapping_rule = clouddms_v1.MappingRule()\n        mapping_rule.single_entity_rename.new_name = \"new_name_value\"\n        mapping_rule.rule_scope = \"DATABASE_ENTITY_TYPE_DATABASE\"\n        mapping_rule.rule_order = 1075\n\n        request = clouddms_v1.CreateMappingRuleRequest(\n            parent=\"parent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent which owns this collection of mapping rules.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mapping_rule": {
                "type": "google.cloud.clouddms_v1.types.MappingRule",
                "description": "Required. Represents a [mapping rule] (https://cloud.google.com/database-migration/reference/rest/v1/projects.locations.mappingRules) object.  This corresponds to the ``mapping_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mapping_rule_id": {
                "type": "str",
                "description": "Required. The ID of the rule to create.  This corresponds to the ``mapping_rule_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.MappingRule: Definition of a transformation that is to be applied to a group of entities in the source schema. Several such transformations can be applied to an entity sequentially to define the corresponding entity in the target schema."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "mapping_rule",
              "mapping_rule_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_mapping_rule",
          "description": "Deletes a single mapping rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_delete_mapping_rule():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DeleteMappingRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_mapping_rule(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_v1.types.DeleteMappingRuleRequest, dict]]):\n        The request object. Request message for\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mapping rule resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_mapping_rules",
          "description": "Lists the mapping rules for a specific conversion\nworkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_list_mapping_rules():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ListMappingRulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_mapping_rules(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the conversion workspace resource whose mapping rules are listed in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.ListMappingRulesAsyncPager: Response message for 'ListMappingRulesRequest' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_mapping_rule",
          "description": "Gets the details of a mapping rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_get_mapping_rule():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.GetMappingRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_mapping_rule(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.clouddms_v1.types.GetMappingRuleRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mapping rule resource to get. Example: conversionWorkspaces/123/mappingRules/rule123  In order to retrieve a previous revision of the mapping rule, also provide the revision ID. Example:  conversionWorkspace/123/mappingRules/rule123@c7cfa2a8c7cfa2a8c7cfa2a8c7cfa2a8  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.types.MappingRule: Definition of a transformation that is to be applied to a group of entities in the source schema. Several such transformations can be applied to an entity sequentially to define the corresponding entity in the target schema."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "seed_conversion_workspace",
          "description": "Imports a snapshot of the source database into the\nconversion workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_seed_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.SeedConversionWorkspaceRequest(\n            source_connection_profile=\"source_connection_profile_value\",\n        )\n\n        # Make the request\n        operation = client.seed_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to compl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_mapping_rules",
          "description": "Imports the mapping rules for a given conversion\nworkspace. Supports various formats of external rules\nfiles.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_import_mapping_rules():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        rules_files = clouddms_v1.RulesFile()\n        rules_files.rules_source_filename = \"rules_source_filename_value\"\n        rules_files.rules_content = \"rules_content_value\"\n\n        request = clouddms_v1.ImportMappingRulesRequest(\n            parent=\"p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "convert_conversion_workspace",
          "description": "Creates a draft tree schema for the destination\ndatabase.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_convert_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ConvertConversionWorkspaceRequest(\n        )\n\n        # Make the request\n        operation = client.convert_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "commit_conversion_workspace",
          "description": "Marks all the data in the conversion workspace as\ncommitted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_commit_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.CommitConversionWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.commit_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rollback_conversion_workspace",
          "description": "Rolls back a conversion workspace to the last\ncommitted snapshot.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_rollback_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.RollbackConversionWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.rollback_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "apply_conversion_workspace",
          "description": "Applies draft tree onto a specific destination\ndatabase.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_apply_conversion_workspace():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.ApplyConversionWorkspaceRequest(\n            connection_profile=\"connection_profile_value\",\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.apply_conversion_workspace(request=request)\n\n        print(\"Waiting for operation to c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "describe_database_entities",
          "description": "Describes the database entities tree for a specific\nconversion workspace and a specific tree type.\n\nDatabase entities are not resources like conversion\nworkspaces or mapping rules, and they can't be created,\nupdated or deleted. Instead, they are simple data\nobjects describing the structure of the client database.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_describe_database_entities():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DescribeDatabase",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_background_jobs",
          "description": "Searches/lists the background jobs for a specific\nconversion workspace.\n\nThe background jobs are not resources like conversion\nworkspaces or mapping rules, and they can't be created,\nupdated or deleted. Instead, they are a way to expose\nthe data plane jobs log.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_search_background_jobs():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.SearchBackgroundJobsRequest(\n            conversion_workspace=\"conversion",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "describe_conversion_workspace_revisions",
          "description": "Retrieves a list of committed revisions of a specific\nconversion workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_describe_conversion_workspace_revisions():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.DescribeConversionWorkspaceRevisionsRequest(\n            conversion_workspace=\"conversion_workspace_value\",\n        )\n\n        # Make the request\n        response = await client.describe_conversion_workspace_revisions(request=request)\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_static_ips",
          "description": "Fetches a set of static IP addresses that need to be\nallowlisted by the customer when using the static-IP\nconnectivity method.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import clouddms_v1\n\n    async def sample_fetch_static_ips():\n        # Create a client\n        client = clouddms_v1.DataMigrationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = clouddms_v1.FetchStaticIpsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.fetch_static_ips(request=request)\n\n        # Handle the response\n        async for response i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.clouddms_v1.services.data_migration_service.pagers.FetchStaticIpsAsyncPager: Response message for a 'FetchStaticIps' request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}