{
  "CloudBuild": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_build",
          "description": "Starts a build with the specified configuration.\n\nThis method returns a long-running ``Operation``, which includes\nthe build ID. Pass the build ID to ``GetBuild`` to determine the\nbuild status (such as ``SUCCESS`` or ``FAILURE``).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_create_build():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.CreateBuildRequest(\n            project_id=\"project_id_value\",\n        )\n\n        # Make the request\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "build": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.Build",
                "description": "Required. Build resource to create. This corresponds to the ``build`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.Build` A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "build",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.CreateBuildRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_build",
          "description": "Returns information about a previously requested build.\n\nThe ``Build`` that is returned includes its status (such as\n``SUCCESS``, ``FAILURE``, or ``WORKING``), and timing\ninformation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_get_build():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.GetBuildRequest(\n            project_id=\"project_id_value\",\n            id=\"id_value\",\n        )\n\n        # Make the request\n        response = await client.ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "id": {
                "type": "str",
                "description": "Required. ID of the build. This corresponds to the ``id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.Build: A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.GetBuildRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_builds",
          "description": "Lists previously requested builds.\n\nPreviously requested builds may still be in-progress, or\nmay have finished successfully or unsuccessfully.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_list_builds():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.ListBuildsRequest(\n            project_id=\"project_id_value\",\n        )\n\n        # Make the request\n        page_result = client.list_builds(request=request)\n\n        # Handle the response\n        a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "The raw filter text to constrain the results.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.services.cloud_build.pagers.ListBuildsAsyncPager: Response including listed builds.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.ListBuildsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_build",
          "description": "Cancels a build in progress.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_cancel_build():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.CancelBuildRequest(\n            project_id=\"project_id_value\",\n            id=\"id_value\",\n        )\n\n        # Make the request\n        response = await client.cancel_build(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.devtools.cloudbuil",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "id": {
                "type": "str",
                "description": "Required. ID of the build. This corresponds to the ``id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.Build: A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.CancelBuildRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retry_build",
          "description": "Creates a new build based on the specified build.\n\nThis method creates a new build using the original build\nrequest, which may or may not result in an identical build.\n\nFor triggered builds:\n\n-  Triggered builds resolve to a precise revision; therefore a\n   retry of a triggered build will result in a build that uses\n   the same revision.\n\nFor non-triggered builds that specify ``RepoSource``:\n\n-  If the original build built from the tip of a branch, the\n   retried build will build from the tip of that branch, which\n   may not be the same revision as the original build.\n-  If the original build specified a commit sha or revision ID,\n   the retried build will use the identical source.\n\nFor builds that specify ``StorageSource``:\n\n-  If the original build pulled source from Cloud Storage\n   without specifying the generation of the object, the new\n   build will use the current object, which may be different\n   from the original build source.\n-  If the original build pulled source from Cloud Storage and\n   specified",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "id": {
                "type": "str",
                "description": "Required. Build ID of the original build.  This corresponds to the ``id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.Build` A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.RetryBuildRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "approve_build",
          "description": "Approves or rejects a pending build.\n\nIf approved, the returned LRO will be analogous to the\nLRO returned from a CreateBuild call.\n\nIf rejected, the returned LRO will be immediately done.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_approve_build():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.ApproveBuildRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.approve_build(request=request)\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the target build. For example: \"projects/{$project_id}/builds/{$build_id}\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "approval_result": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.ApprovalResult",
                "description": "Approval decision and metadata. This corresponds to the ``approval_result`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.Build` A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "approval_result",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.ApproveBuildRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_build_trigger",
          "description": "Creates a new ``BuildTrigger``.\n\nThis API is experimental.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_create_build_trigger():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        trigger = cloudbuild_v1.BuildTrigger()\n        trigger.autodetect = True\n\n        request = cloudbuild_v1.CreateBuildTriggerRequest(\n            project_id=\"project_id_value\",\n            trigger=trigger,\n        )\n\n        # Make the request\n        response = await client.create_build_trigger(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project for which to configure automatic builds.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.BuildTrigger",
                "description": "Required. ``BuildTrigger`` to create. This corresponds to the ``trigger`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.BuildTrigger: Configuration for an automated build in response to source repository changes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trigger",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.CreateBuildTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_build_trigger",
          "description": "Returns information about a ``BuildTrigger``.\n\nThis API is experimental.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_get_build_trigger():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.GetBuildTriggerRequest(\n            project_id=\"project_id_value\",\n            trigger_id=\"trigger_id_value\",\n        )\n\n        # Make the request\n        response = await client.get_build_trigger(request=request)\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project that owns the trigger.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger_id": {
                "type": "str",
                "description": "Required. Identifier (``id`` or ``name``) of the ``BuildTrigger`` to get.  This corresponds to the ``trigger_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.BuildTrigger: Configuration for an automated build in response to source repository changes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trigger_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.GetBuildTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_build_triggers",
          "description": "Lists existing ``BuildTrigger``\\ s.\n\nThis API is experimental.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_list_build_triggers():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.ListBuildTriggersRequest(\n            project_id=\"project_id_value\",\n        )\n\n        # Make the request\n        page_result = client.list_build_triggers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project for which to list BuildTriggers.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.services.cloud_build.pagers.ListBuildTriggersAsyncPager: Response containing existing BuildTriggers.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.ListBuildTriggersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_build_trigger",
          "description": "Deletes a ``BuildTrigger`` by its project ID and trigger ID.\n\nThis API is experimental.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_delete_build_trigger():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.DeleteBuildTriggerRequest(\n            project_id=\"project_id_value\",\n            trigger_id=\"trigger_id_value\",\n        )\n\n        # Make the request\n        await client.delete_build_trigger(request=request)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project that owns the trigger.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger_id": {
                "type": "str",
                "description": "Required. ID of the ``BuildTrigger`` to delete. This corresponds to the ``trigger_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trigger_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.DeleteBuildTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_build_trigger",
          "description": "Updates a ``BuildTrigger`` by its project ID and trigger ID.\n\nThis API is experimental.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_update_build_trigger():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        trigger = cloudbuild_v1.BuildTrigger()\n        trigger.autodetect = True\n\n        request = cloudbuild_v1.UpdateBuildTriggerRequest(\n            project_id=\"project_id_value\",\n            trigger_id=\"trigger_id_value\",\n            trigger=trigger,\n        )\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project that owns the trigger.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger_id": {
                "type": "str",
                "description": "Required. ID of the ``BuildTrigger`` to update. This corresponds to the ``trigger_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.BuildTrigger",
                "description": "Required. ``BuildTrigger`` to update. This corresponds to the ``trigger`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.BuildTrigger: Configuration for an automated build in response to source repository changes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trigger_id",
              "trigger",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.UpdateBuildTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_build_trigger",
          "description": "Runs a ``BuildTrigger`` at a particular source revision.\n\nTo run a regional or global trigger, use the POST request that\nincludes the location endpoint in the path (ex.\nv1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run).\nThe POST request that does not include the location endpoint in\nthe path can only be used when running global triggers.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_run_build_trigger():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the project. This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trigger_id": {
                "type": "str",
                "description": "Required. ID of the trigger. This corresponds to the ``trigger_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.RepoSource",
                "description": "Source to build against this trigger. Branch and tag names cannot consist of regular expressions.  This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.Build` A build resource in the Cloud Build API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts.  Fields can include the following variables, which will be expanded when the build is created:  -  $PROJECT_ID: the project ID of the build. -  $PROJECT_NUMBER: the project number of the build. -  $LOCATION: the location/region of the build. -  $BUILD_ID: the autogenerated ID of the build. -  $REPO_NAME: the source repository name specified by RepoSource. -  $BRANCH_NAME: the branch name specified by RepoSource. -  $TAG_NAME: the tag name specified by RepoSource. -  $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. -  $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trigger_id",
              "source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.RunBuildTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "receive_trigger_webhook",
          "description": "ReceiveTriggerWebhook [Experimental] is called when the API\nreceives a webhook request targeted at a specific trigger.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_receive_trigger_webhook():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.ReceiveTriggerWebhookRequest(\n        )\n\n        # Make the request\n        response = await client.receive_trigger_webhook(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.ReceiveTriggerWebhookRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_worker_pool",
          "description": "Creates a ``WorkerPool``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_create_worker_pool():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.CreateWorkerPoolRequest(\n            parent=\"parent_value\",\n            worker_pool_id=\"worker_pool_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_worker_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this worker pool will be created. Format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "worker_pool": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.WorkerPool",
                "description": "Required. ``WorkerPool`` resource to create. This corresponds to the ``worker_pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "worker_pool_id": {
                "type": "str",
                "description": "Required. Immutable. The ID to use for the ``WorkerPool``, which will become the final component of the resource name.  This value should be 1-63 characters, and valid characters are /[a-z][0-9]-/.  This corresponds to the ``worker_pool_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.WorkerPool` Configuration for a WorkerPool.  Cloud Build owns and maintains a pool of workers for general use and have no access to a project's private network. By default, builds submitted to Cloud Build will use a worker from this pool.  If your build needs access to resources on a private network, create and use a WorkerPool to run your builds. Private WorkerPools give your builds access to any single VPC network that you administer, including any on-prem resources connected to that VPC network. For an overview of private pools, see [Private pools overview](\\ https://cloud.google.com/build/docs/private-pools/private-pools-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "worker_pool",
              "worker_pool_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.CreateWorkerPoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_worker_pool",
          "description": "Returns details of a ``WorkerPool``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_get_worker_pool():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.GetWorkerPoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_worker_pool(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.devtools.cloudbuild_v1.types.GetWorkerPoo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``WorkerPool`` to retrieve. Format: ``projects/{project}/locations/{location}/workerPools/{workerPool}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.types.WorkerPool: Configuration for a WorkerPool.  Cloud Build owns and maintains a pool of workers for general use and have no access to a project's private network. By default, builds submitted to Cloud Build will use a worker from this pool.  If your build needs access to resources on a private network, create and use a WorkerPool to run your builds. Private WorkerPools give your builds access to any single VPC network that you administer, including any on-prem resources connected to that VPC network. For an overview of private pools, see [Private pools overview](\\ https://cloud.google.com/build/docs/private-pools/private-pools-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.GetWorkerPoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_worker_pool",
          "description": "Deletes a ``WorkerPool``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_delete_worker_pool():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.DeleteWorkerPoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_worker_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``WorkerPool`` to delete. Format: ``projects/{project}/locations/{location}/workerPools/{workerPool}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.DeleteWorkerPoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_worker_pool",
          "description": "Updates a ``WorkerPool``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_update_worker_pool():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.UpdateWorkerPoolRequest(\n        )\n\n        # Make the request\n        operation = client.update_worker_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "worker_pool": {
                "type": "google.cloud.devtools.cloudbuild_v1.types.WorkerPool",
                "description": "Required. The ``WorkerPool`` to update.  The ``name`` field is used to identify the ``WorkerPool`` to update. Format: ``projects/{project}/locations/{location}/workerPools/{workerPool}``.  This corresponds to the ``worker_pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "A mask specifying which fields in ``worker_pool`` to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.devtools.cloudbuild_v1.types.WorkerPool` Configuration for a WorkerPool.  Cloud Build owns and maintains a pool of workers for general use and have no access to a project's private network. By default, builds submitted to Cloud Build will use a worker from this pool.  If your build needs access to resources on a private network, create and use a WorkerPool to run your builds. Private WorkerPools give your builds access to any single VPC network that you administer, including any on-prem resources connected to that VPC network. For an overview of private pools, see [Private pools overview](\\ https://cloud.google.com/build/docs/private-pools/private-pools-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "worker_pool",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.UpdateWorkerPoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_worker_pools",
          "description": "Lists ``WorkerPool``\\ s.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import cloudbuild_v1\n\n    async def sample_list_worker_pools():\n        # Create a client\n        client = cloudbuild_v1.CloudBuildAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudbuild_v1.ListWorkerPoolsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_worker_pools(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent of the collection of ``WorkerPools``. Format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.cloudbuild_v1.services.cloud_build.pagers.ListWorkerPoolsAsyncPager: Response containing existing WorkerPools.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloudbuild.ListWorkerPoolsRequest"
          ]
        }
      }
    ]
  }
}