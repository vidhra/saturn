{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-redis/google/cloud/redis_v1/types/cloud_redis.py": [
    {
      "type": "function",
      "name": "RescheduleMaintenanceRequest",
      "description": "Request for\n[RescheduleMaintenance][google.cloud.redis.v1.CloudRedis.RescheduleMaintenance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    reschedule_type (google.cloud.redis_v1.types.RescheduleMaintenanceRequest.RescheduleType):\n        Required. If reschedule type is SPECIFIC_TIME, must set up\n        schedule_time as well.\n    schedule_time (google.protobuf.timestamp_pb2.Timestamp):\n        Optional. Timestamp when the maintenance shall be\n        rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339\n        format, for example ``2012-11-15T16:19:00.094Z``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "reschedule_type": {
            "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.",
            "type": "object",
            "reference": "google.cloud.redis_v1.types.RescheduleMaintenanceRequest.RescheduleType"
          },
          "schedule_time": {
            "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example ``2012-11-15T16:19:00.094Z``.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "name",
          "reschedule_type"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for\n[ListInstances][google.cloud.redis.v1.CloudRedis.ListInstances].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region.\n    page_size (int):\n        The maximum number of items to return.\n\n        If not specified, a default value of 1000 will be used by\n        the service. Regardless of the page_size value, the response\n        may include a partial list and a caller should only rely on\n        response's\n        [``next_page_token``][google.cloud.redis.v1.ListInstancesResponse.next_page_token]\n        to determine if there are more instances left to be queried.\n    page_token (str):\n        The ``next_page_token`` value returned from a previous\n        [ListInstances][google.cloud.redis.v1.CloudRedis.ListInstances]\n        request, if any.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return.  If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's [``next_page_token``][google.cloud.redis.v1.ListInstancesResponse.next_page_token] to determine if there are more instances left to be queried.",
            "type": "integer"
          },
          "page_token": {
            "description": "The ``next_page_token`` value returned from a previous [ListInstances][google.cloud.redis.v1.CloudRedis.ListInstances] request, if any.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for\n[GetInstance][google.cloud.redis.v1.CloudRedis.GetInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceAuthStringRequest",
      "description": "Request for\n[GetInstanceAuthString][google.cloud.redis.v1.CloudRedis.GetInstanceAuthString].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for\n[CreateInstance][google.cloud.redis.v1.CloudRedis.CreateInstance].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region.\n    instance_id (str):\n        Required. The logical name of the Redis instance in the\n        customer project with the following restrictions:\n\n        -  Must contain only lowercase letters, numbers, and\n           hyphens.\n        -  Must start with a letter.\n        -  Must be between 1-40 characters.\n        -  Must end with a number or a letter.\n        -  Must be unique within the customer project / location\n    instance (google.cloud.redis_v1.types.Instance):\n        Required. A Redis [Instance] resource",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. The logical name of the Redis instance in the customer project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-40 characters. -  Must end with a number or a letter. -  Must be unique within the customer project / location",
            "type": "string"
          },
          "instance": {
            "description": "Required. A Redis [Instance] resource",
            "reference": "google.cloud.redis_v1.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string"
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string"
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State"
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote"
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string"
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string"
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string"
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "instance_id",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateInstanceRequest",
      "description": "Request for\n[UpdateInstance][google.cloud.redis.v1.CloudRedis.UpdateInstance].\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update. At least one path must\n        be supplied in this field. The elements of the repeated\n        paths field may only include these fields from\n        [Instance][google.cloud.redis.v1.Instance]:\n\n        -  ``displayName``\n        -  ``labels``\n        -  ``memorySizeGb``\n        -  ``redisConfig``\n        -  ``replica_count``\n    instance (google.cloud.redis_v1.types.Instance):\n        Required. Update description. Only fields specified in\n        update_mask are updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [Instance][google.cloud.redis.v1.Instance]:  -  ``displayName`` -  ``labels`` -  ``memorySizeGb`` -  ``redisConfig`` -  ``replica_count``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "instance": {
            "description": "Required. Update description. Only fields specified in update_mask are updated.",
            "reference": "google.cloud.redis_v1.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string"
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string"
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State"
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote"
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string"
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string"
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string"
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "update_mask",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceRequest",
      "description": "Request for\n[UpgradeInstance][google.cloud.redis.v1.CloudRedis.UpgradeInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    redis_version (str):\n        Required. Specifies the target version of\n        Redis software to upgrade to.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "redis_version": {
            "description": "Required. Specifies the target version of Redis software to upgrade to.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "redis_version"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for\n[DeleteInstance][google.cloud.redis.v1.CloudRedis.DeleteInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ImportInstanceRequest",
      "description": "Request for\n[Import][google.cloud.redis.v1.CloudRedis.ImportInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    input_config (google.cloud.redis_v1.types.InputConfig):\n        Required. Specify data to be imported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "input_config": {
            "description": "Required. Specify data to be imported.",
            "reference": "google.cloud.redis_v1.types.InputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_input_configs": {
                  "description": "Set of input BigQuery tables.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.enterpriseknowledgegraph_v1.types.BigQueryInputConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "bigquery_table": {
                          "description": "Required. Format is ``projects/*/datasets/*/tables/*``.",
                          "type": "string"
                        },
                        "gcs_uri": {
                          "description": "Required. Schema mapping file",
                          "type": "string"
                        }
                      },
                      "required": [
                        "bigquery_table",
                        "gcs_uri"
                      ]
                    }
                  }
                },
                "entity_type": {
                  "description": "Entity type",
                  "type": "object",
                  "reference": "google.cloud.enterpriseknowledgegraph_v1.types.InputConfig.EntityType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Required. The name of the entity type.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Required. Indicates the kind of entity type.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                      },
                      "auto_expansion_mode": {
                        "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                      },
                      "entities": {
                        "description": "Optional. The collection of entity entries associated with the entity type.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                "type": "string"
                              },
                              "synonyms": {
                                "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "value",
                              "synonyms"
                            ]
                          }
                        }
                      },
                      "enable_fuzzy_extraction": {
                        "description": "Optional. Enables fuzzy entity extraction during classification.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "display_name",
                      "kind"
                    ]
                  }
                },
                "previous_result_bigquery_table": {
                  "description": "Optional. Provide the bigquery table containing the previous results if cluster ID stability is desired. Format is ``projects/*/datasets/*/tables/*``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "input_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportInstanceRequest",
      "description": "Request for\n[Export][google.cloud.redis.v1.CloudRedis.ExportInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    output_config (google.cloud.redis_v1.types.OutputConfig):\n        Required. Specify data to be exported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "output_config": {
            "description": "Required. Specify data to be exported.",
            "reference": "google.cloud.redis_v1.types.OutputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_dataset": {
                  "description": "Format is \u201cprojects/\\ */datasets/*\\ \u201d.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "output_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "FailoverInstanceRequest",
      "description": "Request for\n[Failover][google.cloud.redis.v1.CloudRedis.FailoverInstance].\n\nAttributes:\n    name (str):\n        Required. Redis instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    data_protection_mode (google.cloud.redis_v1.types.FailoverInstanceRequest.DataProtectionMode):\n        Optional. Available data protection modes that the user can\n        choose. If it's unspecified, data protection mode will be\n        LIMITED_DATA_LOSS by default.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "data_protection_mode": {
            "description": "Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.",
            "type": "object",
            "reference": "google.cloud.redis_v1.types.FailoverInstanceRequest.DataProtectionMode"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}