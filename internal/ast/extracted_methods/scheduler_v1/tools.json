{
  "CloudScheduler": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_jobs",
          "description": "Lists jobs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_list_jobs():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # Initialize request argument(s)\n        request = scheduler_v1.ListJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.scheduler_v1.types.ListJobsRequest, dict]])",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.services.cloud_scheduler.pagers.ListJobsAsyncPager: Response message for listing jobs using [ListJobs][google.cloud.scheduler.v1.CloudScheduler.ListJobs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job",
          "description": "Gets a job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_get_job():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # Initialize request argument(s)\n        request = scheduler_v1.GetJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.scheduler_v1.types.GetJobRequest, dict]]):\n        The request object. Request message for\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The job name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_job",
          "description": "Creates a job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_create_job():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # Initialize request argument(s)\n        request = scheduler_v1.CreateJobRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.scheduler_v1.types.CreateJobRequest, dict]]):\n        The request object. Request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job": {
                "type": "google.cloud.scheduler_v1.types.Job",
                "description": "Required. The job to add. The user can optionally specify a name for the job in [name][google.cloud.scheduler.v1.Job.name]. [name][google.cloud.scheduler.v1.Job.name] cannot be the same as an existing job. If a name is not specified then the system will generate a random unique name that will be returned ([name][google.cloud.scheduler.v1.Job.name]) in the response.  This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_job",
          "description": "Updates a job.\n\nIf successful, the updated [Job][google.cloud.scheduler.v1.Job]\nis returned. If the job does not exist, ``NOT_FOUND`` is\nreturned.\n\nIf UpdateJob does not successfully return, it is possible for\nthe job to be in an\n[Job.State.UPDATE_FAILED][google.cloud.scheduler.v1.Job.State.UPDATE_FAILED]\nstate. A job in this state may not be executed. If this happens,\nretry the UpdateJob request until a successful response is\nreceived.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_update_job():\n        # Create a client\n        client = scheduler_v1.CloudSched",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "job": {
                "type": "google.cloud.scheduler_v1.types.Job",
                "description": "Required. The new job properties. [name][google.cloud.scheduler.v1.Job.name] must be specified.  Output only fields cannot be modified using UpdateJob. Any value specified for an output only field will be ignored.  This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "A  mask used to specify which fields of the job are being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "job",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_job",
          "description": "Deletes a job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_delete_job():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # Initialize request argument(s)\n        request = scheduler_v1.DeleteJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_job(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.scheduler_v1.types.DeleteJobRequest, dict]]):\n        The request object. Request message for deleting a job using\n        [DeleteJob][google.cloud.sch",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The job name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "pause_job",
          "description": "Pauses a job.\n\nIf a job is paused then the system will stop executing the job\nuntil it is re-enabled via\n[ResumeJob][google.cloud.scheduler.v1.CloudScheduler.ResumeJob].\nThe state of the job is stored in\n[state][google.cloud.scheduler.v1.Job.state]; if paused it will\nbe set to\n[Job.State.PAUSED][google.cloud.scheduler.v1.Job.State.PAUSED].\nA job must be in\n[Job.State.ENABLED][google.cloud.scheduler.v1.Job.State.ENABLED]\nto be paused.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_pause_job():\n        # Create a client\n        client = scheduler_v1.CloudScheduler",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The job name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resume_job",
          "description": "Resume a job.\n\nThis method reenables a job after it has been\n[Job.State.PAUSED][google.cloud.scheduler.v1.Job.State.PAUSED].\nThe state of a job is stored in\n[Job.state][google.cloud.scheduler.v1.Job.state]; after calling\nthis method it will be set to\n[Job.State.ENABLED][google.cloud.scheduler.v1.Job.State.ENABLED].\nA job must be in\n[Job.State.PAUSED][google.cloud.scheduler.v1.Job.State.PAUSED]\nto be resumed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_resume_job():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The job name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_job",
          "description": "Forces a job to run now.\n\nWhen this method is called, Cloud Scheduler will\ndispatch the job, even if the job is already running.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import scheduler_v1\n\n    async def sample_run_job():\n        # Create a client\n        client = scheduler_v1.CloudSchedulerAsyncClient()\n\n        # Initialize request argument(s)\n        request = scheduler_v1.RunJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.run_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The job name. For example: ``projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.scheduler_v1.types.Job: Configuration for a job. The maximum allowed size for a job is 1MB."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}