{
  "TripService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_trip",
          "description": "Creates a trip in the Fleet Engine and returns the\nnew trip.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_create_trip():\n        # Create a client\n        client = fleetengine_v1.TripServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.CreateTripRequest(\n            parent=\"parent_value\",\n            trip_id=\"trip_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_trip(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_trip",
          "description": "Get information about a single trip.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_get_trip():\n        # Create a client\n        client = fleetengine_v1.TripServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.GetTripRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_trip(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.maps.fleetengine_v1.types.GetTripRequest, dict]]):\n        The request ob",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "report_billable_trip",
          "description": "Report billable trip usage.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_report_billable_trip():\n        # Create a client\n        client = fleetengine_v1.TripServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.ReportBillableTripRequest(\n            name=\"name_value\",\n            country_code=\"country_code_value\",\n        )\n\n        # Make the request\n        await client.report_billable_trip(request=request)\n\nArgs:\n    request (Optional[Union[google.maps.fleetengine_v1.types.ReportBillableTripRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_trips",
          "description": "Get all the trips for a specific vehicle.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_search_trips():\n        # Create a client\n        client = fleetengine_v1.TripServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.SearchTripsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.search_trips(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.maps.fle",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_trip",
          "description": "Updates trip data.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_update_trip():\n        # Create a client\n        client = fleetengine_v1.TripServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.UpdateTripRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_trip(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.maps.fleetengine_v1.types.UpdateTripRequest, dict]]):\n        The request object. ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "VehicleService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_vehicle",
          "description": "Instantiates a new vehicle associated with an on-demand\nrideshare or deliveries provider. Each ``Vehicle`` must have a\nunique vehicle ID.\n\nThe following ``Vehicle`` fields are required when creating a\n``Vehicle``:\n\n-  ``vehicleState``\n-  ``supportedTripTypes``\n-  ``maximumCapacity``\n-  ``vehicleType``\n\nThe following ``Vehicle`` fields are ignored when creating a\n``Vehicle``:\n\n-  ``name``\n-  ``currentTrips``\n-  ``availableCapacity``\n-  ``current_route_segment``\n-  ``current_route_segment_end_point``\n-  ``current_route_segment_version``\n-  ``current_route_segment_traffic``\n-  ``route``\n-  ``waypoints``\n-  ``waypoints_version``\n-  ``remaining_distance_meters``\n-  ``remaining_time_seconds``\n-  ``eta_to_next_waypoint``\n-  ``navigation_status``\n\nAll other fields are optional and used if provided.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_vehicle",
          "description": "Returns a vehicle from the Fleet Engine.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_get_vehicle():\n        # Create a client\n        client = fleetengine_v1.VehicleServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.GetVehicleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_vehicle(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.maps.fleetengine_v1.types.GetVehicleRequest, dict]]):\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_vehicle",
          "description": "Writes updated vehicle data to the Fleet Engine.\n\nWhen updating a ``Vehicle``, the following fields cannot be\nupdated since they are managed by the server:\n\n-  ``currentTrips``\n-  ``availableCapacity``\n-  ``current_route_segment_version``\n-  ``waypoints_version``\n\nThe vehicle ``name`` also cannot be updated.\n\nIf the ``attributes`` field is updated, **all** the vehicle's\nattributes are replaced with the attributes provided in the\nrequest. If you want to update only some attributes, see the\n``UpdateVehicleAttributes`` method. Likewise, the ``waypoints``\nfield can be updated, but must contain all the waypoints\ncurrently on the vehicle, and no other waypoints.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_vehicle_attributes",
          "description": "Partially updates a vehicle's attributes. Only the attributes\nmentioned in the request will be updated, other attributes will\nNOT be altered. Note: this is different in ``UpdateVehicle``,\nwhere the whole ``attributes`` field will be replaced by the one\nin ``UpdateVehicleRequest``, attributes not in the request would\nbe removed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_update_vehicle_attributes():\n        # Create a client\n        client = fleetengine_v1.VehicleServiceAsyncClient()\n\n        # Initialize request argument(s)\n        attributes = fleetengine_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_vehicles",
          "description": "Returns a paginated list of vehicles associated with\na provider that match the request options.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_list_vehicles():\n        # Create a client\n        client = fleetengine_v1.VehicleServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.ListVehiclesRequest(\n            parent=\"parent_value\",\n            vehicle_type_categories=['PEDESTRIAN'],\n        )\n\n        # Make the request\n        page_result = client.list_vehicles(request=request)\n\n        # Handle the response\n        a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_vehicles",
          "description": "Returns a list of vehicles that match the request\noptions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_v1\n\n    async def sample_search_vehicles():\n        # Create a client\n        client = fleetengine_v1.VehicleServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_v1.SearchVehiclesRequest(\n            parent=\"parent_value\",\n            pickup_radius_meters=2146,\n            count=553,\n            minimum_capacity=1705,\n            trip_types=['EXCLUSIVE'],\n            order_by=\"COST\",\n        )\n\n        # Make the request\n        response = aw",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}