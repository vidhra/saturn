{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-maps-fleetengine\\google\\maps\\fleetengine_v1\\types\\trip_api.py": [
    {
      "type": "function",
      "name": "CreateTripRequest",
      "description": "CreateTrip request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    parent (str):\n        Required. Must be in the format ``providers/{provider}``.\n        The provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    trip_id (str):\n        Required. Unique Trip ID. Subject to the following\n        restrictions:\n\n        -  Must be a valid Unicode string.\n        -  Limited to a maximum length of 64 characters.\n        -  Normalized according to [Unicode Normalization Form C]\n           (http://www.unicode.org/reports/tr15/).\n        -  May not contain any of the following ASCII characters:\n           '/', ':', '?', ',', or '#'.\n    trip (google.maps.fleetengine_v1.types.Trip):\n        Required. Trip entity to create.\n\n        When creating a Trip, the following fields are required:\n\n        -  ``trip_ty",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "parent": {
            "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "trip_id": {
            "description": "Required. Unique Trip ID. Subject to the following restrictions:  -  Must be a valid Unicode string. -  Limited to a maximum length of 64 characters. -  Normalized according to [Unicode Normalization Form C] (http://www.unicode.org/reports/tr15/). -  May not contain any of the following ASCII characters: '/', ':', '?', ',', or '#'.",
            "type": "string"
          },
          "trip": {
            "description": "Required. Trip entity to create.  When creating a Trip, the following fields are required:  -  ``trip_type`` -  ``pickup_point``  The following fields are used if you provide them:  -  ``number_of_passengers`` -  ``vehicle_id`` -  ``dropoff_point`` -  ``intermediate_destinations`` -  ``vehicle_waypoints``  All other Trip fields are ignored. For example, all trips start with a ``trip_status`` of ``NEW`` even if you pass in a ``trip_status`` of ``CANCELED`` in the creation request.  Only ``EXCLUSIVE`` trips support ``intermediate_destinations``.  When ``vehicle_id`` is set for a shared trip, you must supply the list of ``Trip.vehicle_waypoints`` to specify the order of the remaining waypoints for the vehicle, otherwise the waypoint order will be undetermined.  When you specify ``Trip.vehicle_waypoints``, the list must contain all the remaining waypoints of the vehicle's trips, with no extra waypoints. You must order these waypoints such that for a given trip, the pickup point is before intermediate destinations, and all intermediate destinations come before the drop-off point. An ``EXCLUSIVE`` trip's waypoints must not interleave with any other trips.  The ``trip_id``, ``waypoint_type`` and ``location`` fields are used, and all other TripWaypoint fields in ``vehicle_waypoints`` are ignored.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. In the format \"providers/{provider}/trips/{trip}\".",
                "type": "string"
              },
              "vehicle_id": {
                "description": "ID of the vehicle making this trip.",
                "type": "string"
              },
              "trip_status": {
                "type": "enum",
                "name": "TripStatus",
                "description": "The status of a trip indicating its progression.\n\nValues:\n    UNKNOWN_TRIP_STATUS (0):\n        Default, used for unspecified or unrecognized\n        trip status.\n    NEW (1):\n        Newly created trip.\n    ENROUTE_TO_PICKUP (2):\n        The driver is on their way to the pickup\n        point.\n    ARRIVED_AT_PICKUP (3):\n        The driver has arrived at the pickup point.\n    ARRIVED_AT_INTERMEDIATE_DESTINATION (7):\n        The driver has arrived at an intermediate\n        destination and is waiting for the rider.\n    ENROUTE_TO_INTERMEDIATE_DESTINATION (8):\n        The driver is on their way to an intermediate\n        destination (not the dropoff point).\n    ENROUTE_TO_DROPOFF (4):\n        The driver has picked up the rider and is on\n        their way to the next destination.\n    COMPLETE (5):\n        The rider has been dropped off and the trip\n        is complete.\n    CANCELED (6):\n        The trip was canceled prior to pickup by the\n        driver, rider, or rideshare provider.",
                "values": {
                  "UNKNOWN_TRIP_STATUS": {
                    "value": 0
                  },
                  "NEW": {
                    "value": 1
                  },
                  "ENROUTE_TO_PICKUP": {
                    "value": 2
                  },
                  "ARRIVED_AT_PICKUP": {
                    "value": 3
                  },
                  "ARRIVED_AT_INTERMEDIATE_DESTINATION": {
                    "value": 7
                  },
                  "ENROUTE_TO_INTERMEDIATE_DESTINATION": {
                    "value": 8
                  },
                  "ENROUTE_TO_DROPOFF": {
                    "value": 4
                  },
                  "COMPLETE": {
                    "value": 5
                  },
                  "CANCELED": {
                    "value": 6
                  }
                }
              },
              "trip_type": {
                "type": "enum",
                "name": "TripType",
                "description": "The type of a trip.\n\nValues:\n    UNKNOWN_TRIP_TYPE (0):\n        Default, used for unspecified or unrecognized\n        trip types.\n    SHARED (1):\n        The trip may share a vehicle with other\n        trips.\n    EXCLUSIVE (2):\n        The trip is exclusive to a vehicle.",
                "values": {
                  "UNKNOWN_TRIP_TYPE": {
                    "value": 0
                  },
                  "SHARED": {
                    "value": 1
                  },
                  "EXCLUSIVE": {
                    "value": 2
                  }
                }
              },
              "pickup_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the location of a trip waypoint.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "terminal_point_id": {
                    "type": "object",
                    "properties": {
                      "place_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "generated_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Deprecated.",
                        "type": "string"
                      }
                    }
                  },
                  "access_point_id": {
                    "description": "Deprecated: Specify the ``point`` field instead.",
                    "type": "string"
                  },
                  "trip_id": {
                    "description": "Deprecated.",
                    "type": "string"
                  },
                  "terminal_location_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_pickup_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_pickup_arrival_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "pickup_time": {
                "description": "Output only. Either the estimated future time when the rider(s) will be picked up, or the actual time when they were picked up.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "intermediate_destinations": {
                "description": "Intermediate stops in order that the trip requests (in addition to pickup and dropoff). Initially this will not be supported for shared trips.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the location of a trip waypoint.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "terminal_point_id": {
                      "type": "object",
                      "properties": {
                        "place_id": {
                          "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                          "type": "string"
                        },
                        "generated_id": {
                          "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Deprecated.",
                          "type": "string"
                        }
                      }
                    },
                    "access_point_id": {
                      "description": "Deprecated: Specify the ``point`` field instead.",
                      "type": "string"
                    },
                    "trip_id": {
                      "description": "Deprecated.",
                      "type": "string"
                    },
                    "terminal_location_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "intermediate_destinations_version": {
                "description": "Indicates the last time the ``intermediate_destinations`` was modified. Your server should cache this value and pass it in ``UpdateTripRequest`` when update ``intermediate_destination_index`` to ensure the ``intermediate_destinations`` is not changed.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "intermediate_destination_index": {
                "description": "When ``TripStatus`` is ``ENROUTE_TO_INTERMEDIATE_DESTINATION``, a number between [0..N-1] indicating which intermediate destination the vehicle will cross next. When ``TripStatus`` is ``ARRIVED_AT_INTERMEDIATE_DESTINATION``, a number between [0..N-1] indicating which intermediate destination the vehicle is at. The provider sets this value. If there are no ``intermediate_destinations``, this field is ignored.",
                "type": "integer"
              },
              "actual_intermediate_destination_arrival_points": {
                "description": "Input only. The actual time and location of the driver's arrival at an intermediate destination. This field is for provider to provide feedback on actual arrival information at intermediate destinations.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the actual location.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "timestamp": {
                      "description": "Indicates when the stop happened.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "stop_time": {
                      "description": "Input only. Deprecated.  Use the timestamp field.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "actual_intermediate_destinations": {
                "description": "Input only. The actual time and location when and where the customer was picked up from an intermediate destination. This field is for provider to provide feedback on actual pickup information at intermediate destinations.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the actual location.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "timestamp": {
                      "description": "Indicates when the stop happened.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "stop_time": {
                      "description": "Input only. Deprecated.  Use the timestamp field.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "dropoff_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the location of a trip waypoint.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "terminal_point_id": {
                    "type": "object",
                    "properties": {
                      "place_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "generated_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Deprecated.",
                        "type": "string"
                      }
                    }
                  },
                  "access_point_id": {
                    "description": "Deprecated: Specify the ``point`` field instead.",
                    "type": "string"
                  },
                  "trip_id": {
                    "description": "Deprecated.",
                    "type": "string"
                  },
                  "terminal_location_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_dropoff_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "dropoff_time": {
                "description": "Output only. Either the estimated future time when the rider(s) will be dropped off at the final destination, or the actual time when they were dropped off.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_waypoints": {
                "description": "Output only. The full path from the current location to the dropoff point, inclusive. This path could include waypoints from other trips.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object",
                      "properties": {
                        "point": {
                          "description": "Required. Denotes the location of a trip waypoint.",
                          "type": "object",
                          "reference": "google.type.latlng_pb2.LatLng"
                        },
                        "terminal_point_id": {
                          "type": "object",
                          "properties": {
                            "place_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "generated_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Deprecated.",
                              "type": "string"
                            }
                          }
                        },
                        "access_point_id": {
                          "description": "Deprecated: Specify the ``point`` field instead.",
                          "type": "string"
                        },
                        "trip_id": {
                          "description": "Deprecated.",
                          "type": "string"
                        },
                        "terminal_location_type": {
                          "type": "enum",
                          "name": "WaypointType",
                          "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                          "values": {
                            "UNKNOWN_WAYPOINT_TYPE": {
                              "value": 0
                            },
                            "PICKUP_WAYPOINT_TYPE": {
                              "value": 1
                            },
                            "DROP_OFF_WAYPOINT_TYPE": {
                              "value": 2
                            },
                            "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                              "value": 3
                            }
                          }
                        }
                      },
                      "required": [
                        "point"
                      ]
                    },
                    "trip_id": {
                      "description": "The trip associated with this waypoint.",
                      "type": "string"
                    },
                    "waypoint_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    },
                    "path_to_waypoint": {
                      "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      }
                    },
                    "encoded_path_to_waypoint": {
                      "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                      "type": "string"
                    },
                    "traffic_to_waypoint": {
                      "type": "object",
                      "properties": {
                        "speed_reading_interval": {
                          "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_polyline_point_index": {
                                "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                                "type": "integer"
                              },
                              "end_polyline_point_index": {
                                "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                                "type": "integer"
                              },
                              "speed": {
                                "type": "enum",
                                "name": "Speed",
                                "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                                "values": {
                                  "SPEED_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "NORMAL": {
                                    "value": 1
                                  },
                                  "SLOW": {
                                    "value": 2
                                  },
                                  "TRAFFIC_JAM": {
                                    "value": 3
                                  }
                                }
                              }
                            }
                          }
                        },
                        "encoded_path_to_waypoint": {
                          "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                          "type": "string"
                        }
                      }
                    },
                    "distance_meters": {
                      "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.wrappers_pb2.Int32Value"
                    },
                    "eta": {
                      "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "duration": {
                      "type": "enum",
                      "name": "Duration",
                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                      "values": {
                        "UNDEFINED_DURATION": {
                          "value": 0
                        },
                        "DURATION_UNSPECIFIED": {
                          "value": 529071340
                        },
                        "HOUR": {
                          "value": 2223588
                        },
                        "MAX": {
                          "value": 76100
                        },
                        "MINUTE": {
                          "value": 126786068
                        }
                      }
                    }
                  }
                }
              },
              "vehicle_waypoints": {
                "description": "This field supports manual ordering of the waypoints for the trip. It contains all of the remaining waypoints for the assigned vehicle, as well as the pickup and drop-off waypoints for this trip. If the trip hasn't been assigned to a vehicle, then Fleet Engine ignores this field. For privacy reasons, this field is only populated by the server on ``UpdateTrip`` and ``CreateTrip`` calls, NOT on ``GetTrip`` calls.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object",
                      "properties": {
                        "point": {
                          "description": "Required. Denotes the location of a trip waypoint.",
                          "type": "object",
                          "reference": "google.type.latlng_pb2.LatLng"
                        },
                        "terminal_point_id": {
                          "type": "object",
                          "properties": {
                            "place_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "generated_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Deprecated.",
                              "type": "string"
                            }
                          }
                        },
                        "access_point_id": {
                          "description": "Deprecated: Specify the ``point`` field instead.",
                          "type": "string"
                        },
                        "trip_id": {
                          "description": "Deprecated.",
                          "type": "string"
                        },
                        "terminal_location_type": {
                          "type": "enum",
                          "name": "WaypointType",
                          "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                          "values": {
                            "UNKNOWN_WAYPOINT_TYPE": {
                              "value": 0
                            },
                            "PICKUP_WAYPOINT_TYPE": {
                              "value": 1
                            },
                            "DROP_OFF_WAYPOINT_TYPE": {
                              "value": 2
                            },
                            "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                              "value": 3
                            }
                          }
                        }
                      },
                      "required": [
                        "point"
                      ]
                    },
                    "trip_id": {
                      "description": "The trip associated with this waypoint.",
                      "type": "string"
                    },
                    "waypoint_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    },
                    "path_to_waypoint": {
                      "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      }
                    },
                    "encoded_path_to_waypoint": {
                      "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                      "type": "string"
                    },
                    "traffic_to_waypoint": {
                      "type": "object",
                      "properties": {
                        "speed_reading_interval": {
                          "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_polyline_point_index": {
                                "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                                "type": "integer"
                              },
                              "end_polyline_point_index": {
                                "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                                "type": "integer"
                              },
                              "speed": {
                                "type": "enum",
                                "name": "Speed",
                                "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                                "values": {
                                  "SPEED_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "NORMAL": {
                                    "value": 1
                                  },
                                  "SLOW": {
                                    "value": 2
                                  },
                                  "TRAFFIC_JAM": {
                                    "value": 3
                                  }
                                }
                              }
                            }
                          }
                        },
                        "encoded_path_to_waypoint": {
                          "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                          "type": "string"
                        }
                      }
                    },
                    "distance_meters": {
                      "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.wrappers_pb2.Int32Value"
                    },
                    "eta": {
                      "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "duration": {
                      "type": "enum",
                      "name": "Duration",
                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                      "values": {
                        "UNDEFINED_DURATION": {
                          "value": 0
                        },
                        "DURATION_UNSPECIFIED": {
                          "value": 529071340
                        },
                        "HOUR": {
                          "value": 2223588
                        },
                        "MAX": {
                          "value": 76100
                        },
                        "MINUTE": {
                          "value": 126786068
                        }
                      }
                    }
                  }
                }
              },
              "route": {
                "description": "Output only. Anticipated route for this trip to the first entry in remaining_waypoints. Note that the first waypoint may belong to a different trip.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.type.latlng_pb2.LatLng"
                }
              },
              "current_route_segment": {
                "description": "Output only. An encoded path to the next waypoint. Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                "type": "string"
              },
              "current_route_segment_version": {
                "description": "Output only. Indicates the last time the route was modified. Note: This field is intended only for use by the Driver SDK and Consumer SDK.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "current_route_segment_traffic": {
                "type": "object",
                "properties": {
                  "speed_reading_interval": {
                    "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start_polyline_point_index": {
                          "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                          "type": "integer"
                        },
                        "end_polyline_point_index": {
                          "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                          "type": "integer"
                        },
                        "speed": {
                          "type": "enum",
                          "name": "Speed",
                          "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                          "values": {
                            "SPEED_UNSPECIFIED": {
                              "value": 0
                            },
                            "NORMAL": {
                              "value": 1
                            },
                            "SLOW": {
                              "value": 2
                            },
                            "TRAFFIC_JAM": {
                              "value": 3
                            }
                          }
                        }
                      }
                    }
                  },
                  "encoded_path_to_waypoint": {
                    "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                    "type": "string"
                  }
                }
              },
              "current_route_segment_traffic_version": {
                "description": "Output only. Indicates the last time the ``current_route_segment_traffic`` was modified.  Note: This field is intended only for use by the Driver SDK and Consumer SDK.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "current_route_segment_end_point": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "point": {
                        "description": "Required. Denotes the location of a trip waypoint.",
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      },
                      "terminal_point_id": {
                        "type": "object",
                        "properties": {
                          "place_id": {
                            "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                            "type": "string"
                          },
                          "generated_id": {
                            "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Deprecated.",
                            "type": "string"
                          }
                        }
                      },
                      "access_point_id": {
                        "description": "Deprecated: Specify the ``point`` field instead.",
                        "type": "string"
                      },
                      "trip_id": {
                        "description": "Deprecated.",
                        "type": "string"
                      },
                      "terminal_location_type": {
                        "type": "enum",
                        "name": "WaypointType",
                        "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                        "values": {
                          "UNKNOWN_WAYPOINT_TYPE": {
                            "value": 0
                          },
                          "PICKUP_WAYPOINT_TYPE": {
                            "value": 1
                          },
                          "DROP_OFF_WAYPOINT_TYPE": {
                            "value": 2
                          },
                          "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                            "value": 3
                          }
                        }
                      }
                    },
                    "required": [
                      "point"
                    ]
                  },
                  "trip_id": {
                    "description": "The trip associated with this waypoint.",
                    "type": "string"
                  },
                  "waypoint_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  },
                  "path_to_waypoint": {
                    "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    }
                  },
                  "encoded_path_to_waypoint": {
                    "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                    "type": "string"
                  },
                  "traffic_to_waypoint": {
                    "type": "object",
                    "properties": {
                      "speed_reading_interval": {
                        "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "start_polyline_point_index": {
                              "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                              "type": "integer"
                            },
                            "end_polyline_point_index": {
                              "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                              "type": "integer"
                            },
                            "speed": {
                              "type": "enum",
                              "name": "Speed",
                              "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                              "values": {
                                "SPEED_UNSPECIFIED": {
                                  "value": 0
                                },
                                "NORMAL": {
                                  "value": 1
                                },
                                "SLOW": {
                                  "value": 2
                                },
                                "TRAFFIC_JAM": {
                                  "value": 3
                                }
                              }
                            }
                          }
                        }
                      },
                      "encoded_path_to_waypoint": {
                        "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                        "type": "string"
                      }
                    }
                  },
                  "distance_meters": {
                    "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "eta": {
                    "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  }
                }
              },
              "remaining_distance_meters": {
                "description": "Output only. The remaining driving distance in the ``current_route_segment`` field. The value is unspecified if the trip is not assigned to a vehicle, or the trip is completed or cancelled.",
                "type": "object",
                "reference": "google.protobuf.wrappers_pb2.Int32Value"
              },
              "eta_to_first_waypoint": {
                "description": "Output only. The ETA to the next waypoint (the first entry in the ``remaining_waypoints`` field). The value is unspecified if the trip is not assigned to a vehicle, or the trip is inactive (completed or cancelled).",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_time_to_first_waypoint": {
                "type": "enum",
                "name": "Duration",
                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                "values": {
                  "UNDEFINED_DURATION": {
                    "value": 0
                  },
                  "DURATION_UNSPECIFIED": {
                    "value": 529071340
                  },
                  "HOUR": {
                    "value": 2223588
                  },
                  "MAX": {
                    "value": 76100
                  },
                  "MINUTE": {
                    "value": 126786068
                  }
                }
              },
              "remaining_waypoints_version": {
                "description": "Output only. Indicates the last time that ``remaining_waypoints`` was changed (a waypoint was added, removed, or changed).",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_waypoints_route_version": {
                "description": "Output only. Indicates the last time the ``remaining_waypoints.path_to_waypoint`` and ``remaining_waypoints.traffic_to_waypoint`` were modified. Your client app should cache this value and pass it in ``GetTripRequest`` to ensure the paths and traffic for ``remaining_waypoints`` are only returned if updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "number_of_passengers": {
                "description": "Immutable. Indicates the number of passengers on this trip and does not include the driver. A vehicle must have available capacity to be returned in a ``SearchVehicles`` response.",
                "type": "integer"
              },
              "last_location": {
                "type": "object",
                "properties": {
                  "location": {
                    "description": "The location of the vehicle. When it is sent to Fleet Engine, the vehicle's location is a GPS location. When you receive it in a response, the vehicle's location can be either a GPS location, a supplemental location, or some other estimated location. The source is specified in ``location_sensor``.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "horizontal_accuracy": {
                    "description": "Deprecated: Use ``latlng_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "latlng_accuracy": {
                    "description": "Accuracy of ``location`` in meters as a radius.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "heading": {
                    "description": "Direction the vehicle is moving in degrees. 0 represents North. The valid range is [0,360).",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "bearing_accuracy": {
                    "description": "Deprecated: Use ``heading_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "heading_accuracy": {
                    "description": "Accuracy of ``heading`` in degrees.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "altitude": {
                    "description": "Altitude in meters above WGS84.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "vertical_accuracy": {
                    "description": "Deprecated: Use ``altitude_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "altitude_accuracy": {
                    "description": "Accuracy of ``altitude`` in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "speed_kmph": {
                    "description": "Speed of the vehicle in kilometers per hour. Deprecated: Use ``speed`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "speed": {
                    "description": "Speed of the vehicle in meters/second",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "speed_accuracy": {
                    "description": "Accuracy of ``speed`` in meters/second.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "update_time": {
                    "description": "The time when ``location`` was reported by the sensor according to the sensor's clock.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "server_time": {
                    "description": "Output only. The time when the server received the location information.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "is_road_snapped": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  },
                  "is_gps_sensor_enabled": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  },
                  "time_since_update": {
                    "description": "Input only. Time (in seconds) since this location was first sent to the server. This will be zero for the first update. If the time is unknown (for example, when the app restarts), this value resets to zero.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "num_stale_updates": {
                    "description": "Input only. Deprecated: Other signals are now used to determine if a location is stale.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "raw_location": {
                    "description": "Raw vehicle location (unprocessed by road-snapper).",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "raw_location_time": {
                    "description": "Timestamp associated with the raw location.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "raw_location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "raw_location_accuracy": {
                    "description": "Accuracy of ``raw_location`` as a radius, in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "supplemental_location": {
                    "description": "Supplemental location provided by the integrating app.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "supplemental_location_time": {
                    "description": "Timestamp associated with the supplemental location.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "supplemental_location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "supplemental_location_accuracy": {
                    "description": "Accuracy of ``supplemental_location`` as a radius, in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "road_snapped": {
                    "description": "Deprecated: Use ``is_road_snapped`` instead.",
                    "type": "boolean"
                  }
                }
              },
              "last_location_snappable": {
                "description": "Output only. Indicates whether the vehicle's ``last_location`` can be snapped to the current_route_segment. False if ``last_location`` or ``current_route_segment`` doesn't exist. It is computed by Fleet Engine. Any update from clients will be ignored.",
                "type": "boolean"
              },
              "view": {
                "type": "enum",
                "name": "TripView",
                "description": "Selector for different sets of Trip fields in a ``GetTrip``\nresponse. See `AIP-157 <https://google.aip.dev/157>`__ for context.\nAdditional views are likely to be added.\n\nValues:\n    TRIP_VIEW_UNSPECIFIED (0):\n        The default value. For backwards-compatibility, the API will\n        default to an SDK view. To ensure stability and support,\n        customers are advised to select a ``TripView`` other than\n        ``SDK``.\n    SDK (1):\n        Includes fields that may not be interpretable\n        or supportable using publicly available\n        libraries.\n    JOURNEY_SHARING_V1S (2):\n        Trip fields are populated for the Journey\n        Sharing use case. This view is intended for\n        server-to-server communications.",
                "values": {
                  "TRIP_VIEW_UNSPECIFIED": {
                    "value": 0
                  },
                  "SDK": {
                    "value": 1
                  },
                  "JOURNEY_SHARING_V1S": {
                    "value": 2
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "trip_id",
          "trip"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTripRequest",
      "description": "GetTrip request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/trips/{trip}``. The provider must be\n        the Project ID (for example, ``sample-cloud-project``) of\n        the Google Cloud Project of which the service account making\n        this call is a member.\n    view (google.maps.fleetengine_v1.types.TripView):\n        The subset of Trip fields that should be\n        returned and their interpretation.\n    current_route_segment_version (google.protobuf.timestamp_pb2.Timestamp):\n        Indicates the minimum timestamp (exclusive) for which\n        ``Trip.route`` or ``Trip.current_route_segment`` data are\n        retrieved. If route data are unchanged since this timestamp,\n        the route field is not set in the response. If a minimum is\n        unspecified, the route data are always retrieved.\n    remaining_waypoints_version (google",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/trips/{trip}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "view": {
            "description": "Selector for different sets of Trip fields in a ``GetTrip``\nresponse. See `AIP-157 <https://google.aip.dev/157>`__ for context.\nAdditional views are likely to be added.\n\nValues:\n    TRIP_VIEW_UNSPECIFIED (0):\n        The default value. For backwards-compatibility, the API will\n        default to an SDK view. To ensure stability and support,\n        customers are advised to select a ``TripView`` other than\n        ``SDK``.\n    SDK (1):\n        Includes fields that may not be interpretable\n        or supportable using publicly available\n        libraries.\n    JOURNEY_SHARING_V1S (2):\n        Trip fields are populated for the Journey\n        Sharing use case. This view is intended for\n        server-to-server communications.",
            "type": "enum",
            "name": "TripView",
            "values": {
              "TRIP_VIEW_UNSPECIFIED": {
                "value": 0
              },
              "SDK": {
                "value": 1
              },
              "JOURNEY_SHARING_V1S": {
                "value": 2
              }
            }
          },
          "current_route_segment_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Trip.route`` or ``Trip.current_route_segment`` data are retrieved. If route data are unchanged since this timestamp, the route field is not set in the response. If a minimum is unspecified, the route data are always retrieved.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "remaining_waypoints_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Trip.remaining_waypoints`` are retrieved. If they are unchanged since this timestamp, the ``remaining_waypoints`` are not set in the response. If this field is unspecified, ``remaining_waypoints`` is always retrieved.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "route_format_type": {
            "description": "The type of polyline format.\n\nValues:\n    UNKNOWN_FORMAT_TYPE (0):\n        The format is unspecified or unknown.\n    LAT_LNG_LIST_TYPE (1):\n        A list of ``google.type.LatLng``.\n    ENCODED_POLYLINE_TYPE (2):\n        A polyline encoded with a polyline\n        compression algorithm. Decoding is not yet\n        supported.",
            "type": "enum",
            "name": "PolylineFormatType",
            "values": {
              "UNKNOWN_FORMAT_TYPE": {
                "value": 0
              },
              "LAT_LNG_LIST_TYPE": {
                "value": 1
              },
              "ENCODED_POLYLINE_TYPE": {
                "value": 2
              }
            }
          },
          "current_route_segment_traffic_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Trip.current_route_segment_traffic`` is retrieved. If traffic data are unchanged since this timestamp, the ``current_route_segment_traffic`` field is not set in the response. If a minimum is unspecified, the traffic data are always retrieved. Note that traffic is only available for On-Demand Rides and Deliveries Solution customers.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "remaining_waypoints_route_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Trip.remaining_waypoints.traffic_to_waypoint`` and ``Trip.remaining_waypoints.path_to_waypoint`` data are retrieved. If data are unchanged since this timestamp, the fields above are not set in the response. If ``remaining_waypoints_route_version`` is unspecified, traffic and path are always retrieved.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReportBillableTripRequest",
      "description": "ReportBillableTrip request message.\n\nAttributes:\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/billableTrips/{billable_trip}``. The\n        provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    country_code (str):\n        Required. Two letter country code of the\n        country where the trip takes place. Price is\n        defined according to country code.\n    platform (google.maps.fleetengine_v1.types.BillingPlatformIdentifier):\n        The platform upon which the request was\n        issued.\n    related_ids (MutableSequence[str]):\n        The identifiers that are directly related to the trip being\n        reported. These are usually IDs (for example, session IDs)\n        of pre-booking operations done before the trip ID is\n        available. The number of ``related_ids`` is limited to 50.\n    solution_type (google.maps.fleetengine_v1.types.Repor",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/billableTrips/{billable_trip}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "country_code": {
            "description": "Required. Two letter country code of the country where the trip takes place. Price is defined according to country code.",
            "type": "string"
          },
          "platform": {
            "description": "A set of values that indicate upon which platform the request\nwas issued.\n\nValues:\n    BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED (0):\n        Default. Used for unspecified platforms.\n    SERVER (1):\n        The platform is a client server.\n    WEB (2):\n        The platform is a web browser.\n    ANDROID (3):\n        The platform is an Android mobile device.\n    IOS (4):\n        The platform is an IOS mobile device.\n    OTHERS (5):\n        Other platforms that are not listed in this\n        enumeration.",
            "type": "enum",
            "name": "BillingPlatformIdentifier",
            "values": {
              "BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED": {
                "value": 0
              },
              "SERVER": {
                "value": 1
              },
              "WEB": {
                "value": 2
              },
              "ANDROID": {
                "value": 3
              },
              "IOS": {
                "value": 4
              },
              "OTHERS": {
                "value": 5
              }
            }
          },
          "related_ids": {
            "description": "The identifiers that are directly related to the trip being reported. These are usually IDs (for example, session IDs) of pre-booking operations done before the trip ID is available. The number of ``related_ids`` is limited to 50.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "solution_type": {
            "description": "Selector for different solution types of a reported trip.\n\nValues:\n    SOLUTION_TYPE_UNSPECIFIED (0):\n        The default value. For backwards-compatibility, the API will\n        use ``ON_DEMAND_RIDESHARING_AND_DELIVERIES`` by default\n        which is the first supported solution type.\n    ON_DEMAND_RIDESHARING_AND_DELIVERIES (1):\n        The solution is an on-demand ridesharing and\n        deliveries trip.",
            "type": "enum",
            "name": "SolutionType",
            "values": {
              "SOLUTION_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "ON_DEMAND_RIDESHARING_AND_DELIVERIES": {
                "value": 1
              }
            }
          }
        },
        "required": [
          "name",
          "country_code"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTripRequest",
      "description": "UpdateTrip request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/trips/{trip}``. The provider must be\n        the Project ID (for example, ``sample-consumer-project``) of\n        the Google Cloud Project of which the service account making\n        this call is a member.\n    trip (google.maps.fleetengine_v1.types.Trip):\n        Required. The Trip associated with the update.\n\n        The following fields are maintained by the Fleet Engine. Do\n        not update them using Trip.update.\n\n        -  ``current_route_segment``\n        -  ``current_route_segment_end_point``\n        -  ``current_route_segment_traffic``\n        -  ``current_route_segment_traffic_version``\n        -  ``current_route_segment_version``\n        -  ``dropoff_time``\n        -  ``eta_to_next_waypoint``\n        -  ``intermediate_destinations_version``\n        -  ``last_loc",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/trips/{trip}``. The provider must be the Project ID (for example, ``sample-consumer-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "trip": {
            "description": "Required. The Trip associated with the update.  The following fields are maintained by the Fleet Engine. Do not update them using Trip.update.  -  ``current_route_segment`` -  ``current_route_segment_end_point`` -  ``current_route_segment_traffic`` -  ``current_route_segment_traffic_version`` -  ``current_route_segment_version`` -  ``dropoff_time`` -  ``eta_to_next_waypoint`` -  ``intermediate_destinations_version`` -  ``last_location`` -  ``name`` -  ``number_of_passengers`` -  ``pickup_time`` -  ``remaining_distance_meters`` -  ``remaining_time_to_first_waypoint`` -  ``remaining_waypoints`` -  ``remaining_waypoints_version`` -  ``route``  When you update the ``Trip.vehicle_id`` for a shared trip, you must supply the list of ``Trip.vehicle_waypoints`` to specify the order of the remaining waypoints, otherwise the order will be undetermined.  When you specify ``Trip.vehicle_waypoints``, the list must contain all the remaining waypoints of the vehicle's trips, with no extra waypoints. You must order these waypoints such that for a given trip, the pickup point is before intermediate destinations, and all intermediate destinations come before the drop-off point. An ``EXCLUSIVE`` trip's waypoints must not interleave with any other trips. The ``trip_id``, ``waypoint_type`` and ``location`` fields are used, and all other TripWaypoint fields in ``vehicle_waypoints`` are ignored.  To avoid a race condition for trips with multiple destinations, you should provide ``Trip.intermediate_destinations_version`` when updating the trip status to ``ENROUTE_TO_INTERMEDIATE_DESTINATION``. The ``Trip.intermediate_destinations_version`` passed must be consistent with Fleet Engine's version. If it isn't, the request fails.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. In the format \"providers/{provider}/trips/{trip}\".",
                "type": "string"
              },
              "vehicle_id": {
                "description": "ID of the vehicle making this trip.",
                "type": "string"
              },
              "trip_status": {
                "type": "enum",
                "name": "TripStatus",
                "description": "The status of a trip indicating its progression.\n\nValues:\n    UNKNOWN_TRIP_STATUS (0):\n        Default, used for unspecified or unrecognized\n        trip status.\n    NEW (1):\n        Newly created trip.\n    ENROUTE_TO_PICKUP (2):\n        The driver is on their way to the pickup\n        point.\n    ARRIVED_AT_PICKUP (3):\n        The driver has arrived at the pickup point.\n    ARRIVED_AT_INTERMEDIATE_DESTINATION (7):\n        The driver has arrived at an intermediate\n        destination and is waiting for the rider.\n    ENROUTE_TO_INTERMEDIATE_DESTINATION (8):\n        The driver is on their way to an intermediate\n        destination (not the dropoff point).\n    ENROUTE_TO_DROPOFF (4):\n        The driver has picked up the rider and is on\n        their way to the next destination.\n    COMPLETE (5):\n        The rider has been dropped off and the trip\n        is complete.\n    CANCELED (6):\n        The trip was canceled prior to pickup by the\n        driver, rider, or rideshare provider.",
                "values": {
                  "UNKNOWN_TRIP_STATUS": {
                    "value": 0
                  },
                  "NEW": {
                    "value": 1
                  },
                  "ENROUTE_TO_PICKUP": {
                    "value": 2
                  },
                  "ARRIVED_AT_PICKUP": {
                    "value": 3
                  },
                  "ARRIVED_AT_INTERMEDIATE_DESTINATION": {
                    "value": 7
                  },
                  "ENROUTE_TO_INTERMEDIATE_DESTINATION": {
                    "value": 8
                  },
                  "ENROUTE_TO_DROPOFF": {
                    "value": 4
                  },
                  "COMPLETE": {
                    "value": 5
                  },
                  "CANCELED": {
                    "value": 6
                  }
                }
              },
              "trip_type": {
                "type": "enum",
                "name": "TripType",
                "description": "The type of a trip.\n\nValues:\n    UNKNOWN_TRIP_TYPE (0):\n        Default, used for unspecified or unrecognized\n        trip types.\n    SHARED (1):\n        The trip may share a vehicle with other\n        trips.\n    EXCLUSIVE (2):\n        The trip is exclusive to a vehicle.",
                "values": {
                  "UNKNOWN_TRIP_TYPE": {
                    "value": 0
                  },
                  "SHARED": {
                    "value": 1
                  },
                  "EXCLUSIVE": {
                    "value": 2
                  }
                }
              },
              "pickup_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the location of a trip waypoint.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "terminal_point_id": {
                    "type": "object",
                    "properties": {
                      "place_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "generated_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Deprecated.",
                        "type": "string"
                      }
                    }
                  },
                  "access_point_id": {
                    "description": "Deprecated: Specify the ``point`` field instead.",
                    "type": "string"
                  },
                  "trip_id": {
                    "description": "Deprecated.",
                    "type": "string"
                  },
                  "terminal_location_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_pickup_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_pickup_arrival_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "pickup_time": {
                "description": "Output only. Either the estimated future time when the rider(s) will be picked up, or the actual time when they were picked up.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "intermediate_destinations": {
                "description": "Intermediate stops in order that the trip requests (in addition to pickup and dropoff). Initially this will not be supported for shared trips.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the location of a trip waypoint.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "terminal_point_id": {
                      "type": "object",
                      "properties": {
                        "place_id": {
                          "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                          "type": "string"
                        },
                        "generated_id": {
                          "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Deprecated.",
                          "type": "string"
                        }
                      }
                    },
                    "access_point_id": {
                      "description": "Deprecated: Specify the ``point`` field instead.",
                      "type": "string"
                    },
                    "trip_id": {
                      "description": "Deprecated.",
                      "type": "string"
                    },
                    "terminal_location_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "intermediate_destinations_version": {
                "description": "Indicates the last time the ``intermediate_destinations`` was modified. Your server should cache this value and pass it in ``UpdateTripRequest`` when update ``intermediate_destination_index`` to ensure the ``intermediate_destinations`` is not changed.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "intermediate_destination_index": {
                "description": "When ``TripStatus`` is ``ENROUTE_TO_INTERMEDIATE_DESTINATION``, a number between [0..N-1] indicating which intermediate destination the vehicle will cross next. When ``TripStatus`` is ``ARRIVED_AT_INTERMEDIATE_DESTINATION``, a number between [0..N-1] indicating which intermediate destination the vehicle is at. The provider sets this value. If there are no ``intermediate_destinations``, this field is ignored.",
                "type": "integer"
              },
              "actual_intermediate_destination_arrival_points": {
                "description": "Input only. The actual time and location of the driver's arrival at an intermediate destination. This field is for provider to provide feedback on actual arrival information at intermediate destinations.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the actual location.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "timestamp": {
                      "description": "Indicates when the stop happened.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "stop_time": {
                      "description": "Input only. Deprecated.  Use the timestamp field.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "actual_intermediate_destinations": {
                "description": "Input only. The actual time and location when and where the customer was picked up from an intermediate destination. This field is for provider to provide feedback on actual pickup information at intermediate destinations.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "point": {
                      "description": "Required. Denotes the actual location.",
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    },
                    "timestamp": {
                      "description": "Indicates when the stop happened.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "stop_time": {
                      "description": "Input only. Deprecated.  Use the timestamp field.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    }
                  },
                  "required": [
                    "point"
                  ]
                }
              },
              "dropoff_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the location of a trip waypoint.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "terminal_point_id": {
                    "type": "object",
                    "properties": {
                      "place_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "generated_id": {
                        "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Deprecated.",
                        "type": "string"
                      }
                    }
                  },
                  "access_point_id": {
                    "description": "Deprecated: Specify the ``point`` field instead.",
                    "type": "string"
                  },
                  "trip_id": {
                    "description": "Deprecated.",
                    "type": "string"
                  },
                  "terminal_location_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  }
                },
                "required": [
                  "point"
                ]
              },
              "actual_dropoff_point": {
                "type": "object",
                "properties": {
                  "point": {
                    "description": "Required. Denotes the actual location.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "timestamp": {
                    "description": "Indicates when the stop happened.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "stop_time": {
                    "description": "Input only. Deprecated.  Use the timestamp field.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  }
                },
                "required": [
                  "point"
                ]
              },
              "dropoff_time": {
                "description": "Output only. Either the estimated future time when the rider(s) will be dropped off at the final destination, or the actual time when they were dropped off.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_waypoints": {
                "description": "Output only. The full path from the current location to the dropoff point, inclusive. This path could include waypoints from other trips.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object",
                      "properties": {
                        "point": {
                          "description": "Required. Denotes the location of a trip waypoint.",
                          "type": "object",
                          "reference": "google.type.latlng_pb2.LatLng"
                        },
                        "terminal_point_id": {
                          "type": "object",
                          "properties": {
                            "place_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "generated_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Deprecated.",
                              "type": "string"
                            }
                          }
                        },
                        "access_point_id": {
                          "description": "Deprecated: Specify the ``point`` field instead.",
                          "type": "string"
                        },
                        "trip_id": {
                          "description": "Deprecated.",
                          "type": "string"
                        },
                        "terminal_location_type": {
                          "type": "enum",
                          "name": "WaypointType",
                          "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                          "values": {
                            "UNKNOWN_WAYPOINT_TYPE": {
                              "value": 0
                            },
                            "PICKUP_WAYPOINT_TYPE": {
                              "value": 1
                            },
                            "DROP_OFF_WAYPOINT_TYPE": {
                              "value": 2
                            },
                            "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                              "value": 3
                            }
                          }
                        }
                      },
                      "required": [
                        "point"
                      ]
                    },
                    "trip_id": {
                      "description": "The trip associated with this waypoint.",
                      "type": "string"
                    },
                    "waypoint_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    },
                    "path_to_waypoint": {
                      "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      }
                    },
                    "encoded_path_to_waypoint": {
                      "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                      "type": "string"
                    },
                    "traffic_to_waypoint": {
                      "type": "object",
                      "properties": {
                        "speed_reading_interval": {
                          "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_polyline_point_index": {
                                "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                                "type": "integer"
                              },
                              "end_polyline_point_index": {
                                "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                                "type": "integer"
                              },
                              "speed": {
                                "type": "enum",
                                "name": "Speed",
                                "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                                "values": {
                                  "SPEED_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "NORMAL": {
                                    "value": 1
                                  },
                                  "SLOW": {
                                    "value": 2
                                  },
                                  "TRAFFIC_JAM": {
                                    "value": 3
                                  }
                                }
                              }
                            }
                          }
                        },
                        "encoded_path_to_waypoint": {
                          "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                          "type": "string"
                        }
                      }
                    },
                    "distance_meters": {
                      "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.wrappers_pb2.Int32Value"
                    },
                    "eta": {
                      "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "duration": {
                      "type": "enum",
                      "name": "Duration",
                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                      "values": {
                        "UNDEFINED_DURATION": {
                          "value": 0
                        },
                        "DURATION_UNSPECIFIED": {
                          "value": 529071340
                        },
                        "HOUR": {
                          "value": 2223588
                        },
                        "MAX": {
                          "value": 76100
                        },
                        "MINUTE": {
                          "value": 126786068
                        }
                      }
                    }
                  }
                }
              },
              "vehicle_waypoints": {
                "description": "This field supports manual ordering of the waypoints for the trip. It contains all of the remaining waypoints for the assigned vehicle, as well as the pickup and drop-off waypoints for this trip. If the trip hasn't been assigned to a vehicle, then Fleet Engine ignores this field. For privacy reasons, this field is only populated by the server on ``UpdateTrip`` and ``CreateTrip`` calls, NOT on ``GetTrip`` calls.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object",
                      "properties": {
                        "point": {
                          "description": "Required. Denotes the location of a trip waypoint.",
                          "type": "object",
                          "reference": "google.type.latlng_pb2.LatLng"
                        },
                        "terminal_point_id": {
                          "type": "object",
                          "properties": {
                            "place_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "generated_id": {
                              "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Deprecated.",
                              "type": "string"
                            }
                          }
                        },
                        "access_point_id": {
                          "description": "Deprecated: Specify the ``point`` field instead.",
                          "type": "string"
                        },
                        "trip_id": {
                          "description": "Deprecated.",
                          "type": "string"
                        },
                        "terminal_location_type": {
                          "type": "enum",
                          "name": "WaypointType",
                          "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                          "values": {
                            "UNKNOWN_WAYPOINT_TYPE": {
                              "value": 0
                            },
                            "PICKUP_WAYPOINT_TYPE": {
                              "value": 1
                            },
                            "DROP_OFF_WAYPOINT_TYPE": {
                              "value": 2
                            },
                            "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                              "value": 3
                            }
                          }
                        }
                      },
                      "required": [
                        "point"
                      ]
                    },
                    "trip_id": {
                      "description": "The trip associated with this waypoint.",
                      "type": "string"
                    },
                    "waypoint_type": {
                      "type": "enum",
                      "name": "WaypointType",
                      "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                      "values": {
                        "UNKNOWN_WAYPOINT_TYPE": {
                          "value": 0
                        },
                        "PICKUP_WAYPOINT_TYPE": {
                          "value": 1
                        },
                        "DROP_OFF_WAYPOINT_TYPE": {
                          "value": 2
                        },
                        "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                          "value": 3
                        }
                      }
                    },
                    "path_to_waypoint": {
                      "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      }
                    },
                    "encoded_path_to_waypoint": {
                      "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                      "type": "string"
                    },
                    "traffic_to_waypoint": {
                      "type": "object",
                      "properties": {
                        "speed_reading_interval": {
                          "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_polyline_point_index": {
                                "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                                "type": "integer"
                              },
                              "end_polyline_point_index": {
                                "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                                "type": "integer"
                              },
                              "speed": {
                                "type": "enum",
                                "name": "Speed",
                                "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                                "values": {
                                  "SPEED_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "NORMAL": {
                                    "value": 1
                                  },
                                  "SLOW": {
                                    "value": 2
                                  },
                                  "TRAFFIC_JAM": {
                                    "value": 3
                                  }
                                }
                              }
                            }
                          }
                        },
                        "encoded_path_to_waypoint": {
                          "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                          "type": "string"
                        }
                      }
                    },
                    "distance_meters": {
                      "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.wrappers_pb2.Int32Value"
                    },
                    "eta": {
                      "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "duration": {
                      "type": "enum",
                      "name": "Duration",
                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                      "values": {
                        "UNDEFINED_DURATION": {
                          "value": 0
                        },
                        "DURATION_UNSPECIFIED": {
                          "value": 529071340
                        },
                        "HOUR": {
                          "value": 2223588
                        },
                        "MAX": {
                          "value": 76100
                        },
                        "MINUTE": {
                          "value": 126786068
                        }
                      }
                    }
                  }
                }
              },
              "route": {
                "description": "Output only. Anticipated route for this trip to the first entry in remaining_waypoints. Note that the first waypoint may belong to a different trip.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.type.latlng_pb2.LatLng"
                }
              },
              "current_route_segment": {
                "description": "Output only. An encoded path to the next waypoint. Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                "type": "string"
              },
              "current_route_segment_version": {
                "description": "Output only. Indicates the last time the route was modified. Note: This field is intended only for use by the Driver SDK and Consumer SDK.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "current_route_segment_traffic": {
                "type": "object",
                "properties": {
                  "speed_reading_interval": {
                    "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start_polyline_point_index": {
                          "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                          "type": "integer"
                        },
                        "end_polyline_point_index": {
                          "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                          "type": "integer"
                        },
                        "speed": {
                          "type": "enum",
                          "name": "Speed",
                          "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                          "values": {
                            "SPEED_UNSPECIFIED": {
                              "value": 0
                            },
                            "NORMAL": {
                              "value": 1
                            },
                            "SLOW": {
                              "value": 2
                            },
                            "TRAFFIC_JAM": {
                              "value": 3
                            }
                          }
                        }
                      }
                    }
                  },
                  "encoded_path_to_waypoint": {
                    "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                    "type": "string"
                  }
                }
              },
              "current_route_segment_traffic_version": {
                "description": "Output only. Indicates the last time the ``current_route_segment_traffic`` was modified.  Note: This field is intended only for use by the Driver SDK and Consumer SDK.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "current_route_segment_end_point": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "point": {
                        "description": "Required. Denotes the location of a trip waypoint.",
                        "type": "object",
                        "reference": "google.type.latlng_pb2.LatLng"
                      },
                      "terminal_point_id": {
                        "type": "object",
                        "properties": {
                          "place_id": {
                            "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                            "type": "string"
                          },
                          "generated_id": {
                            "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Deprecated.",
                            "type": "string"
                          }
                        }
                      },
                      "access_point_id": {
                        "description": "Deprecated: Specify the ``point`` field instead.",
                        "type": "string"
                      },
                      "trip_id": {
                        "description": "Deprecated.",
                        "type": "string"
                      },
                      "terminal_location_type": {
                        "type": "enum",
                        "name": "WaypointType",
                        "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                        "values": {
                          "UNKNOWN_WAYPOINT_TYPE": {
                            "value": 0
                          },
                          "PICKUP_WAYPOINT_TYPE": {
                            "value": 1
                          },
                          "DROP_OFF_WAYPOINT_TYPE": {
                            "value": 2
                          },
                          "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                            "value": 3
                          }
                        }
                      }
                    },
                    "required": [
                      "point"
                    ]
                  },
                  "trip_id": {
                    "description": "The trip associated with this waypoint.",
                    "type": "string"
                  },
                  "waypoint_type": {
                    "type": "enum",
                    "name": "WaypointType",
                    "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                    "values": {
                      "UNKNOWN_WAYPOINT_TYPE": {
                        "value": 0
                      },
                      "PICKUP_WAYPOINT_TYPE": {
                        "value": 1
                      },
                      "DROP_OFF_WAYPOINT_TYPE": {
                        "value": 2
                      },
                      "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                        "value": 3
                      }
                    }
                  },
                  "path_to_waypoint": {
                    "description": "The path from the previous waypoint to the current waypoint.  Undefined for the first waypoint in a list. This field is only populated when requested.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "reference": "google.type.latlng_pb2.LatLng"
                    }
                  },
                  "encoded_path_to_waypoint": {
                    "description": "The encoded path from the previous waypoint to the current waypoint. <p>Note: This field is intended only for use by the Driver SDK and Consumer SDK. Decoding is not yet supported.",
                    "type": "string"
                  },
                  "traffic_to_waypoint": {
                    "type": "object",
                    "properties": {
                      "speed_reading_interval": {
                        "description": "Traffic speed along the path from the previous waypoint to the current waypoint.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "start_polyline_point_index": {
                              "description": "The starting index of this interval in the polyline.  This field is a member of `oneof`_ ``_start_polyline_point_index``.",
                              "type": "integer"
                            },
                            "end_polyline_point_index": {
                              "description": "The ending index of this interval in the polyline.  This field is a member of `oneof`_ ``_end_polyline_point_index``.",
                              "type": "integer"
                            },
                            "speed": {
                              "type": "enum",
                              "name": "Speed",
                              "description": "The classification of polyline speed based on traffic data.\n\nValues:\n    SPEED_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NORMAL (1):\n        Normal speed, no slowdown is detected.\n    SLOW (2):\n        Slowdown detected, but no traffic jam formed.\n    TRAFFIC_JAM (3):\n        Traffic jam detected.",
                              "values": {
                                "SPEED_UNSPECIFIED": {
                                  "value": 0
                                },
                                "NORMAL": {
                                  "value": 1
                                },
                                "SLOW": {
                                  "value": 2
                                },
                                "TRAFFIC_JAM": {
                                  "value": 3
                                }
                              }
                            }
                          }
                        }
                      },
                      "encoded_path_to_waypoint": {
                        "description": "The path the driver is taking from the previous waypoint to the current waypoint. This path has landmarks in it so clients can show traffic markers along the path (see ``speed_reading_interval``). Decoding is not yet supported.",
                        "type": "string"
                      }
                    }
                  },
                  "distance_meters": {
                    "description": "The path distance from the previous waypoint to the current waypoint. Undefined for the first waypoint in a list.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "eta": {
                    "description": "The estimated time of arrival at this waypoint. Undefined for the first waypoint in a list.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  }
                }
              },
              "remaining_distance_meters": {
                "description": "Output only. The remaining driving distance in the ``current_route_segment`` field. The value is unspecified if the trip is not assigned to a vehicle, or the trip is completed or cancelled.",
                "type": "object",
                "reference": "google.protobuf.wrappers_pb2.Int32Value"
              },
              "eta_to_first_waypoint": {
                "description": "Output only. The ETA to the next waypoint (the first entry in the ``remaining_waypoints`` field). The value is unspecified if the trip is not assigned to a vehicle, or the trip is inactive (completed or cancelled).",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_time_to_first_waypoint": {
                "type": "enum",
                "name": "Duration",
                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                "values": {
                  "UNDEFINED_DURATION": {
                    "value": 0
                  },
                  "DURATION_UNSPECIFIED": {
                    "value": 529071340
                  },
                  "HOUR": {
                    "value": 2223588
                  },
                  "MAX": {
                    "value": 76100
                  },
                  "MINUTE": {
                    "value": 126786068
                  }
                }
              },
              "remaining_waypoints_version": {
                "description": "Output only. Indicates the last time that ``remaining_waypoints`` was changed (a waypoint was added, removed, or changed).",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "remaining_waypoints_route_version": {
                "description": "Output only. Indicates the last time the ``remaining_waypoints.path_to_waypoint`` and ``remaining_waypoints.traffic_to_waypoint`` were modified. Your client app should cache this value and pass it in ``GetTripRequest`` to ensure the paths and traffic for ``remaining_waypoints`` are only returned if updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "number_of_passengers": {
                "description": "Immutable. Indicates the number of passengers on this trip and does not include the driver. A vehicle must have available capacity to be returned in a ``SearchVehicles`` response.",
                "type": "integer"
              },
              "last_location": {
                "type": "object",
                "properties": {
                  "location": {
                    "description": "The location of the vehicle. When it is sent to Fleet Engine, the vehicle's location is a GPS location. When you receive it in a response, the vehicle's location can be either a GPS location, a supplemental location, or some other estimated location. The source is specified in ``location_sensor``.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "horizontal_accuracy": {
                    "description": "Deprecated: Use ``latlng_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "latlng_accuracy": {
                    "description": "Accuracy of ``location`` in meters as a radius.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "heading": {
                    "description": "Direction the vehicle is moving in degrees. 0 represents North. The valid range is [0,360).",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "bearing_accuracy": {
                    "description": "Deprecated: Use ``heading_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "heading_accuracy": {
                    "description": "Accuracy of ``heading`` in degrees.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "altitude": {
                    "description": "Altitude in meters above WGS84.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "vertical_accuracy": {
                    "description": "Deprecated: Use ``altitude_accuracy`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "altitude_accuracy": {
                    "description": "Accuracy of ``altitude`` in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "speed_kmph": {
                    "description": "Speed of the vehicle in kilometers per hour. Deprecated: Use ``speed`` instead.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "speed": {
                    "description": "Speed of the vehicle in meters/second",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "speed_accuracy": {
                    "description": "Accuracy of ``speed`` in meters/second.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "update_time": {
                    "description": "The time when ``location`` was reported by the sensor according to the sensor's clock.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "server_time": {
                    "description": "Output only. The time when the server received the location information.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "is_road_snapped": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  },
                  "is_gps_sensor_enabled": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  },
                  "time_since_update": {
                    "description": "Input only. Time (in seconds) since this location was first sent to the server. This will be zero for the first update. If the time is unknown (for example, when the app restarts), this value resets to zero.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "num_stale_updates": {
                    "description": "Input only. Deprecated: Other signals are now used to determine if a location is stale.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.Int32Value"
                  },
                  "raw_location": {
                    "description": "Raw vehicle location (unprocessed by road-snapper).",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "raw_location_time": {
                    "description": "Timestamp associated with the raw location.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "raw_location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "raw_location_accuracy": {
                    "description": "Accuracy of ``raw_location`` as a radius, in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "supplemental_location": {
                    "description": "Supplemental location provided by the integrating app.",
                    "type": "object",
                    "reference": "google.type.latlng_pb2.LatLng"
                  },
                  "supplemental_location_time": {
                    "description": "Timestamp associated with the supplemental location.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "supplemental_location_sensor": {
                    "type": "enum",
                    "name": "LocationSensor",
                    "description": "The sensor or methodology used to determine the location.\n\nValues:\n    UNKNOWN_SENSOR (0):\n        The sensor is unspecified or unknown.\n    GPS (1):\n        GPS or Assisted GPS.\n    NETWORK (2):\n        Assisted GPS, cell tower ID, or WiFi access\n        point.\n    PASSIVE (3):\n        Cell tower ID or WiFi access point.\n    ROAD_SNAPPED_LOCATION_PROVIDER (4):\n        A location determined by the mobile device to\n        be the most likely road position.\n    CUSTOMER_SUPPLIED_LOCATION (5):\n        A customer-supplied location from an independent source.\n        Typically, this value is used for a location provided from\n        sources other than the mobile device running Driver SDK. If\n        the original source is described by one of the other enum\n        values, use that value. Locations marked\n        CUSTOMER_SUPPLIED_LOCATION are typically provided via a\n        Vehicle's ``last_location.supplemental_location_sensor``.\n    FLEET_ENGINE_LOCATION (6):\n        A location calculated by Fleet Engine based\n",
                    "values": {
                      "UNKNOWN_SENSOR": {
                        "value": 0
                      },
                      "GPS": {
                        "value": 1
                      },
                      "NETWORK": {
                        "value": 2
                      },
                      "PASSIVE": {
                        "value": 3
                      },
                      "ROAD_SNAPPED_LOCATION_PROVIDER": {
                        "value": 4
                      },
                      "CUSTOMER_SUPPLIED_LOCATION": {
                        "value": 5
                      },
                      "FLEET_ENGINE_LOCATION": {
                        "value": 6
                      },
                      "FUSED_LOCATION_PROVIDER": {
                        "value": 100
                      },
                      "CORE_LOCATION": {
                        "value": 200
                      }
                    }
                  },
                  "supplemental_location_accuracy": {
                    "description": "Accuracy of ``supplemental_location`` as a radius, in meters.",
                    "type": "object",
                    "reference": "google.protobuf.wrappers_pb2.DoubleValue"
                  },
                  "road_snapped": {
                    "description": "Deprecated: Use ``is_road_snapped`` instead.",
                    "type": "boolean"
                  }
                }
              },
              "last_location_snappable": {
                "description": "Output only. Indicates whether the vehicle's ``last_location`` can be snapped to the current_route_segment. False if ``last_location`` or ``current_route_segment`` doesn't exist. It is computed by Fleet Engine. Any update from clients will be ignored.",
                "type": "boolean"
              },
              "view": {
                "type": "enum",
                "name": "TripView",
                "description": "Selector for different sets of Trip fields in a ``GetTrip``\nresponse. See `AIP-157 <https://google.aip.dev/157>`__ for context.\nAdditional views are likely to be added.\n\nValues:\n    TRIP_VIEW_UNSPECIFIED (0):\n        The default value. For backwards-compatibility, the API will\n        default to an SDK view. To ensure stability and support,\n        customers are advised to select a ``TripView`` other than\n        ``SDK``.\n    SDK (1):\n        Includes fields that may not be interpretable\n        or supportable using publicly available\n        libraries.\n    JOURNEY_SHARING_V1S (2):\n        Trip fields are populated for the Journey\n        Sharing use case. This view is intended for\n        server-to-server communications.",
                "values": {
                  "TRIP_VIEW_UNSPECIFIED": {
                    "value": 0
                  },
                  "SDK": {
                    "value": 1
                  },
                  "JOURNEY_SHARING_V1S": {
                    "value": 2
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The field mask indicating which fields in Trip to update. The ``update_mask`` must contain at least one field.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name",
          "trip",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "SearchTripsRequest",
      "description": "SearchTrips request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    parent (str):\n        Required. Must be in the format ``providers/{provider}``.\n        The provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    vehicle_id (str):\n        The vehicle associated with the trips in the request. If\n        unspecified, the returned trips do not contain:\n\n        -  ``current_route_segment``\n        -  ``remaining_waypoints``\n        -  ``remaining_distance_meters``\n        -  ``eta_to_first_waypoint``\n    active_trips_only (bool):\n        If set to true, the response includes Trips\n        that influence a driver's route.\n    page_size (int):\n        If not set, the server decides the number of\n        results to return.\n    page_token (str):\n        Set this to a value previously returned in the\n     ",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "parent": {
            "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "vehicle_id": {
            "description": "The vehicle associated with the trips in the request. If unspecified, the returned trips do not contain:  -  ``current_route_segment`` -  ``remaining_waypoints`` -  ``remaining_distance_meters`` -  ``eta_to_first_waypoint``",
            "type": "string"
          },
          "active_trips_only": {
            "description": "If set to true, the response includes Trips that influence a driver's route.",
            "type": "boolean"
          },
          "page_size": {
            "description": "If not set, the server decides the number of results to return.",
            "type": "integer"
          },
          "page_token": {
            "description": "Set this to a value previously returned in the ``SearchTripsResponse`` to continue from previous results.",
            "type": "string"
          },
          "minimum_staleness": {
            "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
            "type": "enum",
            "name": "Duration",
            "values": {
              "UNDEFINED_DURATION": {
                "value": 0
              },
              "DURATION_UNSPECIFIED": {
                "value": 529071340
              },
              "HOUR": {
                "value": 2223588
              },
              "MAX": {
                "value": 76100
              },
              "MINUTE": {
                "value": 126786068
              }
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-maps-fleetengine\\google\\maps\\fleetengine_v1\\types\\vehicle_api.py": [
    {
      "type": "function",
      "name": "CreateVehicleRequest",
      "description": "``CreateVehicle`` request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    parent (str):\n        Required. Must be in the format ``providers/{provider}``.\n        The provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    vehicle_id (str):\n        Required. Unique Vehicle ID. Subject to the following\n        restrictions:\n\n        -  Must be a valid Unicode string.\n        -  Limited to a maximum length of 64 characters.\n        -  Normalized according to [Unicode Normalization Form C]\n           (http://www.unicode.org/reports/tr15/).\n        -  May not contain any of the following ASCII characters:\n           '/', ':', '?', ',', or '#'.\n    vehicle (google.maps.fleetengine_v1.types.Vehicle):\n        Required. The Vehicle entity to create. When creating a\n        Vehicle, the following fields are req",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "parent": {
            "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "vehicle_id": {
            "description": "Required. Unique Vehicle ID. Subject to the following restrictions:  -  Must be a valid Unicode string. -  Limited to a maximum length of 64 characters. -  Normalized according to [Unicode Normalization Form C] (http://www.unicode.org/reports/tr15/). -  May not contain any of the following ASCII characters: '/', ':', '?', ',', or '#'.",
            "type": "string"
          },
          "vehicle": {
            "description": "Required. The Vehicle entity to create. When creating a Vehicle, the following fields are required:  -  ``vehicleState`` -  ``supportedTripTypes`` -  ``maximumCapacity`` -  ``vehicleType``  When creating a Vehicle, the following fields are ignored:  -  ``name`` -  ``currentTrips`` -  ``availableCapacity`` -  ``current_route_segment`` -  ``current_route_segment_end_point`` -  ``current_route_segment_version`` -  ``current_route_segment_traffic`` -  ``route`` -  ``waypoints`` -  ``waypoints_version`` -  ``remaining_distance_meters`` -  ``remaining_time_seconds`` -  ``eta_to_next_waypoint`` -  ``navigation_status``  All other fields are optional and used if provided.",
            "type": "object",
            "properties": {
              "display_name": {
                "description": "The user-defined display name of the vehicle. It can be up to 63 characters long and may use UTF-8 characters.",
                "type": "string"
              },
              "travel_mode": {
                "type": "enum",
                "name": "TravelMode",
                "description": "Travel modes which can be used by vehicles.\n\nThese should be a subset of the Google Maps Platform Routes\nPreferred API travel modes, see:\nhttps://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode.\n\nValues:\n    TRAVEL_MODE_UNSPECIFIED (0):\n        Unspecified travel mode, equivalent to ``DRIVING``.\n    DRIVING (1):\n        Travel mode corresponding to driving\n        directions (car, ...).\n    WALKING (2):\n        Travel mode corresponding to walking\n        directions.",
                "values": {
                  "TRAVEL_MODE_UNSPECIFIED": {
                    "value": 0
                  },
                  "DRIVING": {
                    "value": 1
                  },
                  "WALKING": {
                    "value": 2
                  }
                }
              },
              "route_modifiers": {
                "type": "object",
                "properties": {
                  "avoid_tolls": {
                    "description": "When set to true, avoids toll roads where reasonable, giving preference to routes not containing toll roads. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_highways": {
                    "description": "When set to true, avoids highways where reasonable, giving preference to routes not containing highways. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_ferries": {
                    "description": "When set to true, avoids ferries where reasonable, giving preference to routes not containing ferries. Applies only to the ``DRIVE`` and\\ ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_indoor": {
                    "description": "When set to true, avoids navigating indoors where reasonable, giving preference to routes not containing indoor navigation. Applies only to the ``WALK`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "vehicle_info": {
                    "type": "object",
                    "properties": {
                      "emission_type": {
                        "type": "enum",
                        "name": "VehicleEmissionType",
                        "description": "A set of values describing the vehicle's emission type. Applies only\nto the ``DRIVE``\n[``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].\n\nValues:\n    VEHICLE_EMISSION_TYPE_UNSPECIFIED (0):\n        No emission type specified. Default to ``GASOLINE``.\n    GASOLINE (1):\n        Gasoline/petrol fueled vehicle.\n    ELECTRIC (2):\n        Electricity powered vehicle.\n    HYBRID (3):\n        Hybrid fuel (such as gasoline + electric)\n        vehicle.\n    DIESEL (4):\n        Diesel fueled vehicle.",
                        "values": {
                          "VEHICLE_EMISSION_TYPE_UNSPECIFIED": {
                            "value": 0
                          },
                          "GASOLINE": {
                            "value": 1
                          },
                          "ELECTRIC": {
                            "value": 2
                          },
                          "HYBRID": {
                            "value": 3
                          },
                          "DIESEL": {
                            "value": 4
                          }
                        }
                      }
                    }
                  },
                  "toll_passes": {
                    "description": "Encapsulates information about toll passes. If toll passes are provided, the API tries to return the pass price. If toll passes are not provided, the API treats the toll pass as unknown and tries to return the cash price. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "array",
                    "items": {
                      "type": "enum",
                      "name": "TollPass",
                      "description": "List of toll passes around the world that we support.\n\nValues:\n    TOLL_PASS_UNSPECIFIED (0):\n        Not used. If this value is used, then the\n        request fails.\n    AU_ETOLL_TAG (82):\n        Sydney toll pass. See additional details at\n        https://www.myetoll.com.au.\n    AU_EWAY_TAG (83):\n        Sydney toll pass. See additional details at\n        https://www.tollpay.com.au.\n    AU_LINKT (2):\n        Australia-wide toll pass.\n        See additional details at\n        https://www.linkt.com.au/.\n    AR_TELEPASE (3):\n        Argentina toll pass. See additional details\n        at https://telepase.com.ar\n    BR_AUTO_EXPRESO (81):\n        Brazil toll pass. See additional details at\n        https://www.autoexpreso.com\n    BR_CONECTCAR (7):\n        Brazil toll pass. See additional details at\n        https://conectcar.com.\n    BR_MOVE_MAIS (8):\n        Brazil toll pass. See additional details at\n        https://movemais.com.\n    BR_PASSA_RAPIDO (88):\n        Brazil toll pass. See additional details at\n      ",
                      "values": {
                        "TOLL_PASS_UNSPECIFIED": {
                          "value": 0
                        },
                        "AU_ETOLL_TAG": {
                          "value": 82
                        },
                        "AU_EWAY_TAG": {
                          "value": 83
                        },
                        "AU_LINKT": {
                          "value": 2
                        },
                        "AR_TELEPASE": {
                          "value": 3
                        },
                        "BR_AUTO_EXPRESO": {
                          "value": 81
                        },
                        "BR_CONECTCAR": {
                          "value": 7
                        },
                        "BR_MOVE_MAIS": {
                          "value": 8
                        },
                        "BR_PASSA_RAPIDO": {
                          "value": 88
                        },
                        "BR_SEM_PARAR": {
                          "value": 9
                        },
                        "BR_TAGGY": {
                          "value": 10
                        },
                        "BR_VELOE": {
                          "value": 11
                        },
                        "CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD": {
                          "value": 84
                        },
                        "CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD": {
                          "value": 85
                        },
                        "CA_US_BLUE_WATER_EDGE_PASS": {
                          "value": 18
                        },
                        "CA_US_CONNEXION": {
                          "value": 19
                        },
                        "CA_US_NEXUS_CARD": {
                          "value": 20
                        },
                        "ID_E_TOLL": {
                          "value": 16
                        },
                        "IN_FASTAG": {
                          "value": 78
                        },
                        "IN_LOCAL_HP_PLATE_EXEMPT": {
                          "value": 79
                        },
                        "JP_ETC": {
                          "value": 98
                        },
                        "JP_ETC2": {
                          "value": 99
                        },
                        "MX_IAVE": {
                          "value": 90
                        },
                        "MX_PASE": {
                          "value": 91
                        },
                        "MX_QUICKPASS": {
                          "value": 93
                        },
                        "MX_SISTEMA_TELEPEAJE_CHIHUAHUA": {
                          "value": 89
                        },
                        "MX_TAG_IAVE": {
                          "value": 12
                        },
                        "MX_TAG_TELEVIA": {
                          "value": 13
                        },
                        "MX_TELEVIA": {
                          "value": 92
                        },
                        "MX_VIAPASS": {
                          "value": 14
                        },
                        "US_AL_FREEDOM_PASS": {
                          "value": 21
                        },
                        "US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS": {
                          "value": 22
                        },
                        "US_CA_FASTRAK": {
                          "value": 4
                        },
                        "US_CA_FASTRAK_CAV_STICKER": {
                          "value": 86
                        },
                        "US_CO_EXPRESSTOLL": {
                          "value": 23
                        },
                        "US_CO_GO_PASS": {
                          "value": 24
                        },
                        "US_DE_EZPASSDE": {
                          "value": 25
                        },
                        "US_FL_BOB_SIKES_TOLL_BRIDGE_PASS": {
                          "value": 65
                        },
                        "US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD": {
                          "value": 66
                        },
                        "US_FL_EPASS": {
                          "value": 67
                        },
                        "US_FL_GIBA_TOLL_PASS": {
                          "value": 68
                        },
                        "US_FL_LEEWAY": {
                          "value": 69
                        },
                        "US_FL_SUNPASS": {
                          "value": 70
                        },
                        "US_FL_SUNPASS_PRO": {
                          "value": 71
                        },
                        "US_IL_EZPASSIL": {
                          "value": 73
                        },
                        "US_IL_IPASS": {
                          "value": 72
                        },
                        "US_IN_EZPASSIN": {
                          "value": 26
                        },
                        "US_KS_BESTPASS_HORIZON": {
                          "value": 27
                        },
                        "US_KS_KTAG": {
                          "value": 28
                        },
                        "US_KS_NATIONALPASS": {
                          "value": 29
                        },
                        "US_KS_PREPASS_ELITEPASS": {
                          "value": 30
                        },
                        "US_KY_RIVERLINK": {
                          "value": 31
                        },
                        "US_LA_GEAUXPASS": {
                          "value": 32
                        },
                        "US_LA_TOLL_TAG": {
                          "value": 33
                        },
                        "US_MA_EZPASSMA": {
                          "value": 6
                        },
                        "US_MD_EZPASSMD": {
                          "value": 34
                        },
                        "US_ME_EZPASSME": {
                          "value": 35
                        },
                        "US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD": {
                          "value": 36
                        },
                        "US_MI_BCPASS": {
                          "value": 94
                        },
                        "US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG": {
                          "value": 37
                        },
                        "US_MI_IQ_PROX_CARD": {
                          "value": 38
                        },
                        "US_MI_IQ_TAG": {
                          "value": 95
                        },
                        "US_MI_MACKINAC_BRIDGE_MAC_PASS": {
                          "value": 39
                        },
                        "US_MI_NEXPRESS_TOLL": {
                          "value": 40
                        },
                        "US_MN_EZPASSMN": {
                          "value": 41
                        },
                        "US_NC_EZPASSNC": {
                          "value": 42
                        },
                        "US_NC_PEACH_PASS": {
                          "value": 87
                        },
                        "US_NC_QUICK_PASS": {
                          "value": 43
                        },
                        "US_NH_EZPASSNH": {
                          "value": 80
                        },
                        "US_NJ_DOWNBEACH_EXPRESS_PASS": {
                          "value": 75
                        },
                        "US_NJ_EZPASSNJ": {
                          "value": 74
                        },
                        "US_NY_EXPRESSPASS": {
                          "value": 76
                        },
                        "US_NY_EZPASSNY": {
                          "value": 77
                        },
                        "US_OH_EZPASSOH": {
                          "value": 44
                        },
                        "US_PA_EZPASSPA": {
                          "value": 45
                        },
                        "US_RI_EZPASSRI": {
                          "value": 46
                        },
                        "US_SC_PALPASS": {
                          "value": 47
                        },
                        "US_TX_AVI_TAG": {
                          "value": 97
                        },
                        "US_TX_BANCPASS": {
                          "value": 48
                        },
                        "US_TX_DEL_RIO_PASS": {
                          "value": 49
                        },
                        "US_TX_EFAST_PASS": {
                          "value": 50
                        },
                        "US_TX_EAGLE_PASS_EXPRESS_CARD": {
                          "value": 51
                        },
                        "US_TX_EPTOLL": {
                          "value": 52
                        },
                        "US_TX_EZ_CROSS": {
                          "value": 53
                        },
                        "US_TX_EZTAG": {
                          "value": 54
                        },
                        "US_TX_FUEGO_TAG": {
                          "value": 96
                        },
                        "US_TX_LAREDO_TRADE_TAG": {
                          "value": 55
                        },
                        "US_TX_PLUSPASS": {
                          "value": 56
                        },
                        "US_TX_TOLLTAG": {
                          "value": 57
                        },
                        "US_TX_TXTAG": {
                          "value": 58
                        },
                        "US_TX_XPRESS_CARD": {
                          "value": 59
                        },
                        "US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD": {
                          "value": 60
                        },
                        "US_VA_EZPASSVA": {
                          "value": 61
                        },
                        "US_WA_BREEZEBY": {
                          "value": 17
                        },
                        "US_WA_GOOD_TO_GO": {
                          "value": 1
                        },
                        "US_WV_EZPASSWV": {
                          "value": 62
                        },
                        "US_WV_MEMORIAL_BRIDGE_TICKETS": {
                          "value": 63
                        },
                        "US_WV_MOV_PASS": {
                          "value": 100
                        },
                        "US_WV_NEWELL_TOLL_BRIDGE_TICKET": {
                          "value": 64
                        }
                      }
                    }
                  }
                }
              },
              "start_location": {
                "description": "Geographic location where the vehicle starts before picking up any shipments. If not specified, the vehicle starts at its first pickup. If the shipment model has duration and distance matrices, ``start_location`` must not be specified.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "start_waypoint": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "cpe_uri": {
                        "description": "Deprecated. The CPE URI in `CPE format <https://cpe.mitre.org/specification/>`__",
                        "type": "string"
                      },
                      "version": {
                        "type": "object",
                        "properties": {
                          "epoch": {
                            "description": "Used to correct mistakes in the version numbering scheme.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Required only when version kind is NORMAL. The main part of the version name.",
                            "type": "string"
                          },
                          "revision": {
                            "description": "The iteration of the package build from the above version.",
                            "type": "string"
                          },
                          "inclusive": {
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
                            "type": "boolean"
                          },
                          "kind": {
                            "type": "enum",
                            "name": "VersionKind",
                            "description": "Whether this is an ordinary package version or a sentinel\nMIN/MAX version.\n\nValues:\n    VERSION_KIND_UNSPECIFIED (0):\n        Unknown.\n    NORMAL (1):\n        A standard package version.\n    MINIMUM (2):\n        A special version representing negative\n        infinity.\n    MAXIMUM (3):\n        A special version representing positive\n        infinity.",
                            "values": {
                              "VERSION_KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "NORMAL": {
                                "value": 1
                              },
                              "MINIMUM": {
                                "value": 2
                              },
                              "MAXIMUM": {
                                "value": 3
                              }
                            }
                          },
                          "full_name": {
                            "description": "Human readable version string. This string is of the form <epoch>:<name>-<revision> and is only set when kind is NORMAL.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "kind"
                        ]
                      },
                      "path": {
                        "description": "The path from which we gathered that this package/version is installed.",
                        "type": "string"
                      }
                    }
                  },
                  "place_id": {
                    "description": "The POI Place ID associated with the waypoint.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Human readable address or a plus code. See https://plus.codes for details.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "via": {
                    "description": "Marks this waypoint as a milestone rather a stopping point. For each non-via waypoint in the request, the response appends an entry to the [``legs``][google.maps.routing.v2.Route.legs] array to provide the details for stopovers on that leg of the trip. Set this value to true when you want the route to pass through this waypoint without stopping over. Via waypoints don't cause an entry to be added to the ``legs`` array, but they do route the journey through the waypoint. You can only set this value on waypoints that are intermediates. The request fails if you set this field on terminal waypoints. If ``ComputeRoutesRequest.optimize_waypoint_order`` is set to true then this field cannot be set to true; otherwise, the request fails.",
                    "type": "boolean"
                  },
                  "vehicle_stopover": {
                    "description": "Indicates that the waypoint is meant for vehicles to stop at, where the intention is to either pickup or drop-off. When you set this value, the calculated route won't include non-\\ ``via`` waypoints on roads that are unsuitable for pickup and drop-off. This option works only for ``DRIVE`` and ``TWO_WHEELER`` travel modes, and when the ``location_type`` is [``Location``][google.maps.routing.v2.Location].",
                    "type": "boolean"
                  },
                  "side_of_road": {
                    "description": "Indicates that the location of this waypoint is meant to have a preference for the vehicle to stop at a particular side of road. When you set this value, the route will pass through the location so that the vehicle can stop at the side of road that the location is biased towards from the center of the road. This option works only for ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  }
                }
              },
              "end_location": {
                "description": "Geographic location where the vehicle ends after it has completed its last ``VisitRequest``. If not specified the vehicle's ``ShipmentRoute`` ends immediately when it completes its last ``VisitRequest``. If the shipment model has duration and distance matrices, ``end_location`` must not be specified.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "end_waypoint": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "cpe_uri": {
                        "description": "Deprecated. The CPE URI in `CPE format <https://cpe.mitre.org/specification/>`__",
                        "type": "string"
                      },
                      "version": {
                        "type": "object",
                        "properties": {
                          "epoch": {
                            "description": "Used to correct mistakes in the version numbering scheme.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Required only when version kind is NORMAL. The main part of the version name.",
                            "type": "string"
                          },
                          "revision": {
                            "description": "The iteration of the package build from the above version.",
                            "type": "string"
                          },
                          "inclusive": {
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
                            "type": "boolean"
                          },
                          "kind": {
                            "type": "enum",
                            "name": "VersionKind",
                            "description": "Whether this is an ordinary package version or a sentinel\nMIN/MAX version.\n\nValues:\n    VERSION_KIND_UNSPECIFIED (0):\n        Unknown.\n    NORMAL (1):\n        A standard package version.\n    MINIMUM (2):\n        A special version representing negative\n        infinity.\n    MAXIMUM (3):\n        A special version representing positive\n        infinity.",
                            "values": {
                              "VERSION_KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "NORMAL": {
                                "value": 1
                              },
                              "MINIMUM": {
                                "value": 2
                              },
                              "MAXIMUM": {
                                "value": 3
                              }
                            }
                          },
                          "full_name": {
                            "description": "Human readable version string. This string is of the form <epoch>:<name>-<revision> and is only set when kind is NORMAL.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "kind"
                        ]
                      },
                      "path": {
                        "description": "The path from which we gathered that this package/version is installed.",
                        "type": "string"
                      }
                    }
                  },
                  "place_id": {
                    "description": "The POI Place ID associated with the waypoint.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Human readable address or a plus code. See https://plus.codes for details.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "via": {
                    "description": "Marks this waypoint as a milestone rather a stopping point. For each non-via waypoint in the request, the response appends an entry to the [``legs``][google.maps.routing.v2.Route.legs] array to provide the details for stopovers on that leg of the trip. Set this value to true when you want the route to pass through this waypoint without stopping over. Via waypoints don't cause an entry to be added to the ``legs`` array, but they do route the journey through the waypoint. You can only set this value on waypoints that are intermediates. The request fails if you set this field on terminal waypoints. If ``ComputeRoutesRequest.optimize_waypoint_order`` is set to true then this field cannot be set to true; otherwise, the request fails.",
                    "type": "boolean"
                  },
                  "vehicle_stopover": {
                    "description": "Indicates that the waypoint is meant for vehicles to stop at, where the intention is to either pickup or drop-off. When you set this value, the calculated route won't include non-\\ ``via`` waypoints on roads that are unsuitable for pickup and drop-off. This option works only for ``DRIVE`` and ``TWO_WHEELER`` travel modes, and when the ``location_type`` is [``Location``][google.maps.routing.v2.Location].",
                    "type": "boolean"
                  },
                  "side_of_road": {
                    "description": "Indicates that the location of this waypoint is meant to have a preference for the vehicle to stop at a particular side of road. When you set this value, the route will pass through the location so that the vehicle can stop at the side of road that the location is biased towards from the center of the road. This option works only for ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  }
                }
              },
              "start_tags": {
                "description": "Specifies tags attached to the start of the vehicle's route. Empty or duplicate strings are not allowed.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "end_tags": {
                "description": "Specifies tags attached to the end of the vehicle's route. Empty or duplicate strings are not allowed.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "start_time_windows": {
                "description": "Time windows during which the vehicle may depart its start location. They must be within the global time limits (see [ShipmentModel.global_*][google.maps.routeoptimization.v1.ShipmentModel.global_start_time] fields). If unspecified, there is no limitation besides those global time limits.  Time windows belonging to the same repeated field must be disjoint, i.e. no time window can overlap with or be adjacent to another, and they must be in chronological order.  ``cost_per_hour_after_soft_end_time`` and ``soft_end_time`` can only be set if there is a single time window.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start_time": {
                      "description": "The hard time window start time. If unspecified it will be set to ``ShipmentModel.global_start_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "end_time": {
                      "description": "The hard time window end time. If unspecified it will be set to ``ShipmentModel.global_end_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_start_time": {
                      "description": "The soft start time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_end_time": {
                      "description": "The soft end time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "cost_per_hour_before_soft_start_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs before soft_start_time, computed as:  ::  max(0, soft_start_time - t.seconds) * cost_per_hour_before_soft_start_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if soft_start_time has been set.  This field is a member of `oneof`_ ``_cost_per_hour_before_soft_start_time``.",
                      "type": "number"
                    },
                    "cost_per_hour_after_soft_end_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs after ``soft_end_time``, computed as:  ::  max(0, t.seconds - soft_end_time.seconds) * cost_per_hour_after_soft_end_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if ``soft_end_time`` has been set.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_end_time``.",
                      "type": "number"
                    }
                  }
                }
              },
              "end_time_windows": {
                "description": "Time windows during which the vehicle may arrive at its end location. They must be within the global time limits (see [ShipmentModel.global_*][google.maps.routeoptimization.v1.ShipmentModel.global_start_time] fields). If unspecified, there is no limitation besides those global time limits.  Time windows belonging to the same repeated field must be disjoint, i.e. no time window can overlap with or be adjacent to another, and they must be in chronological order.  ``cost_per_hour_after_soft_end_time`` and ``soft_end_time`` can only be set if there is a single time window.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start_time": {
                      "description": "The hard time window start time. If unspecified it will be set to ``ShipmentModel.global_start_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "end_time": {
                      "description": "The hard time window end time. If unspecified it will be set to ``ShipmentModel.global_end_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_start_time": {
                      "description": "The soft start time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_end_time": {
                      "description": "The soft end time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "cost_per_hour_before_soft_start_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs before soft_start_time, computed as:  ::  max(0, soft_start_time - t.seconds) * cost_per_hour_before_soft_start_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if soft_start_time has been set.  This field is a member of `oneof`_ ``_cost_per_hour_before_soft_start_time``.",
                      "type": "number"
                    },
                    "cost_per_hour_after_soft_end_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs after ``soft_end_time``, computed as:  ::  max(0, t.seconds - soft_end_time.seconds) * cost_per_hour_after_soft_end_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if ``soft_end_time`` has been set.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_end_time``.",
                      "type": "number"
                    }
                  }
                }
              },
              "travel_duration_multiple": {
                "description": "Specifies a multiplicative factor that can be used to increase or decrease travel times of this vehicle. For example, setting this to 2.0 means that this vehicle is slower and has travel times that are twice what they are for standard vehicles. This multiple does not affect visit durations. It does affect cost if ``cost_per_hour`` or ``cost_per_traveled_hour`` are specified. This must be in the range [0.001, 1000.0]. If unset, the vehicle is standard, and this multiple is considered 1.0.  WARNING: Travel times will be rounded to the nearest second after this multiple is applied but before performing any numerical operations, thus, a small multiple may result in a loss of precision.  See also ``extra_visit_duration_for_visit_type`` below.  This field is a member of `oneof`_ ``_travel_duration_multiple``.",
                "type": "number"
              },
              "unloading_policy": {
                "type": "enum",
                "name": "UnloadingPolicy",
                "description": "Policy on how a vehicle can be unloaded. Applies only to shipments\nhaving both a pickup and a delivery.\n\nOther shipments are free to occur anywhere on the route independent\nof ``unloading_policy``.\n\nValues:\n    UNLOADING_POLICY_UNSPECIFIED (0):\n        Unspecified unloading policy; deliveries must\n        just occur after their corresponding pickups.\n    LAST_IN_FIRST_OUT (1):\n        Deliveries must occur in reverse order of\n        pickups\n    FIRST_IN_FIRST_OUT (2):\n        Deliveries must occur in the same order as\n        pickups",
                "values": {
                  "UNLOADING_POLICY_UNSPECIFIED": {
                    "value": 0
                  },
                  "LAST_IN_FIRST_OUT": {
                    "value": 1
                  },
                  "FIRST_IN_FIRST_OUT": {
                    "value": 2
                  }
                }
              },
              "load_limits": {
                "description": "Capacities of the vehicle (weight, volume, # of pallets for example). The keys in the map are the identifiers of the type of load, consistent with the keys of the [Shipment.load_demands][google.maps.routeoptimization.v1.Shipment.load_demands] field. If a given key is absent from this map, the corresponding capacity is considered to be limitless.",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "max_load": {
                      "description": "The maximum acceptable amount of load.  This field is a member of `oneof`_ ``_max_load``.",
                      "type": "integer"
                    },
                    "soft_max_load": {
                      "description": "A soft limit of the load. See [cost_per_unit_above_soft_max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.cost_per_unit_above_soft_max].",
                      "type": "integer"
                    },
                    "cost_per_unit_above_soft_max": {
                      "description": "If the load ever exceeds [soft_max_load][google.maps.routeoptimization.v1.Vehicle.LoadLimit.soft_max_load] along this vehicle's route, the following cost penalty",
                      "type": "number"
                    },
                    "applies": {
                      "description": "(load - [soft_max_load][google.maps.routeoptimization.v1.Vehicle.LoadLimit.soft_max_load])  -  [cost_per_unit_above_soft_max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.cost_per_unit_above_soft_max]. All costs add up and must be in the same unit as [Shipment.penalty_cost][google.maps.routeoptimization.v1.Shipment.penalty_cost].",
                      "type": "object",
                      "reference": "only once per vehicle"
                    },
                    "start_load_interval": {
                      "type": "object",
                      "properties": {
                        "min_": {
                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                          "type": "integer"
                        },
                        "max_": {
                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                          "type": "integer"
                        }
                      }
                    },
                    "end_load_interval": {
                      "type": "object",
                      "properties": {
                        "min_": {
                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                          "type": "integer"
                        },
                        "max_": {
                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "cost_per_hour": {
                "description": "Vehicle costs: all costs add up and must be in the same unit as [Shipment.penalty_cost][google.maps.routeoptimization.v1.Shipment.penalty_cost].  Cost per hour of the vehicle route. This cost is applied to the total time taken by the route, and includes travel time, waiting time, and visit time. Using ``cost_per_hour`` instead of just ``cost_per_traveled_hour`` may result in additional latency.",
                "type": "number"
              },
              "cost_per_traveled_hour": {
                "description": "Cost per traveled hour of the vehicle route. This cost is applied only to travel time taken by the route (i.e., that reported in [ShipmentRoute.transitions][google.maps.routeoptimization.v1.ShipmentRoute.transitions]), and excludes waiting time and visit time.",
                "type": "number"
              },
              "cost_per_kilometer": {
                "description": "Cost per kilometer of the vehicle route. This cost is applied to the distance reported in the [ShipmentRoute.transitions][google.maps.routeoptimization.v1.ShipmentRoute.transitions] and does not apply to any distance implicitly traveled from the ``arrival_location`` to the ``departure_location`` of a single ``VisitRequest``.",
                "type": "number"
              },
              "fixed_cost": {
                "description": "Fixed cost applied if this vehicle is used to handle a shipment.",
                "type": "number"
              },
              "used_if_route_is_empty": {
                "description": "This field only applies to vehicles when their route does not serve any shipments. It indicates if the vehicle should be considered as used or not in this case.  If true, the vehicle goes from its start to its end location even if it doesn't serve any shipments, and time and distance costs resulting from its start --> end travel are taken into account.  Otherwise, it doesn't travel from its start to its end location, and no ``break_rule`` or delay (from ``TransitionAttributes``) are scheduled for this vehicle. In this case, the vehicle's ``ShipmentRoute`` doesn't contain any information except for the vehicle index and label.",
                "type": "boolean"
              },
              "route_duration_limit": {
                "type": "object",
                "properties": {
                  "max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_hour_after_soft_max": {
                    "description": "Cost per hour incurred if the ``soft_max_duration`` threshold is violated. The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_hour_after_soft_max * (duration - soft_max_duration)  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_max``.",
                    "type": "number"
                  },
                  "quadratic_soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_square_hour_after_quadratic_soft_max": {
                    "description": "Cost per square hour incurred if the ``quadratic_soft_max_duration`` threshold is violated.  The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_square_hour_after_quadratic_soft_max * (duration - quadratic_soft_max_duration)^2  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_square_hour_after_quadratic_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "travel_duration_limit": {
                "type": "object",
                "properties": {
                  "max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_hour_after_soft_max": {
                    "description": "Cost per hour incurred if the ``soft_max_duration`` threshold is violated. The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_hour_after_soft_max * (duration - soft_max_duration)  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_max``.",
                    "type": "number"
                  },
                  "quadratic_soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_square_hour_after_quadratic_soft_max": {
                    "description": "Cost per square hour incurred if the ``quadratic_soft_max_duration`` threshold is violated.  The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_square_hour_after_quadratic_soft_max * (duration - quadratic_soft_max_duration)^2  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_square_hour_after_quadratic_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "route_distance_limit": {
                "type": "object",
                "properties": {
                  "max_meters": {
                    "description": "A hard limit constraining the distance to be at most max_meters. The limit must be nonnegative.  This field is a member of `oneof`_ ``_max_meters``.",
                    "type": "integer"
                  },
                  "soft_max_meters": {
                    "description": "A soft limit not enforcing a maximum distance limit, but when violated results in a cost which adds up to other costs defined in the model, with the same unit.  If defined soft_max_meters must be less than max_meters and must be nonnegative.  This field is a member of `oneof`_ ``_soft_max_meters``.",
                    "type": "integer"
                  },
                  "cost_per_kilometer_below_soft_max": {
                    "description": "Cost per kilometer incurred, increasing up to ``soft_max_meters``, with formula:  ::  min(distance_meters, soft_max_meters) / 1000.0 * cost_per_kilometer_below_soft_max.  This cost is not supported in ``route_distance_limit``.  This field is a member of `oneof`_ ``_cost_per_kilometer_below_soft_max``.",
                    "type": "number"
                  },
                  "cost_per_kilometer_above_soft_max": {
                    "description": "Cost per kilometer incurred if distance is above ``soft_max_meters`` limit. The additional cost is 0 if the distance is under the limit, otherwise the formula used to compute the cost is the following:  ::  (distance_meters - soft_max_meters) / 1000.0 * cost_per_kilometer_above_soft_max.  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_kilometer_above_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "extra_visit_duration_for_visit_type": {
                "description": "Specifies a map from visit_types strings to durations. The duration is time in addition to [VisitRequest.duration][google.maps.routeoptimization.v1.Shipment.VisitRequest.duration] to be taken at visits with the specified ``visit_types``. This extra visit duration adds cost if ``cost_per_hour`` is specified. Keys (i.e. ``visit_types``) cannot be empty strings.  If a visit request has multiple types, a duration will be added for each type in the map.",
                "type": "object",
                "additionalProperties": {
                  "type": "enum",
                  "name": "Duration",
                  "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                  "values": {
                    "UNDEFINED_DURATION": {
                      "value": 0
                    },
                    "DURATION_UNSPECIFIED": {
                      "value": 529071340
                    },
                    "HOUR": {
                      "value": 2223588
                    },
                    "MAX": {
                      "value": 76100
                    },
                    "MINUTE": {
                      "value": 126786068
                    }
                  }
                }
              },
              "break_rule": {
                "type": "object",
                "properties": {
                  "break_requests": {
                    "description": "Sequence of breaks. See the ``BreakRequest`` message.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "earliest_start_time": {
                          "description": "Required. Lower bound (inclusive) on the start of the break.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "latest_start_time": {
                          "description": "Required. Upper bound (inclusive) on the start of the break.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "min_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        }
                      },
                      "required": [
                        "earliest_start_time",
                        "latest_start_time",
                        "min_duration"
                      ]
                    }
                  },
                  "frequency_constraints": {
                    "description": "Several ``FrequencyConstraint`` may apply. They must all be satisfied by the ``BreakRequest``\\ s of this ``BreakRule``. See ``FrequencyConstraint``.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min_break_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        },
                        "max_inter_break_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        }
                      },
                      "required": [
                        "min_break_duration",
                        "max_inter_break_duration"
                      ]
                    }
                  }
                }
              },
              "label": {
                "description": "Specifies a label for this vehicle. This label is reported in the response as the ``vehicle_label`` of the corresponding [ShipmentRoute][google.maps.routeoptimization.v1.ShipmentRoute].",
                "type": "string"
              },
              "ignore": {
                "description": "If true, ``used_if_route_is_empty`` must be false, and this vehicle will remain unused.  If a shipment is performed by an ignored vehicle in ``injected_first_solution_routes``, it is skipped in the first solution but is free to be performed in the response.  If a shipment is performed by an ignored vehicle in ``injected_solution_constraint`` and any related pickup/delivery is constrained to remain on the vehicle (i.e., not relaxed to level ``RELAX_ALL_AFTER_THRESHOLD``), it is skipped in the response. If a shipment has a non-empty ``allowed_vehicle_indices`` field and all of the allowed vehicles are ignored, it is skipped in the response.",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "parent",
          "vehicle_id",
          "vehicle"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetVehicleRequest",
      "description": "``GetVehicle`` request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/vehicles/{vehicle}``. The provider\n        must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    current_route_segment_version (google.protobuf.timestamp_pb2.Timestamp):\n        Indicates the minimum timestamp (exclusive) for which\n        ``Vehicle.current_route_segment`` is retrieved. If the route\n        is unchanged since this timestamp, the\n        ``current_route_segment`` field is not set in the response.\n        If a minimum is unspecified, the ``current_route_segment``\n        is always retrieved.\n    waypoints_version (google.protobuf.timestamp_pb2.Timestamp):\n        Indicates the minimum timestamp (exclusive) for which\n        ``Vehicle.waypoint",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/vehicles/{vehicle}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "current_route_segment_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Vehicle.current_route_segment`` is retrieved. If the route is unchanged since this timestamp, the ``current_route_segment`` field is not set in the response. If a minimum is unspecified, the ``current_route_segment`` is always retrieved.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "waypoints_version": {
            "description": "Indicates the minimum timestamp (exclusive) for which ``Vehicle.waypoints`` data is retrieved. If the waypoints are unchanged since this timestamp, the ``vehicle.waypoints`` data is not set in the response. If this field is unspecified, ``vehicle.waypoints`` is always retrieved.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateVehicleRequest",
      "description": "\\`UpdateVehicle request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/vehicles/{vehicle}``. The {provider}\n        must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    vehicle (google.maps.fleetengine_v1.types.Vehicle):\n        Required. The ``Vehicle`` entity values to apply. When\n        updating a ``Vehicle``, the following fields may not be\n        updated as they are managed by the server.\n\n        -  ``available_capacity``\n        -  ``current_route_segment_version``\n        -  ``current_trips``\n        -  ``name``\n        -  ``waypoints_version``\n\n        If the ``attributes`` field is updated, **all** the\n        vehicle's attributes are replaced with the attributes\n        provided in the request. If you want to up",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/vehicles/{vehicle}``. The {provider} must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "vehicle": {
            "description": "Required. The ``Vehicle`` entity values to apply. When updating a ``Vehicle``, the following fields may not be updated as they are managed by the server.  -  ``available_capacity`` -  ``current_route_segment_version`` -  ``current_trips`` -  ``name`` -  ``waypoints_version``  If the ``attributes`` field is updated, **all** the vehicle's attributes are replaced with the attributes provided in the request. If you want to update only some attributes, see the ``UpdateVehicleAttributes`` method.  Likewise, the ``waypoints`` field can be updated, but must contain all the waypoints currently on the vehicle, and no other waypoints.",
            "type": "object",
            "properties": {
              "display_name": {
                "description": "The user-defined display name of the vehicle. It can be up to 63 characters long and may use UTF-8 characters.",
                "type": "string"
              },
              "travel_mode": {
                "type": "enum",
                "name": "TravelMode",
                "description": "Travel modes which can be used by vehicles.\n\nThese should be a subset of the Google Maps Platform Routes\nPreferred API travel modes, see:\nhttps://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode.\n\nValues:\n    TRAVEL_MODE_UNSPECIFIED (0):\n        Unspecified travel mode, equivalent to ``DRIVING``.\n    DRIVING (1):\n        Travel mode corresponding to driving\n        directions (car, ...).\n    WALKING (2):\n        Travel mode corresponding to walking\n        directions.",
                "values": {
                  "TRAVEL_MODE_UNSPECIFIED": {
                    "value": 0
                  },
                  "DRIVING": {
                    "value": 1
                  },
                  "WALKING": {
                    "value": 2
                  }
                }
              },
              "route_modifiers": {
                "type": "object",
                "properties": {
                  "avoid_tolls": {
                    "description": "When set to true, avoids toll roads where reasonable, giving preference to routes not containing toll roads. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_highways": {
                    "description": "When set to true, avoids highways where reasonable, giving preference to routes not containing highways. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_ferries": {
                    "description": "When set to true, avoids ferries where reasonable, giving preference to routes not containing ferries. Applies only to the ``DRIVE`` and\\ ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "avoid_indoor": {
                    "description": "When set to true, avoids navigating indoors where reasonable, giving preference to routes not containing indoor navigation. Applies only to the ``WALK`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  },
                  "vehicle_info": {
                    "type": "object",
                    "properties": {
                      "emission_type": {
                        "type": "enum",
                        "name": "VehicleEmissionType",
                        "description": "A set of values describing the vehicle's emission type. Applies only\nto the ``DRIVE``\n[``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].\n\nValues:\n    VEHICLE_EMISSION_TYPE_UNSPECIFIED (0):\n        No emission type specified. Default to ``GASOLINE``.\n    GASOLINE (1):\n        Gasoline/petrol fueled vehicle.\n    ELECTRIC (2):\n        Electricity powered vehicle.\n    HYBRID (3):\n        Hybrid fuel (such as gasoline + electric)\n        vehicle.\n    DIESEL (4):\n        Diesel fueled vehicle.",
                        "values": {
                          "VEHICLE_EMISSION_TYPE_UNSPECIFIED": {
                            "value": 0
                          },
                          "GASOLINE": {
                            "value": 1
                          },
                          "ELECTRIC": {
                            "value": 2
                          },
                          "HYBRID": {
                            "value": 3
                          },
                          "DIESEL": {
                            "value": 4
                          }
                        }
                      }
                    }
                  },
                  "toll_passes": {
                    "description": "Encapsulates information about toll passes. If toll passes are provided, the API tries to return the pass price. If toll passes are not provided, the API treats the toll pass as unknown and tries to return the cash price. Applies only to the ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "array",
                    "items": {
                      "type": "enum",
                      "name": "TollPass",
                      "description": "List of toll passes around the world that we support.\n\nValues:\n    TOLL_PASS_UNSPECIFIED (0):\n        Not used. If this value is used, then the\n        request fails.\n    AU_ETOLL_TAG (82):\n        Sydney toll pass. See additional details at\n        https://www.myetoll.com.au.\n    AU_EWAY_TAG (83):\n        Sydney toll pass. See additional details at\n        https://www.tollpay.com.au.\n    AU_LINKT (2):\n        Australia-wide toll pass.\n        See additional details at\n        https://www.linkt.com.au/.\n    AR_TELEPASE (3):\n        Argentina toll pass. See additional details\n        at https://telepase.com.ar\n    BR_AUTO_EXPRESO (81):\n        Brazil toll pass. See additional details at\n        https://www.autoexpreso.com\n    BR_CONECTCAR (7):\n        Brazil toll pass. See additional details at\n        https://conectcar.com.\n    BR_MOVE_MAIS (8):\n        Brazil toll pass. See additional details at\n        https://movemais.com.\n    BR_PASSA_RAPIDO (88):\n        Brazil toll pass. See additional details at\n      ",
                      "values": {
                        "TOLL_PASS_UNSPECIFIED": {
                          "value": 0
                        },
                        "AU_ETOLL_TAG": {
                          "value": 82
                        },
                        "AU_EWAY_TAG": {
                          "value": 83
                        },
                        "AU_LINKT": {
                          "value": 2
                        },
                        "AR_TELEPASE": {
                          "value": 3
                        },
                        "BR_AUTO_EXPRESO": {
                          "value": 81
                        },
                        "BR_CONECTCAR": {
                          "value": 7
                        },
                        "BR_MOVE_MAIS": {
                          "value": 8
                        },
                        "BR_PASSA_RAPIDO": {
                          "value": 88
                        },
                        "BR_SEM_PARAR": {
                          "value": 9
                        },
                        "BR_TAGGY": {
                          "value": 10
                        },
                        "BR_VELOE": {
                          "value": 11
                        },
                        "CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD": {
                          "value": 84
                        },
                        "CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD": {
                          "value": 85
                        },
                        "CA_US_BLUE_WATER_EDGE_PASS": {
                          "value": 18
                        },
                        "CA_US_CONNEXION": {
                          "value": 19
                        },
                        "CA_US_NEXUS_CARD": {
                          "value": 20
                        },
                        "ID_E_TOLL": {
                          "value": 16
                        },
                        "IN_FASTAG": {
                          "value": 78
                        },
                        "IN_LOCAL_HP_PLATE_EXEMPT": {
                          "value": 79
                        },
                        "JP_ETC": {
                          "value": 98
                        },
                        "JP_ETC2": {
                          "value": 99
                        },
                        "MX_IAVE": {
                          "value": 90
                        },
                        "MX_PASE": {
                          "value": 91
                        },
                        "MX_QUICKPASS": {
                          "value": 93
                        },
                        "MX_SISTEMA_TELEPEAJE_CHIHUAHUA": {
                          "value": 89
                        },
                        "MX_TAG_IAVE": {
                          "value": 12
                        },
                        "MX_TAG_TELEVIA": {
                          "value": 13
                        },
                        "MX_TELEVIA": {
                          "value": 92
                        },
                        "MX_VIAPASS": {
                          "value": 14
                        },
                        "US_AL_FREEDOM_PASS": {
                          "value": 21
                        },
                        "US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS": {
                          "value": 22
                        },
                        "US_CA_FASTRAK": {
                          "value": 4
                        },
                        "US_CA_FASTRAK_CAV_STICKER": {
                          "value": 86
                        },
                        "US_CO_EXPRESSTOLL": {
                          "value": 23
                        },
                        "US_CO_GO_PASS": {
                          "value": 24
                        },
                        "US_DE_EZPASSDE": {
                          "value": 25
                        },
                        "US_FL_BOB_SIKES_TOLL_BRIDGE_PASS": {
                          "value": 65
                        },
                        "US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD": {
                          "value": 66
                        },
                        "US_FL_EPASS": {
                          "value": 67
                        },
                        "US_FL_GIBA_TOLL_PASS": {
                          "value": 68
                        },
                        "US_FL_LEEWAY": {
                          "value": 69
                        },
                        "US_FL_SUNPASS": {
                          "value": 70
                        },
                        "US_FL_SUNPASS_PRO": {
                          "value": 71
                        },
                        "US_IL_EZPASSIL": {
                          "value": 73
                        },
                        "US_IL_IPASS": {
                          "value": 72
                        },
                        "US_IN_EZPASSIN": {
                          "value": 26
                        },
                        "US_KS_BESTPASS_HORIZON": {
                          "value": 27
                        },
                        "US_KS_KTAG": {
                          "value": 28
                        },
                        "US_KS_NATIONALPASS": {
                          "value": 29
                        },
                        "US_KS_PREPASS_ELITEPASS": {
                          "value": 30
                        },
                        "US_KY_RIVERLINK": {
                          "value": 31
                        },
                        "US_LA_GEAUXPASS": {
                          "value": 32
                        },
                        "US_LA_TOLL_TAG": {
                          "value": 33
                        },
                        "US_MA_EZPASSMA": {
                          "value": 6
                        },
                        "US_MD_EZPASSMD": {
                          "value": 34
                        },
                        "US_ME_EZPASSME": {
                          "value": 35
                        },
                        "US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD": {
                          "value": 36
                        },
                        "US_MI_BCPASS": {
                          "value": 94
                        },
                        "US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG": {
                          "value": 37
                        },
                        "US_MI_IQ_PROX_CARD": {
                          "value": 38
                        },
                        "US_MI_IQ_TAG": {
                          "value": 95
                        },
                        "US_MI_MACKINAC_BRIDGE_MAC_PASS": {
                          "value": 39
                        },
                        "US_MI_NEXPRESS_TOLL": {
                          "value": 40
                        },
                        "US_MN_EZPASSMN": {
                          "value": 41
                        },
                        "US_NC_EZPASSNC": {
                          "value": 42
                        },
                        "US_NC_PEACH_PASS": {
                          "value": 87
                        },
                        "US_NC_QUICK_PASS": {
                          "value": 43
                        },
                        "US_NH_EZPASSNH": {
                          "value": 80
                        },
                        "US_NJ_DOWNBEACH_EXPRESS_PASS": {
                          "value": 75
                        },
                        "US_NJ_EZPASSNJ": {
                          "value": 74
                        },
                        "US_NY_EXPRESSPASS": {
                          "value": 76
                        },
                        "US_NY_EZPASSNY": {
                          "value": 77
                        },
                        "US_OH_EZPASSOH": {
                          "value": 44
                        },
                        "US_PA_EZPASSPA": {
                          "value": 45
                        },
                        "US_RI_EZPASSRI": {
                          "value": 46
                        },
                        "US_SC_PALPASS": {
                          "value": 47
                        },
                        "US_TX_AVI_TAG": {
                          "value": 97
                        },
                        "US_TX_BANCPASS": {
                          "value": 48
                        },
                        "US_TX_DEL_RIO_PASS": {
                          "value": 49
                        },
                        "US_TX_EFAST_PASS": {
                          "value": 50
                        },
                        "US_TX_EAGLE_PASS_EXPRESS_CARD": {
                          "value": 51
                        },
                        "US_TX_EPTOLL": {
                          "value": 52
                        },
                        "US_TX_EZ_CROSS": {
                          "value": 53
                        },
                        "US_TX_EZTAG": {
                          "value": 54
                        },
                        "US_TX_FUEGO_TAG": {
                          "value": 96
                        },
                        "US_TX_LAREDO_TRADE_TAG": {
                          "value": 55
                        },
                        "US_TX_PLUSPASS": {
                          "value": 56
                        },
                        "US_TX_TOLLTAG": {
                          "value": 57
                        },
                        "US_TX_TXTAG": {
                          "value": 58
                        },
                        "US_TX_XPRESS_CARD": {
                          "value": 59
                        },
                        "US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD": {
                          "value": 60
                        },
                        "US_VA_EZPASSVA": {
                          "value": 61
                        },
                        "US_WA_BREEZEBY": {
                          "value": 17
                        },
                        "US_WA_GOOD_TO_GO": {
                          "value": 1
                        },
                        "US_WV_EZPASSWV": {
                          "value": 62
                        },
                        "US_WV_MEMORIAL_BRIDGE_TICKETS": {
                          "value": 63
                        },
                        "US_WV_MOV_PASS": {
                          "value": 100
                        },
                        "US_WV_NEWELL_TOLL_BRIDGE_TICKET": {
                          "value": 64
                        }
                      }
                    }
                  }
                }
              },
              "start_location": {
                "description": "Geographic location where the vehicle starts before picking up any shipments. If not specified, the vehicle starts at its first pickup. If the shipment model has duration and distance matrices, ``start_location`` must not be specified.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "start_waypoint": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "cpe_uri": {
                        "description": "Deprecated. The CPE URI in `CPE format <https://cpe.mitre.org/specification/>`__",
                        "type": "string"
                      },
                      "version": {
                        "type": "object",
                        "properties": {
                          "epoch": {
                            "description": "Used to correct mistakes in the version numbering scheme.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Required only when version kind is NORMAL. The main part of the version name.",
                            "type": "string"
                          },
                          "revision": {
                            "description": "The iteration of the package build from the above version.",
                            "type": "string"
                          },
                          "inclusive": {
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
                            "type": "boolean"
                          },
                          "kind": {
                            "type": "enum",
                            "name": "VersionKind",
                            "description": "Whether this is an ordinary package version or a sentinel\nMIN/MAX version.\n\nValues:\n    VERSION_KIND_UNSPECIFIED (0):\n        Unknown.\n    NORMAL (1):\n        A standard package version.\n    MINIMUM (2):\n        A special version representing negative\n        infinity.\n    MAXIMUM (3):\n        A special version representing positive\n        infinity.",
                            "values": {
                              "VERSION_KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "NORMAL": {
                                "value": 1
                              },
                              "MINIMUM": {
                                "value": 2
                              },
                              "MAXIMUM": {
                                "value": 3
                              }
                            }
                          },
                          "full_name": {
                            "description": "Human readable version string. This string is of the form <epoch>:<name>-<revision> and is only set when kind is NORMAL.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "kind"
                        ]
                      },
                      "path": {
                        "description": "The path from which we gathered that this package/version is installed.",
                        "type": "string"
                      }
                    }
                  },
                  "place_id": {
                    "description": "The POI Place ID associated with the waypoint.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Human readable address or a plus code. See https://plus.codes for details.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "via": {
                    "description": "Marks this waypoint as a milestone rather a stopping point. For each non-via waypoint in the request, the response appends an entry to the [``legs``][google.maps.routing.v2.Route.legs] array to provide the details for stopovers on that leg of the trip. Set this value to true when you want the route to pass through this waypoint without stopping over. Via waypoints don't cause an entry to be added to the ``legs`` array, but they do route the journey through the waypoint. You can only set this value on waypoints that are intermediates. The request fails if you set this field on terminal waypoints. If ``ComputeRoutesRequest.optimize_waypoint_order`` is set to true then this field cannot be set to true; otherwise, the request fails.",
                    "type": "boolean"
                  },
                  "vehicle_stopover": {
                    "description": "Indicates that the waypoint is meant for vehicles to stop at, where the intention is to either pickup or drop-off. When you set this value, the calculated route won't include non-\\ ``via`` waypoints on roads that are unsuitable for pickup and drop-off. This option works only for ``DRIVE`` and ``TWO_WHEELER`` travel modes, and when the ``location_type`` is [``Location``][google.maps.routing.v2.Location].",
                    "type": "boolean"
                  },
                  "side_of_road": {
                    "description": "Indicates that the location of this waypoint is meant to have a preference for the vehicle to stop at a particular side of road. When you set this value, the route will pass through the location so that the vehicle can stop at the side of road that the location is biased towards from the center of the road. This option works only for ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  }
                }
              },
              "end_location": {
                "description": "Geographic location where the vehicle ends after it has completed its last ``VisitRequest``. If not specified the vehicle's ``ShipmentRoute`` ends immediately when it completes its last ``VisitRequest``. If the shipment model has duration and distance matrices, ``end_location`` must not be specified.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "end_waypoint": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "cpe_uri": {
                        "description": "Deprecated. The CPE URI in `CPE format <https://cpe.mitre.org/specification/>`__",
                        "type": "string"
                      },
                      "version": {
                        "type": "object",
                        "properties": {
                          "epoch": {
                            "description": "Used to correct mistakes in the version numbering scheme.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Required only when version kind is NORMAL. The main part of the version name.",
                            "type": "string"
                          },
                          "revision": {
                            "description": "The iteration of the package build from the above version.",
                            "type": "string"
                          },
                          "inclusive": {
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
                            "type": "boolean"
                          },
                          "kind": {
                            "type": "enum",
                            "name": "VersionKind",
                            "description": "Whether this is an ordinary package version or a sentinel\nMIN/MAX version.\n\nValues:\n    VERSION_KIND_UNSPECIFIED (0):\n        Unknown.\n    NORMAL (1):\n        A standard package version.\n    MINIMUM (2):\n        A special version representing negative\n        infinity.\n    MAXIMUM (3):\n        A special version representing positive\n        infinity.",
                            "values": {
                              "VERSION_KIND_UNSPECIFIED": {
                                "value": 0
                              },
                              "NORMAL": {
                                "value": 1
                              },
                              "MINIMUM": {
                                "value": 2
                              },
                              "MAXIMUM": {
                                "value": 3
                              }
                            }
                          },
                          "full_name": {
                            "description": "Human readable version string. This string is of the form <epoch>:<name>-<revision> and is only set when kind is NORMAL.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "kind"
                        ]
                      },
                      "path": {
                        "description": "The path from which we gathered that this package/version is installed.",
                        "type": "string"
                      }
                    }
                  },
                  "place_id": {
                    "description": "The POI Place ID associated with the waypoint.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Human readable address or a plus code. See https://plus.codes for details.  This field is a member of `oneof`_ ``location_type``.",
                    "type": "string"
                  },
                  "via": {
                    "description": "Marks this waypoint as a milestone rather a stopping point. For each non-via waypoint in the request, the response appends an entry to the [``legs``][google.maps.routing.v2.Route.legs] array to provide the details for stopovers on that leg of the trip. Set this value to true when you want the route to pass through this waypoint without stopping over. Via waypoints don't cause an entry to be added to the ``legs`` array, but they do route the journey through the waypoint. You can only set this value on waypoints that are intermediates. The request fails if you set this field on terminal waypoints. If ``ComputeRoutesRequest.optimize_waypoint_order`` is set to true then this field cannot be set to true; otherwise, the request fails.",
                    "type": "boolean"
                  },
                  "vehicle_stopover": {
                    "description": "Indicates that the waypoint is meant for vehicles to stop at, where the intention is to either pickup or drop-off. When you set this value, the calculated route won't include non-\\ ``via`` waypoints on roads that are unsuitable for pickup and drop-off. This option works only for ``DRIVE`` and ``TWO_WHEELER`` travel modes, and when the ``location_type`` is [``Location``][google.maps.routing.v2.Location].",
                    "type": "boolean"
                  },
                  "side_of_road": {
                    "description": "Indicates that the location of this waypoint is meant to have a preference for the vehicle to stop at a particular side of road. When you set this value, the route will pass through the location so that the vehicle can stop at the side of road that the location is biased towards from the center of the road. This option works only for ``DRIVE`` and ``TWO_WHEELER`` [``RouteTravelMode``][google.maps.routing.v2.RouteTravelMode].",
                    "type": "boolean"
                  }
                }
              },
              "start_tags": {
                "description": "Specifies tags attached to the start of the vehicle's route. Empty or duplicate strings are not allowed.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "end_tags": {
                "description": "Specifies tags attached to the end of the vehicle's route. Empty or duplicate strings are not allowed.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "start_time_windows": {
                "description": "Time windows during which the vehicle may depart its start location. They must be within the global time limits (see [ShipmentModel.global_*][google.maps.routeoptimization.v1.ShipmentModel.global_start_time] fields). If unspecified, there is no limitation besides those global time limits.  Time windows belonging to the same repeated field must be disjoint, i.e. no time window can overlap with or be adjacent to another, and they must be in chronological order.  ``cost_per_hour_after_soft_end_time`` and ``soft_end_time`` can only be set if there is a single time window.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start_time": {
                      "description": "The hard time window start time. If unspecified it will be set to ``ShipmentModel.global_start_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "end_time": {
                      "description": "The hard time window end time. If unspecified it will be set to ``ShipmentModel.global_end_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_start_time": {
                      "description": "The soft start time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_end_time": {
                      "description": "The soft end time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "cost_per_hour_before_soft_start_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs before soft_start_time, computed as:  ::  max(0, soft_start_time - t.seconds) * cost_per_hour_before_soft_start_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if soft_start_time has been set.  This field is a member of `oneof`_ ``_cost_per_hour_before_soft_start_time``.",
                      "type": "number"
                    },
                    "cost_per_hour_after_soft_end_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs after ``soft_end_time``, computed as:  ::  max(0, t.seconds - soft_end_time.seconds) * cost_per_hour_after_soft_end_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if ``soft_end_time`` has been set.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_end_time``.",
                      "type": "number"
                    }
                  }
                }
              },
              "end_time_windows": {
                "description": "Time windows during which the vehicle may arrive at its end location. They must be within the global time limits (see [ShipmentModel.global_*][google.maps.routeoptimization.v1.ShipmentModel.global_start_time] fields). If unspecified, there is no limitation besides those global time limits.  Time windows belonging to the same repeated field must be disjoint, i.e. no time window can overlap with or be adjacent to another, and they must be in chronological order.  ``cost_per_hour_after_soft_end_time`` and ``soft_end_time`` can only be set if there is a single time window.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start_time": {
                      "description": "The hard time window start time. If unspecified it will be set to ``ShipmentModel.global_start_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "end_time": {
                      "description": "The hard time window end time. If unspecified it will be set to ``ShipmentModel.global_end_time``.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_start_time": {
                      "description": "The soft start time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "soft_end_time": {
                      "description": "The soft end time of the time window.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                    },
                    "cost_per_hour_before_soft_start_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs before soft_start_time, computed as:  ::  max(0, soft_start_time - t.seconds) * cost_per_hour_before_soft_start_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if soft_start_time has been set.  This field is a member of `oneof`_ ``_cost_per_hour_before_soft_start_time``.",
                      "type": "number"
                    },
                    "cost_per_hour_after_soft_end_time": {
                      "description": "A cost per hour added to other costs in the model if the event occurs after ``soft_end_time``, computed as:  ::  max(0, t.seconds - soft_end_time.seconds) * cost_per_hour_after_soft_end_time / 3600, t being the time of the event.  This cost must be positive, and the field can only be set if ``soft_end_time`` has been set.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_end_time``.",
                      "type": "number"
                    }
                  }
                }
              },
              "travel_duration_multiple": {
                "description": "Specifies a multiplicative factor that can be used to increase or decrease travel times of this vehicle. For example, setting this to 2.0 means that this vehicle is slower and has travel times that are twice what they are for standard vehicles. This multiple does not affect visit durations. It does affect cost if ``cost_per_hour`` or ``cost_per_traveled_hour`` are specified. This must be in the range [0.001, 1000.0]. If unset, the vehicle is standard, and this multiple is considered 1.0.  WARNING: Travel times will be rounded to the nearest second after this multiple is applied but before performing any numerical operations, thus, a small multiple may result in a loss of precision.  See also ``extra_visit_duration_for_visit_type`` below.  This field is a member of `oneof`_ ``_travel_duration_multiple``.",
                "type": "number"
              },
              "unloading_policy": {
                "type": "enum",
                "name": "UnloadingPolicy",
                "description": "Policy on how a vehicle can be unloaded. Applies only to shipments\nhaving both a pickup and a delivery.\n\nOther shipments are free to occur anywhere on the route independent\nof ``unloading_policy``.\n\nValues:\n    UNLOADING_POLICY_UNSPECIFIED (0):\n        Unspecified unloading policy; deliveries must\n        just occur after their corresponding pickups.\n    LAST_IN_FIRST_OUT (1):\n        Deliveries must occur in reverse order of\n        pickups\n    FIRST_IN_FIRST_OUT (2):\n        Deliveries must occur in the same order as\n        pickups",
                "values": {
                  "UNLOADING_POLICY_UNSPECIFIED": {
                    "value": 0
                  },
                  "LAST_IN_FIRST_OUT": {
                    "value": 1
                  },
                  "FIRST_IN_FIRST_OUT": {
                    "value": 2
                  }
                }
              },
              "load_limits": {
                "description": "Capacities of the vehicle (weight, volume, # of pallets for example). The keys in the map are the identifiers of the type of load, consistent with the keys of the [Shipment.load_demands][google.maps.routeoptimization.v1.Shipment.load_demands] field. If a given key is absent from this map, the corresponding capacity is considered to be limitless.",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "max_load": {
                      "description": "The maximum acceptable amount of load.  This field is a member of `oneof`_ ``_max_load``.",
                      "type": "integer"
                    },
                    "soft_max_load": {
                      "description": "A soft limit of the load. See [cost_per_unit_above_soft_max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.cost_per_unit_above_soft_max].",
                      "type": "integer"
                    },
                    "cost_per_unit_above_soft_max": {
                      "description": "If the load ever exceeds [soft_max_load][google.maps.routeoptimization.v1.Vehicle.LoadLimit.soft_max_load] along this vehicle's route, the following cost penalty",
                      "type": "number"
                    },
                    "applies": {
                      "description": "(load - [soft_max_load][google.maps.routeoptimization.v1.Vehicle.LoadLimit.soft_max_load])  -  [cost_per_unit_above_soft_max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.cost_per_unit_above_soft_max]. All costs add up and must be in the same unit as [Shipment.penalty_cost][google.maps.routeoptimization.v1.Shipment.penalty_cost].",
                      "type": "object",
                      "reference": "only once per vehicle"
                    },
                    "start_load_interval": {
                      "type": "object",
                      "properties": {
                        "min_": {
                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                          "type": "integer"
                        },
                        "max_": {
                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                          "type": "integer"
                        }
                      }
                    },
                    "end_load_interval": {
                      "type": "object",
                      "properties": {
                        "min_": {
                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                          "type": "integer"
                        },
                        "max_": {
                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "cost_per_hour": {
                "description": "Vehicle costs: all costs add up and must be in the same unit as [Shipment.penalty_cost][google.maps.routeoptimization.v1.Shipment.penalty_cost].  Cost per hour of the vehicle route. This cost is applied to the total time taken by the route, and includes travel time, waiting time, and visit time. Using ``cost_per_hour`` instead of just ``cost_per_traveled_hour`` may result in additional latency.",
                "type": "number"
              },
              "cost_per_traveled_hour": {
                "description": "Cost per traveled hour of the vehicle route. This cost is applied only to travel time taken by the route (i.e., that reported in [ShipmentRoute.transitions][google.maps.routeoptimization.v1.ShipmentRoute.transitions]), and excludes waiting time and visit time.",
                "type": "number"
              },
              "cost_per_kilometer": {
                "description": "Cost per kilometer of the vehicle route. This cost is applied to the distance reported in the [ShipmentRoute.transitions][google.maps.routeoptimization.v1.ShipmentRoute.transitions] and does not apply to any distance implicitly traveled from the ``arrival_location`` to the ``departure_location`` of a single ``VisitRequest``.",
                "type": "number"
              },
              "fixed_cost": {
                "description": "Fixed cost applied if this vehicle is used to handle a shipment.",
                "type": "number"
              },
              "used_if_route_is_empty": {
                "description": "This field only applies to vehicles when their route does not serve any shipments. It indicates if the vehicle should be considered as used or not in this case.  If true, the vehicle goes from its start to its end location even if it doesn't serve any shipments, and time and distance costs resulting from its start --> end travel are taken into account.  Otherwise, it doesn't travel from its start to its end location, and no ``break_rule`` or delay (from ``TransitionAttributes``) are scheduled for this vehicle. In this case, the vehicle's ``ShipmentRoute`` doesn't contain any information except for the vehicle index and label.",
                "type": "boolean"
              },
              "route_duration_limit": {
                "type": "object",
                "properties": {
                  "max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_hour_after_soft_max": {
                    "description": "Cost per hour incurred if the ``soft_max_duration`` threshold is violated. The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_hour_after_soft_max * (duration - soft_max_duration)  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_max``.",
                    "type": "number"
                  },
                  "quadratic_soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_square_hour_after_quadratic_soft_max": {
                    "description": "Cost per square hour incurred if the ``quadratic_soft_max_duration`` threshold is violated.  The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_square_hour_after_quadratic_soft_max * (duration - quadratic_soft_max_duration)^2  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_square_hour_after_quadratic_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "travel_duration_limit": {
                "type": "object",
                "properties": {
                  "max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_hour_after_soft_max": {
                    "description": "Cost per hour incurred if the ``soft_max_duration`` threshold is violated. The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_hour_after_soft_max * (duration - soft_max_duration)  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_hour_after_soft_max``.",
                    "type": "number"
                  },
                  "quadratic_soft_max_duration": {
                    "type": "enum",
                    "name": "Duration",
                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                    "values": {
                      "UNDEFINED_DURATION": {
                        "value": 0
                      },
                      "DURATION_UNSPECIFIED": {
                        "value": 529071340
                      },
                      "HOUR": {
                        "value": 2223588
                      },
                      "MAX": {
                        "value": 76100
                      },
                      "MINUTE": {
                        "value": 126786068
                      }
                    }
                  },
                  "cost_per_square_hour_after_quadratic_soft_max": {
                    "description": "Cost per square hour incurred if the ``quadratic_soft_max_duration`` threshold is violated.  The additional cost is 0 if the duration is under the threshold, otherwise the cost depends on the duration as follows:  ::  cost_per_square_hour_after_quadratic_soft_max * (duration - quadratic_soft_max_duration)^2  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_square_hour_after_quadratic_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "route_distance_limit": {
                "type": "object",
                "properties": {
                  "max_meters": {
                    "description": "A hard limit constraining the distance to be at most max_meters. The limit must be nonnegative.  This field is a member of `oneof`_ ``_max_meters``.",
                    "type": "integer"
                  },
                  "soft_max_meters": {
                    "description": "A soft limit not enforcing a maximum distance limit, but when violated results in a cost which adds up to other costs defined in the model, with the same unit.  If defined soft_max_meters must be less than max_meters and must be nonnegative.  This field is a member of `oneof`_ ``_soft_max_meters``.",
                    "type": "integer"
                  },
                  "cost_per_kilometer_below_soft_max": {
                    "description": "Cost per kilometer incurred, increasing up to ``soft_max_meters``, with formula:  ::  min(distance_meters, soft_max_meters) / 1000.0 * cost_per_kilometer_below_soft_max.  This cost is not supported in ``route_distance_limit``.  This field is a member of `oneof`_ ``_cost_per_kilometer_below_soft_max``.",
                    "type": "number"
                  },
                  "cost_per_kilometer_above_soft_max": {
                    "description": "Cost per kilometer incurred if distance is above ``soft_max_meters`` limit. The additional cost is 0 if the distance is under the limit, otherwise the formula used to compute the cost is the following:  ::  (distance_meters - soft_max_meters) / 1000.0 * cost_per_kilometer_above_soft_max.  The cost must be nonnegative.  This field is a member of `oneof`_ ``_cost_per_kilometer_above_soft_max``.",
                    "type": "number"
                  }
                }
              },
              "extra_visit_duration_for_visit_type": {
                "description": "Specifies a map from visit_types strings to durations. The duration is time in addition to [VisitRequest.duration][google.maps.routeoptimization.v1.Shipment.VisitRequest.duration] to be taken at visits with the specified ``visit_types``. This extra visit duration adds cost if ``cost_per_hour`` is specified. Keys (i.e. ``visit_types``) cannot be empty strings.  If a visit request has multiple types, a duration will be added for each type in the map.",
                "type": "object",
                "additionalProperties": {
                  "type": "enum",
                  "name": "Duration",
                  "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                  "values": {
                    "UNDEFINED_DURATION": {
                      "value": 0
                    },
                    "DURATION_UNSPECIFIED": {
                      "value": 529071340
                    },
                    "HOUR": {
                      "value": 2223588
                    },
                    "MAX": {
                      "value": 76100
                    },
                    "MINUTE": {
                      "value": 126786068
                    }
                  }
                }
              },
              "break_rule": {
                "type": "object",
                "properties": {
                  "break_requests": {
                    "description": "Sequence of breaks. See the ``BreakRequest`` message.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "earliest_start_time": {
                          "description": "Required. Lower bound (inclusive) on the start of the break.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "latest_start_time": {
                          "description": "Required. Upper bound (inclusive) on the start of the break.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "min_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        }
                      },
                      "required": [
                        "earliest_start_time",
                        "latest_start_time",
                        "min_duration"
                      ]
                    }
                  },
                  "frequency_constraints": {
                    "description": "Several ``FrequencyConstraint`` may apply. They must all be satisfied by the ``BreakRequest``\\ s of this ``BreakRule``. See ``FrequencyConstraint``.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min_break_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        },
                        "max_inter_break_duration": {
                          "type": "enum",
                          "name": "Duration",
                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                          "values": {
                            "UNDEFINED_DURATION": {
                              "value": 0
                            },
                            "DURATION_UNSPECIFIED": {
                              "value": 529071340
                            },
                            "HOUR": {
                              "value": 2223588
                            },
                            "MAX": {
                              "value": 76100
                            },
                            "MINUTE": {
                              "value": 126786068
                            }
                          }
                        }
                      },
                      "required": [
                        "min_break_duration",
                        "max_inter_break_duration"
                      ]
                    }
                  }
                }
              },
              "label": {
                "description": "Specifies a label for this vehicle. This label is reported in the response as the ``vehicle_label`` of the corresponding [ShipmentRoute][google.maps.routeoptimization.v1.ShipmentRoute].",
                "type": "string"
              },
              "ignore": {
                "description": "If true, ``used_if_route_is_empty`` must be false, and this vehicle will remain unused.  If a shipment is performed by an ignored vehicle in ``injected_first_solution_routes``, it is skipped in the first solution but is free to be performed in the response.  If a shipment is performed by an ignored vehicle in ``injected_solution_constraint`` and any related pickup/delivery is constrained to remain on the vehicle (i.e., not relaxed to level ``RELAX_ALL_AFTER_THRESHOLD``), it is skipped in the response. If a shipment has a non-empty ``allowed_vehicle_indices`` field and all of the allowed vehicles are ignored, it is skipped in the response.",
                "type": "boolean"
              }
            }
          },
          "update_mask": {
            "description": "Required. A field mask indicating which fields of the ``Vehicle`` to update. At least one field name must be provided.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name",
          "vehicle",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateVehicleAttributesRequest",
      "description": "``UpdateVehicleAttributes`` request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    name (str):\n        Required. Must be in the format\n        ``providers/{provider}/vehicles/{vehicle}``. The provider\n        must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    attributes (MutableSequence[google.maps.fleetengine_v1.types.VehicleAttribute]):\n        Required. The vehicle attributes to update.\n        Unmentioned attributes are not altered or\n        removed.",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "name": {
            "description": "Required. Must be in the format ``providers/{provider}/vehicles/{vehicle}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "attributes": {
            "description": "Required. The vehicle attributes to update. Unmentioned attributes are not altered or removed.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "description": "The attribute's key. Keys may not contain the colon character (:).",
                  "type": "string"
                },
                "value": {
                  "description": "The attribute's value.",
                  "type": "string"
                },
                "string_value": {
                  "description": "String typed attribute value.  Note: This is identical to the ``value`` field which will eventually be deprecated. For create or update methods, either field can be used, but it's strongly recommended to use ``string_value``. If both ``string_value`` and ``value`` are set, they must be identical or an error will be thrown. Both fields are populated in responses.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "string"
                },
                "bool_value": {
                  "description": "Boolean typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "boolean"
                },
                "number_value": {
                  "description": "Double typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "attributes"
        ]
      }
    },
    {
      "type": "function",
      "name": "SearchVehiclesRequest",
      "description": "``SearchVehicles`` request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    parent (str):\n        Required. Must be in the format ``providers/{provider}``.\n        The provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    pickup_point (google.maps.fleetengine_v1.types.TerminalLocation):\n        Required. The pickup point to search near.\n    dropoff_point (google.maps.fleetengine_v1.types.TerminalLocation):\n        The customer's intended dropoff location. The field is\n        required if ``trip_types`` contains ``TripType.SHARED``.\n    pickup_radius_meters (int):\n        Required. Defines the vehicle search radius\n        around the pickup point. Only vehicles within\n        the search radius will be returned. Value must\n        be between 400 and 10000 meters (inclusive).\n    count (int):\n        Re",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "parent": {
            "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "pickup_point": {
            "description": "Required. The pickup point to search near.",
            "type": "object",
            "properties": {
              "point": {
                "description": "Required. Denotes the location of a trip waypoint.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "terminal_point_id": {
                "type": "object",
                "properties": {
                  "place_id": {
                    "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                    "type": "string"
                  },
                  "generated_id": {
                    "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Deprecated.",
                    "type": "string"
                  }
                }
              },
              "access_point_id": {
                "description": "Deprecated: Specify the ``point`` field instead.",
                "type": "string"
              },
              "trip_id": {
                "description": "Deprecated.",
                "type": "string"
              },
              "terminal_location_type": {
                "type": "enum",
                "name": "WaypointType",
                "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                "values": {
                  "UNKNOWN_WAYPOINT_TYPE": {
                    "value": 0
                  },
                  "PICKUP_WAYPOINT_TYPE": {
                    "value": 1
                  },
                  "DROP_OFF_WAYPOINT_TYPE": {
                    "value": 2
                  },
                  "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                    "value": 3
                  }
                }
              }
            },
            "required": [
              "point"
            ]
          },
          "dropoff_point": {
            "description": "The customer's intended dropoff location. The field is required if ``trip_types`` contains ``TripType.SHARED``.",
            "type": "object",
            "properties": {
              "point": {
                "description": "Required. Denotes the location of a trip waypoint.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "terminal_point_id": {
                "type": "object",
                "properties": {
                  "place_id": {
                    "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                    "type": "string"
                  },
                  "generated_id": {
                    "description": "Deprecated.  This field is a member of `oneof`_ ``Id``.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Deprecated.",
                    "type": "string"
                  }
                }
              },
              "access_point_id": {
                "description": "Deprecated: Specify the ``point`` field instead.",
                "type": "string"
              },
              "trip_id": {
                "description": "Deprecated.",
                "type": "string"
              },
              "terminal_location_type": {
                "type": "enum",
                "name": "WaypointType",
                "description": "The type of waypoint.\n\nValues:\n    UNKNOWN_WAYPOINT_TYPE (0):\n        Unknown or unspecified waypoint type.\n    PICKUP_WAYPOINT_TYPE (1):\n        Waypoints for picking up riders or items.\n    DROP_OFF_WAYPOINT_TYPE (2):\n        Waypoints for dropping off riders or items.\n    INTERMEDIATE_DESTINATION_WAYPOINT_TYPE (3):\n        Waypoints for intermediate destinations in a\n        multi-destination trip.",
                "values": {
                  "UNKNOWN_WAYPOINT_TYPE": {
                    "value": 0
                  },
                  "PICKUP_WAYPOINT_TYPE": {
                    "value": 1
                  },
                  "DROP_OFF_WAYPOINT_TYPE": {
                    "value": 2
                  },
                  "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE": {
                    "value": 3
                  }
                }
              }
            },
            "required": [
              "point"
            ]
          },
          "pickup_radius_meters": {
            "description": "Required. Defines the vehicle search radius around the pickup point. Only vehicles within the search radius will be returned. Value must be between 400 and 10000 meters (inclusive).",
            "type": "integer"
          },
          "count": {
            "description": "Required. Specifies the maximum number of vehicles to return. The value must be between 1 and 50 (inclusive).",
            "type": "integer"
          },
          "minimum_capacity": {
            "description": "Required. Specifies the number of passengers being considered for a trip. The value must be greater than or equal to one. The driver is not considered in the capacity value.",
            "type": "integer"
          },
          "trip_types": {
            "description": "Required. Represents the type of proposed trip. Must include exactly one type. ``UNKNOWN_TRIP_TYPE`` is not allowed. Restricts the search to only those vehicles that can support that trip type.",
            "type": "array",
            "items": {
              "type": "enum",
              "name": "TripType",
              "description": "The type of a trip.\n\nValues:\n    UNKNOWN_TRIP_TYPE (0):\n        Default, used for unspecified or unrecognized\n        trip types.\n    SHARED (1):\n        The trip may share a vehicle with other\n        trips.\n    EXCLUSIVE (2):\n        The trip is exclusive to a vehicle.",
              "values": {
                "UNKNOWN_TRIP_TYPE": {
                  "value": 0
                },
                "SHARED": {
                  "value": 1
                },
                "EXCLUSIVE": {
                  "value": 2
                }
              }
            }
          },
          "maximum_staleness": {
            "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
            "type": "enum",
            "name": "Duration",
            "values": {
              "UNDEFINED_DURATION": {
                "value": 0
              },
              "DURATION_UNSPECIFIED": {
                "value": 529071340
              },
              "HOUR": {
                "value": 2223588
              },
              "MAX": {
                "value": 76100
              },
              "MINUTE": {
                "value": 126786068
              }
            }
          },
          "vehicle_types": {
            "description": "Required. Restricts the search to vehicles with one of the specified types. At least one vehicle type must be specified. VehicleTypes with a category of ``UNKNOWN`` are not allowed.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "description": "The identifier of the category.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The localized name of the category.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required_attributes": {
            "description": "Callers can form complex logical operations using any combination of the ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attribute_sets`` fields.  ``required_attributes`` is a list; ``required_one_of_attributes`` uses a message which allows a list of lists. In combination, the two fields allow the composition of this expression:  ::  (required_attributes[0] AND required_attributes[1] AND ...) AND (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR ...) AND (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR ...)  Restricts the search to only those vehicles with the specified attributes. This field is a conjunction/AND operation. A max of 50 required_attributes is allowed. This matches the maximum number of attributes allowed on a vehicle.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "description": "The attribute's key. Keys may not contain the colon character (:).",
                  "type": "string"
                },
                "value": {
                  "description": "The attribute's value.",
                  "type": "string"
                },
                "string_value": {
                  "description": "String typed attribute value.  Note: This is identical to the ``value`` field which will eventually be deprecated. For create or update methods, either field can be used, but it's strongly recommended to use ``string_value``. If both ``string_value`` and ``value`` are set, they must be identical or an error will be thrown. Both fields are populated in responses.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "string"
                },
                "bool_value": {
                  "description": "Boolean typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "boolean"
                },
                "number_value": {
                  "description": "Double typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                  "type": "number"
                }
              }
            }
          },
          "required_one_of_attributes": {
            "description": "Restricts the search to only those vehicles with at least one of the specified attributes in each ``VehicleAttributeList``. Within each list, a vehicle must match at least one of the attributes. This field is an inclusive disjunction/OR operation in each ``VehicleAttributeList`` and a conjunction/AND operation across the collection of ``VehicleAttributeList``.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "A list of attributes in this collection.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The attribute's key. Keys may not contain the colon character (:).",
                        "type": "string"
                      },
                      "value": {
                        "description": "The attribute's value.",
                        "type": "string"
                      },
                      "string_value": {
                        "description": "String typed attribute value.  Note: This is identical to the ``value`` field which will eventually be deprecated. For create or update methods, either field can be used, but it's strongly recommended to use ``string_value``. If both ``string_value`` and ``value`` are set, they must be identical or an error will be thrown. Both fields are populated in responses.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "string"
                      },
                      "bool_value": {
                        "description": "Boolean typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "boolean"
                      },
                      "number_value": {
                        "description": "Double typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "required_one_of_attribute_sets": {
            "description": "``required_one_of_attribute_sets`` provides additional functionality.  Similar to ``required_one_of_attributes``, ``required_one_of_attribute_sets`` uses a message which allows a list of lists, allowing expressions such as this one:  ::  (required_attributes[0] AND required_attributes[1] AND ...) AND ( (required_one_of_attribute_sets[0][0] AND required_one_of_attribute_sets[0][1] AND ...) OR (required_one_of_attribute_sets[1][0] AND required_one_of_attribute_sets[1][1] AND ...) )  Restricts the search to only those vehicles with all the attributes in a ``VehicleAttributeList``. Within each list, a vehicle must match all of the attributes. This field is a conjunction/AND operation in each ``VehicleAttributeList`` and inclusive disjunction/OR operation across the collection of ``VehicleAttributeList``.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "A list of attributes in this collection.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The attribute's key. Keys may not contain the colon character (:).",
                        "type": "string"
                      },
                      "value": {
                        "description": "The attribute's value.",
                        "type": "string"
                      },
                      "string_value": {
                        "description": "String typed attribute value.  Note: This is identical to the ``value`` field which will eventually be deprecated. For create or update methods, either field can be used, but it's strongly recommended to use ``string_value``. If both ``string_value`` and ``value`` are set, they must be identical or an error will be thrown. Both fields are populated in responses.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "string"
                      },
                      "bool_value": {
                        "description": "Boolean typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "boolean"
                      },
                      "number_value": {
                        "description": "Double typed attribute value.  This field is a member of `oneof`_ ``vehicle_attribute_value``.",
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "order_by": {
            "description": "Specifies the order of the vehicle matches in the response.\n\nValues:\n    UNKNOWN_VEHICLE_MATCH_ORDER (0):\n        Default, used for unspecified or unrecognized\n        vehicle matches order.\n    PICKUP_POINT_ETA (1):\n        Ascending order by vehicle driving time to\n        the pickup point.\n    PICKUP_POINT_DISTANCE (2):\n        Ascending order by vehicle driving distance\n        to the pickup point.\n    DROPOFF_POINT_ETA (3):\n        Ascending order by vehicle driving time to\n        the dropoff point. This order can only be used\n        if the dropoff point is specified in the\n        request.\n    PICKUP_POINT_STRAIGHT_DISTANCE (4):\n        Ascending order by straight-line distance\n        from the vehicle's last reported location to the\n        pickup point.\n    COST (5):\n        Ascending order by the configured match cost.\n        Match cost is defined as a weighted calculation\n        between straight-line distance and ETA. Weights\n        are set with default values and can be modified\n        per cu",
            "type": "enum",
            "name": "VehicleMatchOrder",
            "values": {
              "UNKNOWN_VEHICLE_MATCH_ORDER": {
                "value": 0
              },
              "PICKUP_POINT_ETA": {
                "value": 1
              },
              "PICKUP_POINT_DISTANCE": {
                "value": 2
              },
              "DROPOFF_POINT_ETA": {
                "value": 3
              },
              "PICKUP_POINT_STRAIGHT_DISTANCE": {
                "value": 4
              },
              "COST": {
                "value": 5
              }
            }
          },
          "include_back_to_back": {
            "description": "This indicates if vehicles with a single active trip are eligible for this search. This field is only used when ``current_trips_present`` is unspecified. When ``current_trips_present`` is unspecified and this field is ``false``, vehicles with assigned trips are excluded from the search results. When ``current_trips_present`` is unspecified and this field is ``true``, search results can include vehicles with one active trip that has a status of ``ENROUTE_TO_DROPOFF``. When ``current_trips_present`` is specified, this field cannot be set to true.  The default value is ``false``.",
            "type": "boolean"
          },
          "trip_id": {
            "description": "Indicates the trip associated with this ``SearchVehicleRequest``.",
            "type": "string"
          },
          "current_trips_present": {
            "description": "Specifies the types of restrictions on a vehicle's current\ntrips.\n\nValues:\n    CURRENT_TRIPS_PRESENT_UNSPECIFIED (0):\n        The availability of vehicles with trips present is governed\n        by the ``include_back_to_back`` field.\n    NONE (1):\n        Vehicles without trips can appear in search results. When\n        this value is used, ``include_back_to_back`` cannot be\n        ``true``.\n    ANY (2):\n        Vehicles with at most 5 current trips and 10 waypoints are\n        included in the search results. When this value is used,\n        ``include_back_to_back`` cannot be ``true``.",
            "type": "enum",
            "name": "CurrentTripsPresent",
            "values": {
              "CURRENT_TRIPS_PRESENT_UNSPECIFIED": {
                "value": 0
              },
              "NONE": {
                "value": 1
              },
              "ANY": {
                "value": 2
              }
            }
          },
          "filter": {
            "description": "Optional. A filter query to apply when searching vehicles. See http://aip.dev/160 for examples of the filter syntax.  This field is designed to replace the ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attributes_sets`` fields. If a non-empty value is specified here, the following fields must be empty: ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attributes_sets``.  This filter functions as an AND clause with other constraints, such as ``minimum_capacity`` or ``vehicle_types``.  Note that the only queries supported are on vehicle attributes (for example, ``attributes.<key> = <value>`` or ``attributes.<key1> = <value1> AND attributes.<key2> = <value2>``). The maximum number of restrictions allowed in a filter query is 50.  Also, all attributes are stored as strings, so the only supported comparisons against attributes are string comparisons. In order to compare against number or boolean values, the values must be explicitly quoted to be treated as strings (for example, ``attributes.<key> = \"10\"`` or ``attributes.<key> = \"true\"``).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "pickup_point",
          "pickup_radius_meters",
          "count",
          "minimum_capacity",
          "trip_types",
          "vehicle_types",
          "order_by"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListVehiclesRequest",
      "description": "``ListVehicles`` request message.\n\nAttributes:\n    header (google.maps.fleetengine_v1.types.RequestHeader):\n        The standard Fleet Engine request header.\n    parent (str):\n        Required. Must be in the format ``providers/{provider}``.\n        The provider must be the Project ID (for example,\n        ``sample-cloud-project``) of the Google Cloud Project of\n        which the service account making this call is a member.\n    page_size (int):\n        The maximum number of vehicles to return.\n        Default value: 100.\n    page_token (str):\n        The value of the ``next_page_token`` provided by a previous\n        call to ``ListVehicles`` so that you can paginate through\n        groups of vehicles. The value is undefined if the filter\n        criteria of the request is not the same as the filter\n        criteria for the previous call to ``ListVehicles``.\n    minimum_capacity (google.protobuf.wrappers_pb2.Int32Value):\n        Specifies the required minimum capacity of the vehicle. All\n        vehicles retu",
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "description": "The standard Fleet Engine request header.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "The BCP-47 language code, such as en-US or sr-Latn. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If none is specified, the response may be in any language, with a preference for English if such a name exists. Field value example: ``en-US``.",
                "type": "string"
              },
              "region_code": {
                "description": "Required. CLDR region code of the region where the request originates. Field value example: ``US``.",
                "type": "string"
              },
              "sdk_version": {
                "description": "Version of the calling SDK, if applicable. The version format is \"major.minor.patch\", example: ``1.1.2``.",
                "type": "string"
              },
              "os_version": {
                "description": "Version of the operating system on which the calling SDK is running. Field value examples: ``4.4.1``, ``12.1``.",
                "type": "string"
              },
              "device_model": {
                "description": "Model of the device on which the calling SDK is running. Field value examples: ``iPhone12,1``, ``SM-G920F``.",
                "type": "string"
              },
              "sdk_type": {
                "type": "enum",
                "name": "SdkType",
                "description": "Possible types of SDK.\n\nValues:\n    SDK_TYPE_UNSPECIFIED (0):\n        The default value. This value is used if the ``sdk_type`` is\n        omitted.\n    CONSUMER (1):\n        The calling SDK is Consumer.\n    DRIVER (2):\n        The calling SDK is Driver.\n    JAVASCRIPT (3):\n        The calling SDK is JavaScript.",
                "values": {
                  "SDK_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "CONSUMER": {
                    "value": 1
                  },
                  "DRIVER": {
                    "value": 2
                  },
                  "JAVASCRIPT": {
                    "value": 3
                  }
                }
              },
              "maps_sdk_version": {
                "description": "Version of the MapSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``5.2.1``.",
                "type": "string"
              },
              "nav_sdk_version": {
                "description": "Version of the NavSDK which the calling SDK depends on, if applicable. The version format is \"major.minor.patch\", example: ``2.1.0``.",
                "type": "string"
              },
              "platform": {
                "type": "enum",
                "name": "Platform",
                "description": "Types of platforms.\n\nValues:\n    PLATFORM_UNSPECIFIED (0):\n        Unknown.\n    GKE (1):\n        Google Container Engine.\n    FLEX (2):\n        Google App Engine: Flexible Environment.\n    CUSTOM (3):\n        Custom user-defined platform.",
                "values": {
                  "PLATFORM_UNSPECIFIED": {
                    "value": 0
                  },
                  "GKE": {
                    "value": 1
                  },
                  "FLEX": {
                    "value": 2
                  },
                  "CUSTOM": {
                    "value": 3
                  }
                }
              },
              "manufacturer": {
                "description": "Manufacturer of the Android device from the calling SDK, only applicable for the Android SDKs. Field value example: ``Samsung``.",
                "type": "string"
              },
              "android_api_level": {
                "description": "Android API level of the calling SDK, only applicable for the Android SDKs. Field value example: ``23``.",
                "type": "integer"
              },
              "trace_id": {
                "description": "Optional ID that can be provided for logging purposes in order to identify the request.",
                "type": "string"
              }
            },
            "required": [
              "region_code"
            ]
          },
          "parent": {
            "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Project ID (for example, ``sample-cloud-project``) of the Google Cloud Project of which the service account making this call is a member.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of vehicles to return. Default value: 100.",
            "type": "integer"
          },
          "page_token": {
            "description": "The value of the ``next_page_token`` provided by a previous call to ``ListVehicles`` so that you can paginate through groups of vehicles. The value is undefined if the filter criteria of the request is not the same as the filter criteria for the previous call to ``ListVehicles``.",
            "type": "string"
          },
          "minimum_capacity": {
            "description": "Specifies the required minimum capacity of the vehicle. All vehicles returned will have a ``maximum_capacity`` greater than or equal to this value. If set, must be greater or equal to 0.",
            "type": "object",
            "reference": "google.protobuf.wrappers_pb2.Int32Value"
          },
          "trip_types": {
            "description": "Restricts the response to vehicles that support at least one of the specified trip types.",
            "type": "array",
            "items": {
              "type": "enum",
              "name": "TripType",
              "description": "The type of a trip.\n\nValues:\n    UNKNOWN_TRIP_TYPE (0):\n        Default, used for unspecified or unrecognized\n        trip types.\n    SHARED (1):\n        The trip may share a vehicle with other\n        trips.\n    EXCLUSIVE (2):\n        The trip is exclusive to a vehicle.",
              "values": {
                "UNKNOWN_TRIP_TYPE": {
                  "value": 0
                },
                "SHARED": {
                  "value": 1
                },
                "EXCLUSIVE": {
                  "value": 2
                }
              }
            }
          },
          "maximum_staleness": {
            "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
            "type": "enum",
            "name": "Duration",
            "values": {
              "UNDEFINED_DURATION": {
                "value": 0
              },
              "DURATION_UNSPECIFIED": {
                "value": 529071340
              },
              "HOUR": {
                "value": 2223588
              },
              "MAX": {
                "value": 76100
              },
              "MINUTE": {
                "value": 126786068
              }
            }
          },
          "vehicle_type_categories": {
            "description": "Required. Restricts the response to vehicles with one of the specified type categories. ``UNKNOWN`` is not allowed.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category_id": {
                  "description": "The identifier of the category.",
                  "type": "string"
                },
                "name": {
                  "description": "The localized name of the category.",
                  "type": "string"
                }
              }
            }
          },
          "required_attributes": {
            "description": "Callers can form complex logical operations using any combination of the ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attribute_sets`` fields.  ``required_attributes`` is a list; ``required_one_of_attributes`` uses a message which allows a list of lists. In combination, the two fields allow the composition of this expression:  ::  (required_attributes[0] AND required_attributes[1] AND ...) AND (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR ...) AND (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR ...)  Restricts the response to vehicles with the specified attributes. This field is a conjunction/AND operation. A max of 50 required_attributes is allowed. This matches the maximum number of attributes allowed on a vehicle. Each repeated string should be of the format \"key:value\".",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "required_one_of_attributes": {
            "description": "Restricts the response to vehicles with at least one of the specified attributes in each ``VehicleAttributeList``. Within each list, a vehicle must match at least one of the attributes. This field is an inclusive disjunction/OR operation in each ``VehicleAttributeList`` and a conjunction/AND operation across the collection of ``VehicleAttributeList``. Each repeated string should be of the format \"key1:value1|key2:value2|key3:value3\".",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "required_one_of_attribute_sets": {
            "description": "``required_one_of_attribute_sets`` provides additional functionality.  Similar to ``required_one_of_attributes``, ``required_one_of_attribute_sets`` uses a message which allows a list of lists, allowing expressions such as this one:  ::  (required_attributes[0] AND required_attributes[1] AND ...) AND ( (required_one_of_attribute_sets[0][0] AND required_one_of_attribute_sets[0][1] AND ...) OR (required_one_of_attribute_sets[1][0] AND required_one_of_attribute_sets[1][1] AND ...) )  Restricts the response to vehicles that match all the attributes in a ``VehicleAttributeList``. Within each list, a vehicle must match all of the attributes. This field is a conjunction/AND operation in each ``VehicleAttributeList`` and inclusive disjunction/OR operation across the collection of ``VehicleAttributeList``. Each repeated string should be of the format \"key1:value1|key2:value2|key3:value3\".",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicle_state": {
            "description": "The state of a ``Vehicle``.\n\nValues:\n    UNKNOWN_VEHICLE_STATE (0):\n        Default, used for unspecified or unrecognized\n        vehicle states.\n    OFFLINE (1):\n        The vehicle is not accepting new trips. Note:\n        the vehicle may continue to operate in this\n        state while completing a trip assigned to it.\n    ONLINE (2):\n        The vehicle is accepting new trips.",
            "type": "enum",
            "name": "VehicleState",
            "values": {
              "UNKNOWN_VEHICLE_STATE": {
                "value": 0
              },
              "OFFLINE": {
                "value": 1
              },
              "ONLINE": {
                "value": 2
              }
            }
          },
          "on_trip_only": {
            "description": "Only return the vehicles with current trip(s).",
            "type": "boolean"
          },
          "filter": {
            "description": "Optional. A filter query to apply when listing vehicles. See http://aip.dev/160 for examples of the filter syntax.  This field is designed to replace the ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attributes_sets`` fields. If a non-empty value is specified here, the following fields must be empty: ``required_attributes``, ``required_one_of_attributes``, and ``required_one_of_attributes_sets``.  This filter functions as an AND clause with other constraints, such as ``vehicle_state`` or ``on_trip_only``.  Note that the only queries supported are on vehicle attributes (for example, ``attributes.<key> = <value>`` or ``attributes.<key1> = <value1> AND attributes.<key2> = <value2>``). The maximum number of restrictions allowed in a filter query is 50.  Also, all attributes are stored as strings, so the only supported comparisons against attributes are string comparisons. In order to compare against number or boolean values, the values must be explicitly quoted to be treated as strings (for example, ``attributes.<key> = \"10\"`` or ``attributes.<key> = \"true\"``).",
            "type": "string"
          },
          "viewport": {
            "description": "Optional. A filter that limits the vehicles returned to those whose last known location was in the rectangular area defined by the viewport.",
            "type": "object",
            "properties": {
              "low": {
                "description": "Required. The low point of the viewport.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              },
              "high": {
                "description": "Required. The high point of the viewport.",
                "type": "object",
                "reference": "google.type.latlng_pb2.LatLng"
              }
            },
            "required": [
              "low",
              "high"
            ]
          }
        },
        "required": [
          "parent",
          "vehicle_type_categories"
        ]
      }
    }
  ]
}