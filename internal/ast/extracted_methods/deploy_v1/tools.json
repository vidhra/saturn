{
  "CloudDeploy": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_delivery_pipelines",
          "description": "Lists DeliveryPipelines in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_delivery_pipelines():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListDeliveryPipelinesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_delivery_pipelines(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of pipelines. Format must be ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListDeliveryPipelinesAsyncPager: The response object from ListDeliveryPipelines.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListDeliveryPipelinesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_delivery_pipeline",
          "description": "Gets details of a single DeliveryPipeline.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_delivery_pipeline():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetDeliveryPipelineRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_delivery_pipeline(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetDeliveryPipelineRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``DeliveryPipeline``. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.DeliveryPipeline: A DeliveryPipeline resource in the Cloud Deploy API.  A DeliveryPipeline defines a pipeline through which a Skaffold configuration can progress."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetDeliveryPipelineRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_delivery_pipeline",
          "description": "Creates a new DeliveryPipeline in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_delivery_pipeline():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.CreateDeliveryPipelineRequest(\n            parent=\"parent_value\",\n            delivery_pipeline_id=\"delivery_pipeline_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_delivery_pipeline(request=request)\n\n        print(\"Waiting for operation to complet",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``DeliveryPipeline`` must be created. The format is ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "delivery_pipeline": {
                "type": "google.cloud.deploy_v1.types.DeliveryPipeline",
                "description": "Required. The ``DeliveryPipeline`` to create. This corresponds to the ``delivery_pipeline`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "delivery_pipeline_id": {
                "type": "str",
                "description": "Required. ID of the ``DeliveryPipeline``. This corresponds to the ``delivery_pipeline_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.DeliveryPipeline` A DeliveryPipeline resource in the Cloud Deploy API.  A DeliveryPipeline defines a pipeline through which a Skaffold configuration can progress."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "delivery_pipeline",
              "delivery_pipeline_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateDeliveryPipelineRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_delivery_pipeline",
          "description": "Updates the parameters of a single DeliveryPipeline.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_update_delivery_pipeline():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.UpdateDeliveryPipelineRequest(\n        )\n\n        # Make the request\n        operation = client.update_delivery_pipeline(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "delivery_pipeline": {
                "type": "google.cloud.deploy_v1.types.DeliveryPipeline",
                "description": "Required. The ``DeliveryPipeline`` to update. This corresponds to the ``delivery_pipeline`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the ``DeliveryPipeline`` resource. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.DeliveryPipeline` A DeliveryPipeline resource in the Cloud Deploy API.  A DeliveryPipeline defines a pipeline through which a Skaffold configuration can progress."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "delivery_pipeline",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.UpdateDeliveryPipelineRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_delivery_pipeline",
          "description": "Deletes a single DeliveryPipeline.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_delete_delivery_pipeline():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.DeleteDeliveryPipelineRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_delivery_pipeline(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``DeliveryPipeline`` to delete. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.DeleteDeliveryPipelineRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_targets",
          "description": "Lists Targets in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_targets():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListTargetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_targets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of targets. Format must be ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListTargetsAsyncPager: The response object from ListTargets.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListTargetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rollback_target",
          "description": "Creates a ``Rollout`` to roll back the specified target.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_rollback_target():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.RollbackTargetRequest(\n            name=\"name_value\",\n            target_id=\"target_id_value\",\n            rollout_id=\"rollout_id_value\",\n        )\n\n        # Make the request\n        response = await client.rollback_target(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``DeliveryPipeline`` for which the rollback ``Rollout`` must be created. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_id": {
                "type": "str",
                "description": "Required. ID of the ``Target`` that is being rolled back.  This corresponds to the ``target_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollout_id": {
                "type": "str",
                "description": "Required. ID of the rollback ``Rollout`` to create. This corresponds to the ``rollout_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.RollbackTargetResponse: The response object from RollbackTarget."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "target_id",
              "rollout_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.RollbackTargetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_target",
          "description": "Gets details of a single Target.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_target():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetTargetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_target(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetTargetRequest, dict]]):\n        The request object. The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``Target``. Format must be ``projects/{project_id}/locations/{location_name}/targets/{target_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.Target: A Target resource in the Cloud Deploy API.  A Target defines a location to which a Skaffold configuration can be deployed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetTargetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_target",
          "description": "Creates a new Target in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_target():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.CreateTargetRequest(\n            parent=\"parent_value\",\n            target_id=\"target_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_target(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``Target`` must be created. The format is ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target": {
                "type": "google.cloud.deploy_v1.types.Target",
                "description": "Required. The ``Target`` to create. This corresponds to the ``target`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_id": {
                "type": "str",
                "description": "Required. ID of the ``Target``. This corresponds to the ``target_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Target` A Target resource in the Cloud Deploy API.  A Target defines a location to which a Skaffold configuration can be deployed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "target",
              "target_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateTargetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_target",
          "description": "Updates the parameters of a single Target.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_update_target():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.UpdateTargetRequest(\n        )\n\n        # Make the request\n        operation = client.update_target(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "target": {
                "type": "google.cloud.deploy_v1.types.Target",
                "description": "Required. The ``Target`` to update. This corresponds to the ``target`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the ``Target`` resource. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Target` A Target resource in the Cloud Deploy API.  A Target defines a location to which a Skaffold configuration can be deployed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "target",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.UpdateTargetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_target",
          "description": "Deletes a single Target.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_delete_target():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.DeleteTargetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_target(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``Target`` to delete. The format is ``projects/{project_id}/locations/{location_name}/targets/{target_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.DeleteTargetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_target_types",
          "description": "Lists CustomTargetTypes in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_custom_target_types():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListCustomTargetTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_custom_target_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns this collection of custom target types. Format must be ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListCustomTargetTypesAsyncPager: The response object from ListCustomTargetTypes.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListCustomTargetTypesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_target_type",
          "description": "Gets details of a single CustomTargetType.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_custom_target_type():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetCustomTargetTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_custom_target_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetCustomTargetType",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``CustomTargetType``. Format must be ``projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.CustomTargetType: A CustomTargetType resource in the Cloud Deploy API.  A CustomTargetType defines a type of custom target that can be referenced in a Target in order to facilitate deploying to other systems besides the supported runtimes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetCustomTargetTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_target_type",
          "description": "Creates a new CustomTargetType in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_custom_target_type():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        custom_target_type = deploy_v1.CustomTargetType()\n        custom_target_type.custom_actions.deploy_action = \"deploy_action_value\"\n\n        request = deploy_v1.CreateCustomTargetTypeRequest(\n            parent=\"parent_value\",\n            custom_target_type_id=\"custom_target_type_id_value\",\n            c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``CustomTargetType`` must be created. The format is ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_target_type": {
                "type": "google.cloud.deploy_v1.types.CustomTargetType",
                "description": "Required. The ``CustomTargetType`` to create. This corresponds to the ``custom_target_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_target_type_id": {
                "type": "str",
                "description": "Required. ID of the ``CustomTargetType``. This corresponds to the ``custom_target_type_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.CustomTargetType` A CustomTargetType resource in the Cloud Deploy API.  A CustomTargetType defines a type of custom target that can be referenced in a Target in order to facilitate deploying to other systems besides the supported runtimes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_target_type",
              "custom_target_type_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateCustomTargetTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_target_type",
          "description": "Updates a single CustomTargetType.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_update_custom_target_type():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        custom_target_type = deploy_v1.CustomTargetType()\n        custom_target_type.custom_actions.deploy_action = \"deploy_action_value\"\n\n        request = deploy_v1.UpdateCustomTargetTypeRequest(\n            custom_target_type=custom_target_type,\n        )\n\n        # Make the request\n        operation = client.update_custom_target_type(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_target_type": {
                "type": "google.cloud.deploy_v1.types.CustomTargetType",
                "description": "Required. The ``CustomTargetType`` to update. This corresponds to the ``custom_target_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the ``CustomTargetType`` resource. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.CustomTargetType` A CustomTargetType resource in the Cloud Deploy API.  A CustomTargetType defines a type of custom target that can be referenced in a Target in order to facilitate deploying to other systems besides the supported runtimes."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_target_type",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.UpdateCustomTargetTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_custom_target_type",
          "description": "Deletes a single CustomTargetType.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_delete_custom_target_type():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.DeleteCustomTargetTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_custom_target_type(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``CustomTargetType`` to delete. Format must be ``projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.DeleteCustomTargetTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_releases",
          "description": "Lists Releases in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_releases():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListReleasesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_releases(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The ``DeliveryPipeline`` which owns this collection of ``Release`` objects.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListReleasesAsyncPager: The response object from ListReleases.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListReleasesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_release",
          "description": "Gets details of a single Release.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_release():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetReleaseRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_release(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetReleaseRequest, dict]]):\n        The request object. The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``Release``. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.Release: A Release resource in the Cloud Deploy API.  A Release defines a specific Skaffold configuration instance that can be deployed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetReleaseRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_release",
          "description": "Creates a new Release in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_release():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.CreateReleaseRequest(\n            parent=\"parent_value\",\n            release_id=\"release_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_release(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``Release`` is created. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "release": {
                "type": "google.cloud.deploy_v1.types.Release",
                "description": "Required. The ``Release`` to create. This corresponds to the ``release`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "release_id": {
                "type": "str",
                "description": "Required. ID of the ``Release``. This corresponds to the ``release_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Release` A Release resource in the Cloud Deploy API.  A Release defines a specific Skaffold configuration instance that can be deployed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "release",
              "release_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateReleaseRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "abandon_release",
          "description": "Abandons a Release in the Delivery Pipeline.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_abandon_release():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.AbandonReleaseRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.abandon_release(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.AbandonReleaseRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the Release. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.AbandonReleaseResponse: The response object for AbandonRelease."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.AbandonReleaseRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_deploy_policy",
          "description": "Creates a new DeployPolicy in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_deploy_policy():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        deploy_policy = deploy_v1.DeployPolicy()\n        deploy_policy.rules.rollout_restriction.id = \"id_value\"\n        deploy_policy.rules.rollout_restriction.time_windows.time_zone = \"time_zone_value\"\n\n        request = deploy_v1.CreateDeployPolicyRequest(\n            parent=\"parent_value\",\n            deploy_policy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``DeployPolicy`` must be created. The format is ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deploy_policy": {
                "type": "google.cloud.deploy_v1.types.DeployPolicy",
                "description": "Required. The ``DeployPolicy`` to create. This corresponds to the ``deploy_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deploy_policy_id": {
                "type": "str",
                "description": "Required. ID of the ``DeployPolicy``. This corresponds to the ``deploy_policy_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.DeployPolicy` A DeployPolicy resource in the Cloud Deploy API.  A DeployPolicy inhibits manual or automation-driven actions within a Delivery Pipeline or Target."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "deploy_policy",
              "deploy_policy_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateDeployPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_deploy_policy",
          "description": "Updates the parameters of a single DeployPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_update_deploy_policy():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        deploy_policy = deploy_v1.DeployPolicy()\n        deploy_policy.rules.rollout_restriction.id = \"id_value\"\n        deploy_policy.rules.rollout_restriction.time_windows.time_zone = \"time_zone_value\"\n\n        request = deploy_v1.UpdateDeployPolicyRequest(\n            deploy_policy=deploy_policy,\n        )\n\n        # Make the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "deploy_policy": {
                "type": "google.cloud.deploy_v1.types.DeployPolicy",
                "description": "Required. The ``DeployPolicy`` to update. This corresponds to the ``deploy_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the ``DeployPolicy`` resource. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.DeployPolicy` A DeployPolicy resource in the Cloud Deploy API.  A DeployPolicy inhibits manual or automation-driven actions within a Delivery Pipeline or Target."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "deploy_policy",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.UpdateDeployPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_deploy_policy",
          "description": "Deletes a single DeployPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_delete_deploy_policy():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.DeleteDeployPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_deploy_policy(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``DeployPolicy`` to delete. The format is ``projects/{project_id}/locations/{location_name}/deployPolicies/{deploy_policy_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.DeleteDeployPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_deploy_policies",
          "description": "Lists DeployPolicies in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_deploy_policies():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListDeployPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_deploy_policies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of deploy policies. Format must be ``projects/{project_id}/locations/{location_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListDeployPoliciesAsyncPager: The response object from ListDeployPolicies.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListDeployPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_deploy_policy",
          "description": "Gets details of a single DeployPolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_deploy_policy():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetDeployPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_deploy_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetDeployPolicyRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``DeployPolicy``. Format must be ``projects/{project_id}/locations/{location_name}/deployPolicies/{deploy_policy_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.DeployPolicy: A DeployPolicy resource in the Cloud Deploy API.  A DeployPolicy inhibits manual or automation-driven actions within a Delivery Pipeline or Target."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetDeployPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "approve_rollout",
          "description": "Approves a Rollout.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_approve_rollout():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ApproveRolloutRequest(\n            name=\"name_value\",\n            approved=True,\n        )\n\n        # Make the request\n        response = await client.approve_rollout(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.ApproveRolloutRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the Rollout. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.ApproveRolloutResponse: The response object from ApproveRollout."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ApproveRolloutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "advance_rollout",
          "description": "Advances a Rollout in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_advance_rollout():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.AdvanceRolloutRequest(\n            name=\"name_value\",\n            phase_id=\"phase_id_value\",\n        )\n\n        # Make the request\n        response = await client.advance_rollout(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the Rollout. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phase_id": {
                "type": "str",
                "description": "Required. The phase ID to advance the ``Rollout`` to. This corresponds to the ``phase_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.AdvanceRolloutResponse: The response object from AdvanceRollout."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "phase_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.AdvanceRolloutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_rollout",
          "description": "Cancels a Rollout in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_cancel_rollout():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.CancelRolloutRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.cancel_rollout(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.CancelRolloutRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the Rollout. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.CancelRolloutResponse: The response object from CancelRollout."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CancelRolloutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_rollouts",
          "description": "Lists Rollouts in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_rollouts():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListRolloutsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_rollouts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The ``Release`` which owns this collection of ``Rollout`` objects.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListRolloutsAsyncPager: ListRolloutsResponse is the response object reutrned by ListRollouts.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListRolloutsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_rollout",
          "description": "Gets details of a single Rollout.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_rollout():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetRolloutRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_rollout(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetRolloutRequest, dict]]):\n        The request object. Get",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``Rollout``. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.Rollout: A Rollout resource in the Cloud Deploy API.  A Rollout contains information around a specific deployment to a Target."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetRolloutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_rollout",
          "description": "Creates a new Rollout in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_rollout():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        rollout = deploy_v1.Rollout()\n        rollout.target_id = \"target_id_value\"\n\n        request = deploy_v1.CreateRolloutRequest(\n            parent=\"parent_value\",\n            rollout_id=\"rollout_id_value\",\n            rollout=rollout,\n        )\n\n        # Make the request\n        operation = client.create_rollout(request=r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``Rollout`` must be created. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollout": {
                "type": "google.cloud.deploy_v1.types.Rollout",
                "description": "Required. The ``Rollout`` to create. This corresponds to the ``rollout`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollout_id": {
                "type": "str",
                "description": "Required. ID of the ``Rollout``. This corresponds to the ``rollout_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Rollout` A Rollout resource in the Cloud Deploy API.  A Rollout contains information around a specific deployment to a Target."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "rollout",
              "rollout_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateRolloutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "ignore_job",
          "description": "Ignores the specified Job in a Rollout.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_ignore_job():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.IgnoreJobRequest(\n            rollout=\"rollout_value\",\n            phase_id=\"phase_id_value\",\n            job_id=\"job_id_value\",\n        )\n\n        # Make the request\n        response = await client.ignore_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[googl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "rollout": {
                "type": "str",
                "description": "Required. Name of the Rollout. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}``.  This corresponds to the ``rollout`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phase_id": {
                "type": "str",
                "description": "Required. The phase ID the Job to ignore belongs to.  This corresponds to the ``phase_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job_id": {
                "type": "str",
                "description": "Required. The job ID for the Job to ignore.  This corresponds to the ``job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.IgnoreJobResponse: The response object from IgnoreJob."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "rollout",
              "phase_id",
              "job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.IgnoreJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retry_job",
          "description": "Retries the specified Job in a Rollout.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_retry_job():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.RetryJobRequest(\n            rollout=\"rollout_value\",\n            phase_id=\"phase_id_value\",\n            job_id=\"job_id_value\",\n        )\n\n        # Make the request\n        response = await client.retry_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "rollout": {
                "type": "str",
                "description": "Required. Name of the Rollout. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}``.  This corresponds to the ``rollout`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phase_id": {
                "type": "str",
                "description": "Required. The phase ID the Job to retry belongs to.  This corresponds to the ``phase_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job_id": {
                "type": "str",
                "description": "Required. The job ID for the Job to retry.  This corresponds to the ``job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.RetryJobResponse: The response object from 'RetryJob'."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "rollout",
              "phase_id",
              "job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.RetryJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_job_runs",
          "description": "Lists JobRuns in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_job_runs():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListJobRunsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_job_runs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The ``Rollout`` which owns this collection of ``JobRun`` objects.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListJobRunsAsyncPager: ListJobRunsResponse is the response object returned by ListJobRuns.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListJobRunsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job_run",
          "description": "Gets details of a single JobRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_job_run():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetJobRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_job_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetJobRunRequest, dict]]):\n        The request object. GetJob",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``JobRun``. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.JobRun: A JobRun resource in the Cloud Deploy API.  A JobRun contains information of a single Rollout job evaluation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetJobRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "terminate_job_run",
          "description": "Terminates a Job Run in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_terminate_job_run():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.TerminateJobRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.terminate_job_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.TerminateJobRunRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``JobRun``. Format must be ``projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.TerminateJobRunResponse: The response object from TerminateJobRun."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.TerminateJobRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_config",
          "description": "Gets the configuration for a location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_config():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetConfigRequest, dict]]):\n        The request object. Re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of requested configuration.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.Config: Service-wide configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_automation",
          "description": "Creates a new Automation in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_create_automation():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        automation = deploy_v1.Automation()\n        automation.service_account = \"service_account_value\"\n        automation.rules.promote_release_rule.id = \"id_value\"\n\n        request = deploy_v1.CreateAutomationRequest(\n            parent=\"parent_value\",\n            automation_id=\"automation_id_value\",\n            automati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent collection in which the ``Automation`` must be created. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "automation": {
                "type": "google.cloud.deploy_v1.types.Automation",
                "description": "Required. The ``Automation`` to create. This corresponds to the ``automation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "automation_id": {
                "type": "str",
                "description": "Required. ID of the ``Automation``. This corresponds to the ``automation_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Automation` An Automation resource in the Cloud Deploy API.  An Automation enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "automation",
              "automation_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CreateAutomationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_automation",
          "description": "Updates the parameters of a single Automation\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_update_automation():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        automation = deploy_v1.Automation()\n        automation.service_account = \"service_account_value\"\n        automation.rules.promote_release_rule.id = \"id_value\"\n\n        request = deploy_v1.UpdateAutomationRequest(\n            automation=automation,\n        )\n\n        # Make the request\n        operation = client.update",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "automation": {
                "type": "google.cloud.deploy_v1.types.Automation",
                "description": "Required. The ``Automation`` to update. This corresponds to the ``automation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the ``Automation`` resource. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.deploy_v1.types.Automation` An Automation resource in the Cloud Deploy API.  An Automation enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "automation",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.UpdateAutomationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_automation",
          "description": "Deletes a single Automation resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_delete_automation():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.DeleteAutomationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_automation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``Automation`` to delete. The format is ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.DeleteAutomationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_automation",
          "description": "Gets details of a single Automation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_automation():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetAutomationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_automation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetAutomationRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``Automation``. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.Automation: An Automation resource in the Cloud Deploy API.  An Automation enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetAutomationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_automations",
          "description": "Lists Automations in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_automations():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListAutomationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_automations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent ``Delivery Pipeline``, which owns this collection of automations. Format must be ``projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListAutomationsAsyncPager: The response object from ListAutomations.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListAutomationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_automation_run",
          "description": "Gets details of a single AutomationRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_get_automation_run():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.GetAutomationRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_automation_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.deploy_v1.types.GetAutomationRunRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``AutomationRun``. Format must be ``projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.AutomationRun: An AutomationRun resource in the Cloud Deploy API.  An AutomationRun represents an execution instance of an automation rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.GetAutomationRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_automation_runs",
          "description": "Lists AutomationRuns in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_list_automation_runs():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.ListAutomationRunsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_automation_runs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent ``Delivery Pipeline``, which owns this collection of automationRuns. Format must be ``projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.services.cloud_deploy.pagers.ListAutomationRunsAsyncPager: The response object from ListAutomationRuns.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.ListAutomationRunsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_automation_run",
          "description": "Cancels an AutomationRun. The ``state`` of the ``AutomationRun``\nafter cancelling is ``CANCELLED``. ``CancelAutomationRun`` can\nbe called on AutomationRun in the state ``IN_PROGRESS`` and\n``PENDING``; AutomationRun in a different state returns an\n``FAILED_PRECONDITION`` error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import deploy_v1\n\n    async def sample_cancel_automation_run():\n        # Create a client\n        client = deploy_v1.CloudDeployAsyncClient()\n\n        # Initialize request argument(s)\n        request = deploy_v1.CancelAutomationRunRequest(\n            name=\"name_value\",\n        )\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ``AutomationRun``. Format is ``projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.deploy_v1.types.CancelAutomationRunResponse: The response object from CancelAutomationRun."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_deploy.CancelAutomationRunRequest"
          ]
        }
      }
    ]
  }
}