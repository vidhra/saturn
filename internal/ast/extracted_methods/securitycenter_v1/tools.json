{
  "SecurityCenter": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "bulk_mute_findings",
          "description": "Kicks off an LRO to bulk mute findings for a parent\nbased on a filter. The parent can be either an\norganization, folder or project. The findings matched by\nthe filter will be muted after the LRO is done.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_bulk_mute_findings():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.BulkMuteFindingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = clien",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, at which bulk action needs to be applied. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.securitycenter_v1.types.BulkMuteFindingsResponse` The response to a BulkMute request. Contains the LRO information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_security_health_analytics_custom_module",
          "description": "Creates a resident\nSecurityHealthAnalyticsCustomModule at the scope of the\ngiven CRM parent, and also creates inherited\nSecurityHealthAnalyticsCustomModules for all CRM\ndescendants of the given parent. These modules are\nenabled by default.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateSecurityHealthAnalyticsCustomModuleRequest(\n         ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new custom module's parent. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings``, ``folders/{folder}/securityHealthAnalyticsSettings``, or ``projects/{project}/securityHealthAnalyticsSettings``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "security_health_analytics_custom_module": {
                "type": "google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule",
                "description": "Required. SecurityHealthAnalytics custom module to create. The provided name is ignored and reset with provided parent information and server-generated ID.  This corresponds to the ``security_health_analytics_custom_module`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule: Represents an instance of a Security Health Analytics custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by the child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "security_health_analytics_custom_module",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_source",
          "description": "Creates a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_source():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateSourceRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.CreateSourceRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new source's parent. Its format should be ``organizations/[organization_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source": {
                "type": "google.cloud.securitycenter_v1.types.Source",
                "description": "Required. The Source being created, only the display_name and description will be used. All other fields will be ignored.  This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Source"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_finding",
          "description": "Creates a finding. The corresponding source must\nexist for finding creation to succeed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_finding():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateFindingRequest(\n            parent=\"parent_value\",\n            finding_id=\"finding_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_finding(request=request)\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new finding's parent. Its format should be ``organizations/[organization_id]/sources/[source_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "finding_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.  This corresponds to the ``finding_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "finding": {
                "type": "google.cloud.securitycenter_v1.types.Finding",
                "description": "Required. The Finding being created. The name and security_marks will be ignored as they are both output only fields on this resource.  This corresponds to the ``finding`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "finding_id",
              "finding",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Finding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_mute_config",
          "description": "Creates a mute config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_mute_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        mute_config = securitycenter_v1.MuteConfig()\n        mute_config.filter = \"filter_value\"\n\n        request = securitycenter_v1.CreateMuteConfigRequest(\n            parent=\"parent_value\",\n            mute_config=mute_config,\n            mute_config_id=\"mute_config_id_value\",\n        )\n\n        # Make the request\n        response = a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new mute configs's parent. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, or ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute_config": {
                "type": "google.cloud.securitycenter_v1.types.MuteConfig",
                "description": "Required. The mute config being created.  This corresponds to the ``mute_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute_config_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must consist of only lowercase letters, numbers, and hyphens, must start with a letter, must end with either a letter or a number, and must be 63 characters or less.  This corresponds to the ``mute_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "mute_config",
              "mute_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.MuteConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_notification_config",
          "description": "Creates a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_notification_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateNotificationConfigRequest(\n            parent=\"parent_value\",\n            config_id=\"config_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_notification_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new notification config's parent. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, or ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must be between 1 and 128 characters and contain alphanumeric characters, underscores, or hyphens only.  This corresponds to the ``config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "notification_config": {
                "type": "google.cloud.securitycenter_v1.types.NotificationConfig",
                "description": "Required. The notification config being created. The name and the service account will be ignored as they are both output only fields on this resource.  This corresponds to the ``notification_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "config_id",
              "notification_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.NotificationConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_mute_config",
          "description": "Deletes an existing mute config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_mute_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteMuteConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_mute_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.DeleteMuteConfigRequest, dict]]):\n        The request object. Request m",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mute config to delete. Its format is ``organizations/{organization}/muteConfigs/{config_id}``, ``folders/{folder}/muteConfigs/{config_id}``, ``projects/{project}/muteConfigs/{config_id}``, ``organizations/{organization}/locations/global/muteConfigs/{config_id}``, ``folders/{folder}/locations/global/muteConfigs/{config_id}``, or ``projects/{project}/locations/global/muteConfigs/{config_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_notification_config",
          "description": "Deletes a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_notification_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteNotificationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_notification_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.DeleteNotificationConfigRequest, dict]]):\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the notification config to delete. Its format is ``organizations/[organization_id]/notificationConfigs/[config_id]``, ``folders/[folder_id]/notificationConfigs/[config_id]``, or ``projects/[project_id]/notificationConfigs/[config_id]``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_security_health_analytics_custom_module",
          "description": "Deletes the specified\nSecurityHealthAnalyticsCustomModule and all of its\ndescendants in the CRM hierarchy. This method is only\nsupported for resident custom modules.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteSecurityHealthAnalyticsCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the custom module to delete. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}``, ``folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}``, or ``projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_simulation",
          "description": "Get the simulation by name or the latest simulation\nfor the given organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_simulation():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetSimulationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_simulation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The organization name or simulation name of this simulation  Valid format: ``organizations/{organization}/simulations/latest`` ``organizations/{organization}/simulations/{simulation}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Simulation: Attack path simulation"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Simulation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_valued_resource",
          "description": "Get the valued resource by name\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_valued_resource():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetValuedResourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_valued_resource(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.Get",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of this valued resource  Valid format: ``organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.ValuedResource: A resource that is determined to have value to a user's system"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.ValuedResource"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_big_query_export",
          "description": "Gets a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_big_query_export():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetBigQueryExportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.GetBigQue",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the BigQuery export to retrieve. Its format is ``organizations/{organization}/bigQueryExports/{export_id}``, ``folders/{folder}/bigQueryExports/{export_id}``, or ``projects/{project}/bigQueryExports/{export_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.BigQueryExport"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the access control policy on the specified\nSource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.get_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_mute_config",
          "description": "Gets a mute config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_mute_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetMuteConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_mute_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.GetMuteConfigRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mute config to retrieve. Its format is ``organizations/{organization}/muteConfigs/{config_id}``, ``folders/{folder}/muteConfigs/{config_id}``, ``projects/{project}/muteConfigs/{config_id}``, ``organizations/{organization}/locations/global/muteConfigs/{config_id}``, ``folders/{folder}/locations/global/muteConfigs/{config_id}``, or ``projects/{project}/locations/global/muteConfigs/{config_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.MuteConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_notification_config",
          "description": "Gets a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_notification_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetNotificationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_notification_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the notification config to get. Its format is ``organizations/[organization_id]/notificationConfigs/[config_id]``, ``folders/[folder_id]/notificationConfigs/[config_id]``, or ``projects/[project_id]/notificationConfigs/[config_id]``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.NotificationConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_organization_settings",
          "description": "Gets the settings for an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_organization_settings():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetOrganizationSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_organization_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.se",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the organization to get organization settings for. Its format is ``organizations/[organization_id]/organizationSettings``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.OrganizationSettings: User specified settings that are attached to the Security Command Center organization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.OrganizationSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_effective_security_health_analytics_custom_module",
          "description": "Retrieves an\nEffectiveSecurityHealthAnalyticsCustomModule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_effective_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetEffectiveSecurityHealthAnalyticsCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_effective_security_health_analytics_custom_module(request=request)\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the effective custom module to get. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}``, ``folders/{folder}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}``, or ``projects/{project}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.EffectiveSecurityHealthAnalyticsCustomModule: An EffectiveSecurityHealthAnalyticsCustomModule is the representation of a Security Health Analytics custom module at a specified level of the resource hierarchy: organization, folder, or project. If a custom module is inherited from a parent organization or folder, the value of the enablementState property in EffectiveSecurityHealthAnalyticsCustomModule is set to the value that is effective in the parent, instead of INHERITED. For example, if the module is enabled in a parent organization or folder, the effective enablement_state for the module in all child folders or projects is also enabled. EffectiveSecurityHealthAnalyticsCustomModule is read-only."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.EffectiveSecurityHealthAnalyticsCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_security_health_analytics_custom_module",
          "description": "Retrieves a SecurityHealthAnalyticsCustomModule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetSecurityHealthAnalyticsCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_security_health_analytics_custom_module(request=request)\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the custom module to get. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}``, ``folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}``, or ``projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule: Represents an instance of a Security Health Analytics custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by the child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_source",
          "description": "Gets a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_source():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.GetSourceRequest, dict]]):\n        The request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Relative resource name of the source. Its format is ``organizations/[organization_id]/source/[source_id]``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Source"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "group_assets",
          "description": "Filters an organization's assets and  groups them by\ntheir specified properties.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_group_assets():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GroupAssetsRequest(\n            parent=\"parent_value\",\n            group_by=\"group_by_value\",\n        )\n\n        # Make the request\n        page_result = client.group_assets(request=request)\n\n        # Handle the response\n        async for response in ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.GroupAssetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "group_findings",
          "description": "Filters an organization or source's findings and groups them by\ntheir specified properties.\n\nTo group across all sources provide a ``-`` as the source id.\nExample: /v1/organizations/{organization_id}/sources/-/findings,\n/v1/folders/{folder_id}/sources/-/findings,\n/v1/projects/{project_id}/sources/-/findings\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_group_findings():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GroupFindingsRequest(\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the source to groupBy. Its format is ``organizations/[organization_id]/sources/[source_id]``, ``folders/[folder_id]/sources/[source_id]``, or ``projects/[project_id]/sources/[source_id]``. To groupBy across all sources provide a source_id of ``-``. For example: ``organizations/{organization_id}/sources/-, folders/{folder_id}/sources/-``, or ``projects/{project_id}/sources/-``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group_by": {
                "type": "str",
                "description": "Required. Expression that defines what assets fields to use for grouping (including ``state_change``). The string value should follow SQL syntax: comma separated list of fields. For example: \"parent,resource_name\".  The following fields are supported when compare_duration is set:  -  state_change  This corresponds to the ``group_by`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.GroupFindingsAsyncPager: Response message for group by findings. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "group_by",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.GroupFindingsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_assets",
          "description": "Lists an organization's assets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_assets():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListAssetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_assets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.se",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListAssetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_descendant_security_health_analytics_custom_modules",
          "description": "Returns a list of all resident\nSecurityHealthAnalyticsCustomModules under the given CRM\nparent and all of the parent\u2019s CRM descendants.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_descendant_security_health_analytics_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListDescendantSecurityHealthAnalyticsCustomModulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list descendant custom modules. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings``, ``folders/{folder}/securityHealthAnalyticsSettings``, or ``projects/{project}/securityHealthAnalyticsSettings``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListDescendantSecurityHealthAnalyticsCustomModulesAsyncPager: Response message for listing descendant Security Health Analytics custom modules.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListDescendantSecurityHealthAnalyticsCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_findings",
          "description": "Lists an organization or source's findings.\n\nTo list across all sources provide a ``-`` as the source id.\nExample: /v1/organizations/{organization_id}/sources/-/findings\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_findings():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListFindingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_findings(request=request)\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListFindingsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_mute_configs",
          "description": "Lists mute configs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_mute_configs():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListMuteConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_mute_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of mute configs. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListMuteConfigsAsyncPager: Response message for listing mute configs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListMuteConfigsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_notification_configs",
          "description": "Lists notification configs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_notification_configs():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListNotificationConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_notification_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the parent in which to list the notification configurations. Its format is \"organizations/[organization_id]\", \"folders/[folder_id]\", or \"projects/[project_id]\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListNotificationConfigsAsyncPager: Response message for listing notification configs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListNotificationConfigsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_effective_security_health_analytics_custom_modules",
          "description": "Returns a list of all\nEffectiveSecurityHealthAnalyticsCustomModules for the\ngiven parent. This includes resident modules defined at\nthe scope of the parent, and inherited modules,\ninherited from CRM ancestors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_effective_security_health_analytics_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListEffectiveSecurityHealthAnalyticsCustomModulesRequest(\n            parent=\"pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list effective custom modules. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings``, ``folders/{folder}/securityHealthAnalyticsSettings``, or ``projects/{project}/securityHealthAnalyticsSettings``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListEffectiveSecurityHealthAnalyticsCustomModulesAsyncPager: Response message for listing effective Security Health Analytics custom modules.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListEffectiveSecurityHealthAnalyticsCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_security_health_analytics_custom_modules",
          "description": "Returns a list of all\nSecurityHealthAnalyticsCustomModules for the given\nparent. This includes resident modules defined at the\nscope of the parent, and inherited modules, inherited\nfrom CRM ancestors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_security_health_analytics_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListSecurityHealthAnalyticsCustomModulesRequest(\n            parent=\"parent_value\",\n        )\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list custom modules. Its format is ``organizations/{organization}/securityHealthAnalyticsSettings``, ``folders/{folder}/securityHealthAnalyticsSettings``, or ``projects/{project}/securityHealthAnalyticsSettings``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListSecurityHealthAnalyticsCustomModulesAsyncPager: Response message for listing Security Health Analytics custom modules. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListSecurityHealthAnalyticsCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sources",
          "description": "Lists all sources belonging to an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_sources():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListSourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent of sources to list. Its format should be ``organizations/[organization_id]``, ``folders/[folder_id]``, or ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListSourcesAsyncPager: Response message for listing sources.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListSourcesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_asset_discovery",
          "description": "Runs asset discovery. The discovery is tracked with a\nlong-running operation.\n\nThis API can only be called with limited frequency for an\norganization. If it is called too frequently the caller will\nreceive a TOO_MANY_REQUESTS error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_run_asset_discovery():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.RunAssetDiscoveryRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the organization to run asset discovery for. Its format is ``organizations/[organization_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.securitycenter_v1.types.RunAssetDiscoveryResponse` Response of asset discovery run"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_finding_state",
          "description": "Updates the state of a finding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_set_finding_state():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.SetFindingStateRequest(\n            name=\"name_value\",\n            state=\"INACTIVE\",\n        )\n\n        # Make the request\n        response = await client.set_finding_state(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.sec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The `relative resource name <https://cloud.google.com/apis/design/resource_names#relative_resource_name>`__ of the finding. Example: ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}``, ``folders/{folder_id}/sources/{source_id}/findings/{finding_id}``, ``projects/{project_id}/sources/{source_id}/findings/{finding_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "state": {
                "type": "google.cloud.securitycenter_v1.types.Finding.State",
                "description": "Required. The desired State of the finding.  This corresponds to the ``state`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "start_time": {
                "type": "google.protobuf.timestamp_pb2.Timestamp",
                "description": "Required. The time at which the updated state takes effect.  This corresponds to the ``start_time`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "state",
              "start_time",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Finding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_mute",
          "description": "Updates the mute state of a finding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_set_mute():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.SetMuteRequest(\n            name=\"name_value\",\n            mute=\"UNDEFINED\",\n        )\n\n        # Make the request\n        response = await client.set_mute(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The `relative resource name <https://cloud.google.com/apis/design/resource_names#relative_resource_name>`__ of the finding. Example: ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}``, ``folders/{folder_id}/sources/{source_id}/findings/{finding_id}``, ``projects/{project_id}/sources/{source_id}/findings/{finding_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute": {
                "type": "google.cloud.securitycenter_v1.types.Finding.Mute",
                "description": "Required. The desired state of the Mute.  This corresponds to the ``mute`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "mute",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Finding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the access control policy on the specified\nSource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.SetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.set_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "SetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns the permissions that a caller has on the\nspecified source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resource=\"resource_value\",\n            permissions=['permissions_value1', 'permissions_value2'],\n        )\n\n        # Make the request\n        response = await c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "permissions": {
                "type": "MutableSequence[str]",
                "description": "The set of permissions to check for the ``resource``. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`__.  This corresponds to the ``permissions`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse: Response message for TestIamPermissions method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "permissions",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "TestIamPermissionsRequest"
          ],
          "response_types": [
            "google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "simulate_security_health_analytics_custom_module",
          "description": "Simulates a given SecurityHealthAnalyticsCustomModule\nand Resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_simulate_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        resource = securitycenter_v1.SimulatedResource()\n        resource.resource_type = \"resource_type_value\"\n\n        request = securitycenter_v1.SimulateSecurityHealthAnalyticsCustomModuleRequest(\n            parent=\"parent_value\",\n            resource=resource",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The relative resource name of the organization, project, or folder. For more information about relative resource names, see `Relative Resource Name <https://cloud.google.com/apis/design/resource_names#relative_resource_name>`__ Example: ``organizations/{organization_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_config": {
                "type": "google.cloud.securitycenter_v1.types.CustomConfig",
                "description": "Required. The custom configuration that you need to test.  This corresponds to the ``custom_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource": {
                "type": "google.cloud.securitycenter_v1.types.SimulateSecurityHealthAnalyticsCustomModuleRequest.SimulatedResource",
                "description": "Required. Resource data to simulate custom module against.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.SimulateSecurityHealthAnalyticsCustomModuleResponse: Response message for simulating a SecurityHealthAnalyticsCustomModule against a given resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_config",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.SimulateSecurityHealthAnalyticsCustomModuleResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_external_system",
          "description": "Updates external system. This is for a given finding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_external_system():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateExternalSystemRequest(\n        )\n\n        # Make the request\n        response = await client.update_external_system(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.Upd",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "external_system": {
                "type": "google.cloud.securitycenter_v1.types.ExternalSystem",
                "description": "Required. The external system resource to update.  This corresponds to the ``external_system`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the external system resource. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.ExternalSystem: Representation of third party SIEM/SOAR fields within SCC."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "external_system",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.ExternalSystem"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_finding",
          "description": "Creates or updates a finding. The corresponding\nsource must exist for a finding creation to succeed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_finding():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateFindingRequest(\n        )\n\n        # Make the request\n        response = await client.update_finding(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.sec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "finding": {
                "type": "google.cloud.securitycenter_v1.types.Finding",
                "description": "Required. The finding resource to update or create if it does not already exist. parent, security_marks, and update_time will be ignored.  In the case of creation, the finding id portion of the name must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.  This corresponds to the ``finding`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "finding",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Finding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_mute_config",
          "description": "Updates a mute config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_mute_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        mute_config = securitycenter_v1.MuteConfig()\n        mute_config.filter = \"filter_value\"\n\n        request = securitycenter_v1.UpdateMuteConfigRequest(\n            mute_config=mute_config,\n        )\n\n        # Make the request\n        response = await client.update_mute_config(request=request)\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "mute_config": {
                "type": "google.cloud.securitycenter_v1.types.MuteConfig",
                "description": "Required. The mute config being updated.  This corresponds to the ``mute_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "mute_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.MuteConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_notification_config",
          "description": "Updates a notification config. The following update fields are\nallowed: description, pubsub_topic, streaming_config.filter\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_notification_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateNotificationConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_notification_config(request=request)\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "notification_config": {
                "type": "google.cloud.securitycenter_v1.types.NotificationConfig",
                "description": "Required. The notification config to update.  This corresponds to the ``notification_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the notification config. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "notification_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.NotificationConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_organization_settings",
          "description": "Updates an organization's settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_organization_settings():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateOrganizationSettingsRequest(\n        )\n\n        # Make the request\n        response = await client.update_organization_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.Upd",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "organization_settings": {
                "type": "google.cloud.securitycenter_v1.types.OrganizationSettings",
                "description": "Required. The organization settings resource to update.  This corresponds to the ``organization_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.OrganizationSettings: User specified settings that are attached to the Security Command Center organization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "organization_settings",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.OrganizationSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_security_health_analytics_custom_module",
          "description": "Updates the SecurityHealthAnalyticsCustomModule under\nthe given name based on the given update mask. Updating\nthe enablement state is supported on both resident and\ninherited modules (though resident modules cannot have\nan enablement state of \"inherited\"). Updating the\ndisplay name and custom config of a module is supported\non resident modules only.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_security_health_analytics_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "security_health_analytics_custom_module": {
                "type": "google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule",
                "description": "Required. The SecurityHealthAnalytics custom module to update.  This corresponds to the ``security_health_analytics_custom_module`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. The only fields that can be updated are ``enablement_state`` and ``custom_config``. If empty or set to the wildcard value ``*``, both ``enablement_state`` and ``custom_config`` are updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule: Represents an instance of a Security Health Analytics custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by the child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "security_health_analytics_custom_module",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.SecurityHealthAnalyticsCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_source",
          "description": "Updates a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_source():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateSourceRequest(\n        )\n\n        # Make the request\n        response = await client.update_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.UpdateSourceRequest, dict]]):\n        The request object. Request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "source": {
                "type": "google.cloud.securitycenter_v1.types.Source",
                "description": "Required. The source resource to update.  This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.Source"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_security_marks",
          "description": "Updates security marks.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_security_marks():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateSecurityMarksRequest(\n        )\n\n        # Make the request\n        response = await client.update_security_marks(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.UpdateSecurityMarksRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "security_marks": {
                "type": "google.cloud.securitycenter_v1.types.SecurityMarks",
                "description": "Required. The security marks resource to update.  This corresponds to the ``security_marks`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.SecurityMarks: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "security_marks",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.SecurityMarks"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_big_query_export",
          "description": "Creates a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_big_query_export():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateBigQueryExportRequest(\n            parent=\"parent_value\",\n            big_query_export_id=\"big_query_export_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the parent resource of the new BigQuery export. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, or ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "big_query_export": {
                "type": "google.cloud.securitycenter_v1.types.BigQueryExport",
                "description": "Required. The BigQuery export being created.  This corresponds to the ``big_query_export`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "big_query_export_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must consist of only lowercase letters, numbers, and hyphens, must start with a letter, must end with either a letter or a number, and must be 63 characters or less.  This corresponds to the ``big_query_export_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "big_query_export",
              "big_query_export_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.BigQueryExport"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_big_query_export",
          "description": "Deletes an existing BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_big_query_export():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteBigQueryExportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_big_query_export(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.DeleteBigQueryExportRequest, dict]]):\n        The req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the BigQuery export to delete. Its format is ``organizations/{organization}/bigQueryExports/{export_id}``, ``folders/{folder}/bigQueryExports/{export_id}``, or ``projects/{project}/bigQueryExports/{export_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_big_query_export",
          "description": "Updates a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_big_query_export():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.UpdateBigQueryExportRequest(\n        )\n\n        # Make the request\n        response = await client.update_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.UpdateBigQueryExportRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "big_query_export": {
                "type": "google.cloud.securitycenter_v1.types.BigQueryExport",
                "description": "Required. The BigQuery export being updated.  This corresponds to the ``big_query_export`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "big_query_export",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.BigQueryExport"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_big_query_exports",
          "description": "Lists BigQuery exports. Note that when requesting\nBigQuery exports at a given level all exports under that\nlevel are also returned e.g. if requesting BigQuery\nexports under a folder, then all BigQuery exports\nimmediately under the folder plus the ones created under\nthe projects within the folder are returned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_big_query_exports():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListBigQuery",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of BigQuery exports. Its format is ``organizations/[organization_id]``, ``folders/[folder_id]``, ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListBigQueryExportsAsyncPager: Response message for listing BigQuery exports. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListBigQueryExportsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_event_threat_detection_custom_module",
          "description": "Creates a resident Event Threat Detection custom\nmodule at the scope of the given Resource Manager\nparent, and also creates inherited custom modules for\nall descendants of the given parent. These modules are\nenabled by default.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_create_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.CreateEventThreatDetectionCustomModuleRequest(\n            parent=\"parent_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The new custom module's parent.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings``. -  ``folders/{folder}/eventThreatDetectionSettings``. -  ``projects/{project}/eventThreatDetectionSettings``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event_threat_detection_custom_module": {
                "type": "google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule",
                "description": "Required. The module to create. The event_threat_detection_custom_module.name will be ignored and server generated.  This corresponds to the ``event_threat_detection_custom_module`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule: Represents an instance of an Event Threat Detection custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "event_threat_detection_custom_module",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_event_threat_detection_custom_module",
          "description": "Deletes the specified Event Threat Detection custom\nmodule and all of its descendants in the Resource\nManager hierarchy. This method is only supported for\nresident custom modules.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteEventThreatDetectionCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the custom module to delete.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings/customModules/{module}``. -  ``folders/{folder}/eventThreatDetectionSettings/customModules/{module}``. -  ``projects/{project}/eventThreatDetectionSettings/customModules/{module}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_event_threat_detection_custom_module",
          "description": "Gets an Event Threat Detection custom module.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetEventThreatDetectionCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_event_threat_detection_custom_module(request=request)\n\n        # Handle the response\n        print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the custom module to get.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings/customModules/{module}``. -  ``folders/{folder}/eventThreatDetectionSettings/customModules/{module}``. -  ``projects/{project}/eventThreatDetectionSettings/customModules/{module}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule: Represents an instance of an Event Threat Detection custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_descendant_event_threat_detection_custom_modules",
          "description": "Lists all resident Event Threat Detection custom\nmodules under the given Resource Manager parent and its\ndescendants.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_descendant_event_threat_detection_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListDescendantEventThreatDetectionCustomModulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_descendant_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent to list custom modules under.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings``. -  ``folders/{folder}/eventThreatDetectionSettings``. -  ``projects/{project}/eventThreatDetectionSettings``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListDescendantEventThreatDetectionCustomModulesAsyncPager: Response for listing current and descendant resident Event Threat Detection custom modules.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListDescendantEventThreatDetectionCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_event_threat_detection_custom_modules",
          "description": "Lists all Event Threat Detection custom modules for\nthe given Resource Manager parent. This includes\nresident modules defined at the scope of the parent\nalong with modules inherited from ancestors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_event_threat_detection_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListEventThreatDetectionCustomModulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Mak",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent to list custom modules under.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings``. -  ``folders/{folder}/eventThreatDetectionSettings``. -  ``projects/{project}/eventThreatDetectionSettings``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListEventThreatDetectionCustomModulesAsyncPager: Response for listing Event Threat Detection custom modules. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListEventThreatDetectionCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_event_threat_detection_custom_module",
          "description": "Updates the Event Threat Detection custom module with\nthe given name based on the given update mask. Updating\nthe enablement state is supported for both resident and\ninherited modules (though resident modules cannot have\nan enablement state of \"inherited\"). Updating the\ndisplay name or configuration of a module is supported\nfor resident modules only. The type of a module cannot\nbe changed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "event_threat_detection_custom_module": {
                "type": "google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule",
                "description": "Required. The module being updated. This corresponds to the ``event_threat_detection_custom_module`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule: Represents an instance of an Event Threat Detection custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by child folders and projects."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "event_threat_detection_custom_module",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.EventThreatDetectionCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "validate_event_threat_detection_custom_module",
          "description": "Validates the given Event Threat Detection custom\nmodule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_validate_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ValidateEventThreatDetectionCustomModuleRequest(\n            parent=\"parent_value\",\n            raw_text=\"raw_text_value\",\n            type_=\"type__value\",\n        )\n\n        # Make the request\n        response = await client.validate_event_t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.ValidateEventThreatDetectionCustomModuleResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_effective_event_threat_detection_custom_module",
          "description": "Gets an effective Event Threat Detection custom\nmodule at the given level.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_effective_event_threat_detection_custom_module():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetEffectiveEventThreatDetectionCustomModuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_effective_event_threat_detection_custom_module(request=request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the effective Event Threat Detection custom module.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings/effectiveCustomModules/{module}``. -  ``folders/{folder}/eventThreatDetectionSettings/effectiveCustomModules/{module}``. -  ``projects/{project}/eventThreatDetectionSettings/effectiveCustomModules/{module}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.EffectiveEventThreatDetectionCustomModule: An EffectiveEventThreatDetectionCustomModule is the representation of an Event Threat Detection custom module at a specified level of the resource hierarchy: organization, folder, or project. If a custom module is inherited from a parent organization or folder, the value of the enablement_state property in EffectiveEventThreatDetectionCustomModule is set to the value that is effective in the parent, instead of INHERITED. For example, if the module is enabled in a parent organization or folder, the effective enablement_state for the module in all child folders or projects is also enabled. EffectiveEventThreatDetectionCustomModule is read-only."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.EffectiveEventThreatDetectionCustomModule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_effective_event_threat_detection_custom_modules",
          "description": "Lists all effective Event Threat Detection custom\nmodules for the given parent. This includes resident\nmodules defined at the scope of the parent along with\nmodules inherited from its ancestors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_effective_event_threat_detection_custom_modules():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListEffectiveEventThreatDetectionCustomModulesRequest(\n            parent=\"parent_value\",\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent to list custom modules for.  Its format is:  -  ``organizations/{organization}/eventThreatDetectionSettings``. -  ``folders/{folder}/eventThreatDetectionSettings``. -  ``projects/{project}/eventThreatDetectionSettings``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListEffectiveEventThreatDetectionCustomModulesAsyncPager: Response for listing EffectiveEventThreatDetectionCustomModules. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListEffectiveEventThreatDetectionCustomModulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_resource_value_configs",
          "description": "Creates a ResourceValueConfig for an organization.\nMaps user's tags to difference resource values for use\nby the attack path simulation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_batch_create_resource_value_configs():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        requests = securitycenter_v1.CreateResourceValueConfigRequest()\n        requests.parent = \"parent_value\"\n        requests.resource_value_config.resource_value = \"NONE\"\n        requests.resource_value_c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new ResourceValueConfig's parent. The parent field in the CreateResourceValueConfigRequest messages must either be empty or match this field.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "requests": {
                "type": "MutableSequence[google.cloud.securitycenter_v1.types.CreateResourceValueConfigRequest]",
                "description": "Required. The resource value configs to be created.  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.BatchCreateResourceValueConfigsResponse: Response message for BatchCreateResourceValueConfigs"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.BatchCreateResourceValueConfigsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_resource_value_config",
          "description": "Deletes a ResourceValueConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_delete_resource_value_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.DeleteResourceValueConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_resource_value_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v1.types.DeleteResourceValueConfigRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ResourceValueConfig to delete  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_resource_value_config",
          "description": "Gets a ResourceValueConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_get_resource_value_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.GetResourceValueConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_resource_value_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource value config to retrieve. Its format is ``organizations/{organization}/resourceValueConfigs/{config_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.ResourceValueConfig: A resource value configuration (RVC) is a mapping configuration of user's resources to resource values. Used in Attack path simulations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.ResourceValueConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_resource_value_configs",
          "description": "Lists all ResourceValueConfigs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_resource_value_configs():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListResourceValueConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_resource_value_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of resource value configs. Its format is ``organizations/[organization_id]``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListResourceValueConfigsAsyncPager: Response message to list resource value configs Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListResourceValueConfigsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_resource_value_config",
          "description": "Updates an existing ResourceValueConfigs with new\nrules.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_update_resource_value_config():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        resource_value_config = securitycenter_v1.ResourceValueConfig()\n        resource_value_config.resource_value = \"NONE\"\n        resource_value_config.tag_values = ['tag_values_value1', 'tag_values_value2']\n\n        request = securitycenter_v1.UpdateResourceValueConfigRequest(\n            r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource_value_config": {
                "type": "google.cloud.securitycenter_v1.types.ResourceValueConfig",
                "description": "Required. The resource value config being updated.  This corresponds to the ``resource_value_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.types.ResourceValueConfig: A resource value configuration (RVC) is a mapping configuration of user's resources to resource values. Used in Attack path simulations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource_value_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.types.ResourceValueConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_valued_resources",
          "description": "Lists the valued resources for a set of simulation\nresults and filter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_valued_resources():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListValuedResourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_valued_resources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n          ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list valued resources.  Valid formats: ``organizations/{organization}``, ``organizations/{organization}/simulations/{simulation}`` ``organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListValuedResourcesAsyncPager: Response message for listing the valued resources for a given simulation. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListValuedResourcesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_attack_paths",
          "description": "Lists the attack paths for a set of simulation\nresults or valued resources and filter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v1\n\n    async def sample_list_attack_paths():\n        # Create a client\n        client = securitycenter_v1.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v1.ListAttackPathsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_attack_paths(request=request)\n\n        # Handle the response\n        async for response in page_result:\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list attack paths.  Valid formats: ``organizations/{organization}``, ``organizations/{organization}/simulations/{simulation}`` ``organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}`` ``organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v1.services.security_center.pagers.ListAttackPathsAsyncPager: Response message for listing the attack paths for a given simulation or valued resource.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.securitycenter_v1.services.security_center.pagers.ListAttackPathsAsyncPager"
          ]
        }
      }
    ]
  }
}