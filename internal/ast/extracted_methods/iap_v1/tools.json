{
  "IdentityAwareProxyAdminService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the access control policy for an Identity-Aware Proxy\nprotected resource. Replaces any existing policy. More\ninformation about managing access via IAP can be found at:\nhttps://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.SetIamPolicyRequest(\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "SetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the access control policy for an Identity-Aware Proxy\nprotected resource. More information about managing access via\nIAP can be found at:\nhttps://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns permissions that a caller has on the Identity-Aware\nProxy protected resource. More information about managing access\nvia IAP can be found at:\nhttps://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resour",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "TestIamPermissionsRequest"
          ],
          "response_types": [
            "google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iap_settings",
          "description": "Gets the IAP settings on a particular IAP protected\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_get_iap_settings():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.GetIapSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_iap_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iap_v1.types.GetIapSett",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.IapSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_iap_settings",
          "description": "Updates the IAP settings on a particular IAP protected resource.\nIt replaces all fields unless the ``update_mask`` is set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_update_iap_settings():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        iap_settings = iap_v1.IapSettings()\n        iap_settings.name = \"name_value\"\n\n        request = iap_v1.UpdateIapSettingsRequest(\n            iap_settings=iap_settings,\n        )\n\n        # Make the request\n        response = await client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.IapSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tunnel_dest_groups",
          "description": "Lists the existing TunnelDestGroups. To group across all\nlocations, use a ``-`` as the location ID. For example:\n``/v1/projects/123/iap_tunnel/locations/-/destGroups``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_list_tunnel_dest_groups():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.ListTunnelDestGroupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tunnel_dest_groups(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Google Cloud Project ID and location. In the following format: ``projects/{project_number/id}/iap_tunnel/locations/{location}``. A ``-`` can be used for the location to group across all locations.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iap_v1.services.identity_aware_proxy_admin_service.pagers.ListTunnelDestGroupsAsyncPager: The response from ListTunnelDestGroups. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.services.identity_aware_proxy_admin_service.pagers.ListTunnelDestGroupsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_tunnel_dest_group",
          "description": "Creates a new TunnelDestGroup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_create_tunnel_dest_group():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        tunnel_dest_group = iap_v1.TunnelDestGroup()\n        tunnel_dest_group.name = \"name_value\"\n\n        request = iap_v1.CreateTunnelDestGroupRequest(\n            parent=\"parent_value\",\n            tunnel_dest_group=tunnel_dest_group,\n            tunnel_dest_group_id=\"tunnel_dest_group_id_value\",\n        )\n\n        # Make the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Google Cloud Project ID and location. In the following format: ``projects/{project_number/id}/iap_tunnel/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tunnel_dest_group": {
                "type": "google.cloud.iap_v1.types.TunnelDestGroup",
                "description": "Required. The TunnelDestGroup to create.  This corresponds to the ``tunnel_dest_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tunnel_dest_group_id": {
                "type": "str",
                "description": "Required. The ID to use for the TunnelDestGroup, which becomes the final component of the resource name.  This value must be 4-63 characters, and valid characters are ``[a-z]-``.  This corresponds to the ``tunnel_dest_group_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iap_v1.types.TunnelDestGroup: A TunnelDestGroup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "tunnel_dest_group",
              "tunnel_dest_group_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.TunnelDestGroup"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_tunnel_dest_group",
          "description": "Retrieves an existing TunnelDestGroup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_get_tunnel_dest_group():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.GetTunnelDestGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_tunnel_dest_group(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iap_v1.types.GetTunnelDestGroupR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the TunnelDestGroup to be fetched. In the following format: ``projects/{project_number/id}/iap_tunnel/locations/{location}/destGroups/{dest_group}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iap_v1.types.TunnelDestGroup: A TunnelDestGroup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.TunnelDestGroup"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_tunnel_dest_group",
          "description": "Deletes a TunnelDestGroup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_delete_tunnel_dest_group():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.DeleteTunnelDestGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_tunnel_dest_group(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.iap_v1.types.DeleteTunnelDestGroupRequest, dict]]):\n        The request object. The request to Delete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the TunnelDestGroup to delete. In the following format: ``projects/{project_number/id}/iap_tunnel/locations/{location}/destGroups/{dest_group}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_tunnel_dest_group",
          "description": "Updates a TunnelDestGroup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_update_tunnel_dest_group():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        tunnel_dest_group = iap_v1.TunnelDestGroup()\n        tunnel_dest_group.name = \"name_value\"\n\n        request = iap_v1.UpdateTunnelDestGroupRequest(\n            tunnel_dest_group=tunnel_dest_group,\n        )\n\n        # Make the request\n        response = await client.update_tunnel_dest_group(request=request)\n\n        # Handle th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "tunnel_dest_group": {
                "type": "google.cloud.iap_v1.types.TunnelDestGroup",
                "description": "Required. The new values for the TunnelDestGroup.  This corresponds to the ``tunnel_dest_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "A field mask that specifies which IAP settings to update. If omitted, then all of the settings are updated. See https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iap_v1.types.TunnelDestGroup: A TunnelDestGroup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "tunnel_dest_group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.TunnelDestGroup"
          ]
        }
      }
    ]
  },
  "IdentityAwareProxyOAuthService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_brands",
          "description": "Lists the existing brands for the project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_list_brands():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.ListBrandsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.list_brands(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iap_v1.types.ListBrandsRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.ListBrandsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_brand",
          "description": "Constructs a new OAuth brand for the project if one\ndoes not exist. The created brand is \"internal only\",\nmeaning that OAuth clients created under it only accept\nrequests from users who belong to the same Google\nWorkspace organization as the project. The brand is\ncreated in an un-reviewed status. NOTE: The \"internal\nonly\" status can be manually changed in the Google Cloud\nConsole. Requires that a brand does not already exist\nfor the project, and that the specified support email is\nowned by the caller.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_create_brand():\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.Brand"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_brand",
          "description": "Retrieves the OAuth brand of the project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_get_brand():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.GetBrandRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_brand(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iap_v1.types.GetBrandRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.Brand"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_identity_aware_proxy_client",
          "description": "Creates an Identity Aware Proxy (IAP) OAuth client.\nThe client is owned by IAP. Requires that the brand for\nthe project exists and that it is set for internal-only\nuse.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_create_identity_aware_proxy_client():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.CreateIdentityAwareProxyClientRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_identity",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.IdentityAwareProxyClient"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_identity_aware_proxy_clients",
          "description": "Lists the existing clients for the brand.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_list_identity_aware_proxy_clients():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.ListIdentityAwareProxyClientsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_identity_aware_proxy_clients(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.services.identity_aware_proxy_o_auth_service.pagers.ListIdentityAwareProxyClientsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_identity_aware_proxy_client",
          "description": "Retrieves an Identity Aware Proxy (IAP) OAuth client.\nRequires that the client is owned by IAP.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_get_identity_aware_proxy_client():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.GetIdentityAwareProxyClientRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_identity_aware_proxy_client(request=request)\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.IdentityAwareProxyClient"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_identity_aware_proxy_client_secret",
          "description": "Resets an Identity Aware Proxy (IAP) OAuth client\nsecret. Useful if the secret was compromised. Requires\nthat the client is owned by IAP.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_reset_identity_aware_proxy_client_secret():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.ResetIdentityAwareProxyClientSecretRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.reset_identity_aware_proxy_client_secre",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iap_v1.types.IdentityAwareProxyClient"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_identity_aware_proxy_client",
          "description": "Deletes an Identity Aware Proxy (IAP) OAuth client.\nUseful for removing obsolete clients, managing the\nnumber of clients in a given project, and cleaning up\nafter tests. Requires that the client is owned by IAP.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iap_v1\n\n    async def sample_delete_identity_aware_proxy_client():\n        # Create a client\n        client = iap_v1.IdentityAwareProxyOAuthServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iap_v1.DeleteIdentityAwareProxyClientRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      }
    ]
  }
}