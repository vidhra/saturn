{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-shell/google/cloud/shell_v1/types/cloudshell.py": [
    {
      "type": "function",
      "name": "GetEnvironmentRequest",
      "description": "Request message for\n[GetEnvironment][google.cloud.shell.v1.CloudShellService.GetEnvironment].\n\nAttributes:\n    name (str):\n        Required. Name of the requested resource, for example\n        ``users/me/environments/default`` or\n        ``users/someone@example.com/environments/default``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the requested resource, for example ``users/me/environments/default`` or ``users/someone@example.com/environments/default``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartEnvironmentRequest",
      "description": "Request message for\n[StartEnvironment][google.cloud.shell.v1.CloudShellService.StartEnvironment].\n\nAttributes:\n    name (str):\n        Name of the resource that should be started, for example\n        ``users/me/environments/default`` or\n        ``users/someone@example.com/environments/default``.\n    access_token (str):\n        The initial access token passed to the\n        environment. If this is present and valid, the\n        environment will be pre-authenticated with\n        gcloud so that the user can run gcloud commands\n        in Cloud Shell without having to log in. This\n        code can be updated later by calling\n        AuthorizeEnvironment.\n    public_keys (MutableSequence[str]):\n        Public keys that should be added to the\n        environment before it is started.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the resource that should be started, for example ``users/me/environments/default`` or ``users/someone@example.com/environments/default``.",
            "type": "string"
          },
          "access_token": {
            "description": "The initial access token passed to the environment. If this is present and valid, the environment will be pre-authenticated with gcloud so that the user can run gcloud commands in Cloud Shell without having to log in. This code can be updated later by calling AuthorizeEnvironment.",
            "type": "string"
          },
          "public_keys": {
            "description": "Public keys that should be added to the environment before it is started.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "AuthorizeEnvironmentRequest",
      "description": "Request message for\n[AuthorizeEnvironment][google.cloud.shell.v1.CloudShellService.AuthorizeEnvironment].\n\nAttributes:\n    name (str):\n        Name of the resource that should receive the credentials,\n        for example ``users/me/environments/default`` or\n        ``users/someone@example.com/environments/default``.\n    access_token (str):\n        The OAuth access token that should be sent to\n        the environment.\n    id_token (str):\n        The OAuth ID token that should be sent to the\n        environment.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time when the credentials expire. If not\n        set, defaults to one hour from when the server\n        received the request.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the resource that should receive the credentials, for example ``users/me/environments/default`` or ``users/someone@example.com/environments/default``.",
            "type": "string"
          },
          "access_token": {
            "description": "The OAuth access token that should be sent to the environment.",
            "type": "string"
          },
          "id_token": {
            "description": "The OAuth ID token that should be sent to the environment.",
            "type": "string"
          },
          "expire_time": {
            "description": "The time when the credentials expire. If not set, defaults to one hour from when the server received the request.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "AddPublicKeyRequest",
      "description": "Request message for\n[AddPublicKey][google.cloud.shell.v1.CloudShellService.AddPublicKey].\n\nAttributes:\n    environment (str):\n        Environment this key should be added to, e.g.\n        ``users/me/environments/default``.\n    key (str):\n        Key that should be added to the environment. Supported\n        formats are ``ssh-dss`` (see RFC4253), ``ssh-rsa`` (see\n        RFC4253), ``ecdsa-sha2-nistp256`` (see RFC5656),\n        ``ecdsa-sha2-nistp384`` (see RFC5656) and\n        ``ecdsa-sha2-nistp521`` (see RFC5656). It should be\n        structured as <format> <content>, where <content> part is\n        encoded with Base64.",
      "parameters": {
        "type": "object",
        "properties": {
          "environment": {
            "description": "Environment this key should be added to, e.g. ``users/me/environments/default``.",
            "type": "string"
          },
          "key": {
            "description": "Key that should be added to the environment. Supported formats are ``ssh-dss`` (see RFC4253), ``ssh-rsa`` (see RFC4253), ``ecdsa-sha2-nistp256`` (see RFC5656), ``ecdsa-sha2-nistp384`` (see RFC5656) and ``ecdsa-sha2-nistp521`` (see RFC5656). It should be structured as <format> <content>, where <content> part is encoded with Base64.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "RemovePublicKeyRequest",
      "description": "Request message for\n[RemovePublicKey][google.cloud.shell.v1.CloudShellService.RemovePublicKey].\n\nAttributes:\n    environment (str):\n        Environment this key should be removed from, e.g.\n        ``users/me/environments/default``.\n    key (str):\n        Key that should be removed from the\n        environment.",
      "parameters": {
        "type": "object",
        "properties": {
          "environment": {
            "description": "Environment this key should be removed from, e.g. ``users/me/environments/default``.",
            "type": "string"
          },
          "key": {
            "description": "Key that should be removed from the environment.",
            "type": "string"
          }
        }
      }
    }
  ]
}