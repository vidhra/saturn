{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/session_templates.py": [
    {
      "type": "function",
      "name": "CreateSessionTemplateRequest",
      "description": "A request to create a session template.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this\n        session template will be created.\n    session_template (google.cloud.dataproc_v1.types.SessionTemplate):\n        Required. The session template to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this session template will be created.",
            "type": "string"
          },
          "session_template": {
            "description": "Required. The session template to create.",
            "reference": "google.cloud.dataproc_v1.types.SessionTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The resource name of the session template.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Brief description of the template.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the template was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "jupyter_session": {
                  "description": "Optional. Jupyter session config.  This field is a member of `oneof`_ ``session_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.JupyterConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kernel": {
                        "description": "Optional. Kernel",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.JupyterConfig.Kernel"
                      },
                      "display_name": {
                        "description": "Optional. Display name, shown in the Jupyter kernelspec card.",
                        "type": "string"
                      }
                    }
                  }
                },
                "spark_connect_session": {
                  "description": "Optional. Spark Connect session config.  This field is a member of `oneof`_ ``session_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.SparkConnectConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "creator": {
                  "description": "Output only. The email address of the user who created the template.",
                  "type": "string",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels to associate with sessions created using this template. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** can be empty, but, if present, must contain 1 to 63 characters and conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a session.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "runtime_config": {
                  "description": "Optional. Runtime configuration for session execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.RuntimeConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kubernetes": {
                        "description": "Kubernetes runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.KubernetesConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "gateway_service_mesh": {
                              "description": "Kubernetes Gateway API service mesh configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "http_route": {
                                    "description": "Required. Name of the Gateway API HTTPRoute.",
                                    "type": "string"
                                  },
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.",
                                    "type": "string"
                                  },
                                  "route_update_wait_time": {
                                    "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "stable_cutback_duration": {
                                    "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.",
                                    "type": "string"
                                  },
                                  "route_destinations": {
                                    "description": "Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh.RouteDestinations",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "destination_ids": {
                                          "description": "Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid entries include the associated entities IDs configured in the Target resource and \"@self\" to include the Target cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "propagate_service": {
                                          "description": "Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be set to true if destinations are specified.",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "destination_ids"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "http_route",
                                  "service",
                                  "deployment"
                                ]
                              }
                            },
                            "service_networking": {
                              "description": "Kubernetes Service networking configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.ServiceNetworking",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.",
                                    "type": "string"
                                  },
                                  "disable_pod_overprovisioning": {
                                    "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.",
                                    "type": "boolean"
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment resource. This label must already be present in the Deployment.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "service",
                                  "deployment"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "cloud_run": {
                        "description": "Cloud Run runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.CloudRunConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "disabled": {
                              "description": "Whether Cloud Run addon is enabled for this cluster.",
                              "type": "boolean"
                            },
                            "load_balancer_type": {
                              "description": "Which load balancer type is installed for Cloud Run.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.CloudRunConfig.LoadBalancerType"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "environment_config": {
                  "description": "Optional. Environment configuration for session execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.EnvironmentConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "execution_config": {
                        "description": "Optional. Execution configuration for a workload.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ExecutionConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "usages": {
                              "description": "Required. Usages when this configuration should be applied.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.deploy_v1.types.ExecutionConfig.ExecutionEnvironmentUsage"
                              }
                            },
                            "default_pool": {
                              "description": "Optional. Use default Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.DefaultPool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "private_pool": {
                              "description": "Optional. Use private Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.PrivatePool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "worker_pool": {
                                    "description": "Required. Resource name of the Cloud Build worker pool to use. The format is ``projects/{project}/locations/{location}/workerPools/{pool}``.",
                                    "type": "string"
                                  },
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "worker_pool"
                                ]
                              }
                            },
                            "worker_pool": {
                              "description": "Optional. The resource name of the ``WorkerPool``, with the format ``projects/{project}/locations/{location}/workerPools/{worker_pool}``. If this optional field is unspecified, the default Cloud Build pool will be used.",
                              "type": "string"
                            },
                            "service_account": {
                              "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) is used.",
                              "type": "string"
                            },
                            "artifact_storage": {
                              "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                              "type": "string"
                            },
                            "execution_timeout": {
                              "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "verbose": {
                              "description": "Optional. If true, additional logging will be enabled when running builds in this execution environment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "usages"
                          ]
                        }
                      },
                      "peripherals_config": {
                        "description": "Optional. Peripherals configuration that workload has access to.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.PeripheralsConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "metastore_service": {
                              "description": "Optional. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[region]/services/[service_id]``",
                              "type": "string"
                            },
                            "spark_history_server_config": {
                              "description": "Optional. The Spark History Server configuration for the workload.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.SparkHistoryServerConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "dataproc_cluster": {
                                    "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the connection.  Example:  -  ``projects/[project_id]/regions/[region]/clusters/[cluster_name]``",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "update_time": {
                  "description": "Output only. The time the template was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "uuid": {
                  "description": "Output only. A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.",
                  "type": "string",
                  "output_only": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "parent",
          "session_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSessionTemplateRequest",
      "description": "A request to update a session template.\n\nAttributes:\n    session_template (google.cloud.dataproc_v1.types.SessionTemplate):\n        Required. The updated session template.",
      "parameters": {
        "type": "object",
        "properties": {
          "session_template": {
            "description": "Required. The updated session template.",
            "reference": "google.cloud.dataproc_v1.types.SessionTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The resource name of the session template.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Brief description of the template.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the template was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "jupyter_session": {
                  "description": "Optional. Jupyter session config.  This field is a member of `oneof`_ ``session_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.JupyterConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kernel": {
                        "description": "Optional. Kernel",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.JupyterConfig.Kernel"
                      },
                      "display_name": {
                        "description": "Optional. Display name, shown in the Jupyter kernelspec card.",
                        "type": "string"
                      }
                    }
                  }
                },
                "spark_connect_session": {
                  "description": "Optional. Spark Connect session config.  This field is a member of `oneof`_ ``session_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.SparkConnectConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "creator": {
                  "description": "Output only. The email address of the user who created the template.",
                  "type": "string",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels to associate with sessions created using this template. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** can be empty, but, if present, must contain 1 to 63 characters and conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a session.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "runtime_config": {
                  "description": "Optional. Runtime configuration for session execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.RuntimeConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kubernetes": {
                        "description": "Kubernetes runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.KubernetesConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "gateway_service_mesh": {
                              "description": "Kubernetes Gateway API service mesh configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "http_route": {
                                    "description": "Required. Name of the Gateway API HTTPRoute.",
                                    "type": "string"
                                  },
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.",
                                    "type": "string"
                                  },
                                  "route_update_wait_time": {
                                    "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "stable_cutback_duration": {
                                    "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.",
                                    "type": "string"
                                  },
                                  "route_destinations": {
                                    "description": "Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh.RouteDestinations",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "destination_ids": {
                                          "description": "Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid entries include the associated entities IDs configured in the Target resource and \"@self\" to include the Target cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "propagate_service": {
                                          "description": "Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be set to true if destinations are specified.",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "destination_ids"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "http_route",
                                  "service",
                                  "deployment"
                                ]
                              }
                            },
                            "service_networking": {
                              "description": "Kubernetes Service networking configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.ServiceNetworking",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.",
                                    "type": "string"
                                  },
                                  "disable_pod_overprovisioning": {
                                    "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.",
                                    "type": "boolean"
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment resource. This label must already be present in the Deployment.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "service",
                                  "deployment"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "cloud_run": {
                        "description": "Cloud Run runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.CloudRunConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "disabled": {
                              "description": "Whether Cloud Run addon is enabled for this cluster.",
                              "type": "boolean"
                            },
                            "load_balancer_type": {
                              "description": "Which load balancer type is installed for Cloud Run.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.CloudRunConfig.LoadBalancerType"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "environment_config": {
                  "description": "Optional. Environment configuration for session execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.EnvironmentConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "execution_config": {
                        "description": "Optional. Execution configuration for a workload.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ExecutionConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "usages": {
                              "description": "Required. Usages when this configuration should be applied.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.deploy_v1.types.ExecutionConfig.ExecutionEnvironmentUsage"
                              }
                            },
                            "default_pool": {
                              "description": "Optional. Use default Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.DefaultPool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "private_pool": {
                              "description": "Optional. Use private Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.PrivatePool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "worker_pool": {
                                    "description": "Required. Resource name of the Cloud Build worker pool to use. The format is ``projects/{project}/locations/{location}/workerPools/{pool}``.",
                                    "type": "string"
                                  },
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "worker_pool"
                                ]
                              }
                            },
                            "worker_pool": {
                              "description": "Optional. The resource name of the ``WorkerPool``, with the format ``projects/{project}/locations/{location}/workerPools/{worker_pool}``. If this optional field is unspecified, the default Cloud Build pool will be used.",
                              "type": "string"
                            },
                            "service_account": {
                              "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) is used.",
                              "type": "string"
                            },
                            "artifact_storage": {
                              "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                              "type": "string"
                            },
                            "execution_timeout": {
                              "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "verbose": {
                              "description": "Optional. If true, additional logging will be enabled when running builds in this execution environment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "usages"
                          ]
                        }
                      },
                      "peripherals_config": {
                        "description": "Optional. Peripherals configuration that workload has access to.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.PeripheralsConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "metastore_service": {
                              "description": "Optional. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[region]/services/[service_id]``",
                              "type": "string"
                            },
                            "spark_history_server_config": {
                              "description": "Optional. The Spark History Server configuration for the workload.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.SparkHistoryServerConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "dataproc_cluster": {
                                    "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the connection.  Example:  -  ``projects/[project_id]/regions/[region]/clusters/[cluster_name]``",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "update_time": {
                  "description": "Output only. The time the template was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "uuid": {
                  "description": "Output only. A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.",
                  "type": "string",
                  "output_only": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "session_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSessionTemplateRequest",
      "description": "A request to get the resource representation for a session\ntemplate.\n\nAttributes:\n    name (str):\n        Required. The name of the session template to\n        retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the session template to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSessionTemplatesRequest",
      "description": "A request to list session templates in a project.\n\nAttributes:\n    parent (str):\n        Required. The parent that owns this\n        collection of session templates.\n    page_size (int):\n        Optional. The maximum number of sessions to\n        return in each response. The service may return\n        fewer than this value.\n    page_token (str):\n        Optional. A page token received from a previous\n        ``ListSessions`` call. Provide this token to retrieve the\n        subsequent page.\n    filter (str):\n        Optional. A filter for the session templates to return in\n        the response. Filters are case sensitive and have the\n        following syntax:\n\n        [field = value] AND [field [= value]] ...",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent that owns this collection of session templates.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of sessions to return in each response. The service may return fewer than this value.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token received from a previous ``ListSessions`` call. Provide this token to retrieve the subsequent page.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter for the session templates to return in the response. Filters are case sensitive and have the following syntax:  [field = value] AND [field [= value]] ...",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteSessionTemplateRequest",
      "description": "A request to delete a session template.\n\nAttributes:\n    name (str):\n        Required. The name of the session template\n        resource to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the session template resource to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/autoscaling_policies.py": [
    {
      "type": "function",
      "name": "CreateAutoscalingPolicyRequest",
      "description": "A request to create an autoscaling policy.\n\nAttributes:\n    parent (str):\n        Required. The \"resource name\" of the region or location, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.autoscalingPolicies.create``, the\n           resource name of the region has the following format:\n           ``projects/{project_id}/regions/{region}``\n\n        -  For ``projects.locations.autoscalingPolicies.create``,\n           the resource name of the location has the following\n           format: ``projects/{project_id}/locations/{location}``\n    policy (google.cloud.dataproc_v1.types.AutoscalingPolicy):\n        Required. The autoscaling policy to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.autoscalingPolicies.create``, the resource name of the region has the following format: ``projects/{project_id}/regions/{region}``  -  For ``projects.locations.autoscalingPolicies.create``, the resource name of the location has the following format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "policy": {
            "description": "Required. The autoscaling policy to create.",
            "reference": "google.cloud.dataproc_v1.types.AutoscalingPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "cool_down_period_sec": {
                  "description": "The number of seconds that your application takes to initialize on a VM instance. This is referred to as the `initialization period </compute/docs/autoscaler#cool_down_period>`__. Specifying an accurate initialization period improves autoscaler decisions. For example, when scaling out, the autoscaler ignores data from VMs that are still initializing because those VMs might not yet represent normal usage of your application. The default initialization period is 60 seconds. Initialization periods might vary because of numerous factors. We recommend that you test how long your application takes to initialize. To do this, create a VM and time your application's startup process.  This field is a member of `oneof`_ ``_cool_down_period_sec``.",
                  "type": "integer"
                },
                "cpu_utilization": {
                  "description": "Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.  This field is a member of `oneof`_ ``_cpu_utilization``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyCpuUtilization",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "predictive_method": {
                        "description": "Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: \\* NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. \\* OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand. Check the PredictiveMethod enum for the list of possible values.  This field is a member of `oneof`_ ``_predictive_method``.",
                        "type": "string"
                      },
                      "utilization_target": {
                        "description": "The target CPU utilization that the autoscaler maintains. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales in the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales out until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.  This field is a member of `oneof`_ ``_utilization_target``.",
                        "type": "number"
                      }
                    }
                  }
                },
                "custom_metric_utilizations": {
                  "description": "Configuration parameters of autoscaling based on a custom metric.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.compute_v1.types.AutoscalingPolicyCustomMetricUtilization",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "description": "A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data. For the filter to be valid for autoscaling purposes, the following rules apply: - You can only use the AND operator for joining selectors. - You can only use direct equality comparison operator (=) without any functions for each selector. - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels. If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a *per-group metric* for the purpose of autoscaling. If not specified, the type defaults to gce_instance. Try to provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.  This field is a member of `oneof`_ ``_filter``.",
                          "type": "string"
                        },
                        "metric": {
                          "description": "The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values. The metric must have a value type of INT64 or DOUBLE.  This field is a member of `oneof`_ ``_metric``.",
                          "type": "string"
                        },
                        "single_instance_assignment": {
                          "description": "If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler keeps the number of instances proportional to the value of this metric. The metric itself does not change value due to group resizing. A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances. A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.  This field is a member of `oneof`_ ``_single_instance_assignment``.",
                          "type": "number"
                        },
                        "utilization_target": {
                          "description": "The target value of the metric that autoscaler maintains. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric. For example, a good metric to use as a utilization_target is https://www.googleapis.com/compute/v1/instance/network/received_bytes_count. The autoscaler works to keep this value constant for each of the instances.  This field is a member of `oneof`_ ``_utilization_target``.",
                          "type": "number"
                        },
                        "utilization_target_type": {
                          "description": "Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. Check the UtilizationTargetType enum for the list of possible values.  This field is a member of `oneof`_ ``_utilization_target_type``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "load_balancing_utilization": {
                  "description": "Configuration parameters of autoscaling based on load balancer.  This field is a member of `oneof`_ ``_load_balancing_utilization``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyLoadBalancingUtilization",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "utilization_target": {
                        "description": "Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.  This field is a member of `oneof`_ ``_utilization_target``.",
                        "type": "number"
                      }
                    }
                  }
                },
                "max_num_replicas": {
                  "description": "The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas.  This field is a member of `oneof`_ ``_max_num_replicas``.",
                  "type": "integer"
                },
                "min_num_replicas": {
                  "description": "The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed.  This field is a member of `oneof`_ ``_min_num_replicas``.",
                  "type": "integer"
                },
                "mode": {
                  "description": "Defines the operating mode for this policy. The following modes are available: - OFF: Disables the autoscaler but maintains its configuration. - ONLY_SCALE_OUT: Restricts the autoscaler to add VM instances only. - ON: Enables all autoscaler activities according to its policy. For more information, see \"Turning off or restricting an autoscaler\" Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                  "type": "string"
                },
                "scale_in_control": {
                  "description": "This field is a member of `oneof`_ ``_scale_in_control``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyScaleInControl",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_scaled_in_replicas": {
                        "description": "Maximum allowed number (or %) of VMs that can be deducted from the peak recommendation during the window autoscaler looks at when computing recommendations. Possibly all these VMs can be deleted at once so user service needs to be prepared to lose that many VMs in one step.  This field is a member of `oneof`_ ``_max_scaled_in_replicas``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.FixedOrPercent",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "fixed": {
                              "description": "Specifies a fixed value.  This field is a member of `oneof`_ ``mode``.",
                              "type": "integer"
                            },
                            "percent": {
                              "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.  This field is a member of `oneof`_ ``mode``.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "time_window_sec": {
                        "description": "How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above.  This field is a member of `oneof`_ ``_time_window_sec``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "scaling_schedules": {
                  "description": "Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.compute_v1.types.AutoscalingPolicyScalingSchedule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "description": "A description of a scaling schedule.  This field is a member of `oneof`_ ``_description``.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "A boolean value that specifies whether a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect. This field is optional, and its value is false by default.  This field is a member of `oneof`_ ``_disabled``.",
                          "type": "boolean"
                        },
                        "duration_sec": {
                          "description": "The duration of time intervals, in seconds, for which this scaling schedule is to run. The minimum allowed value is 300. This field is required.  This field is a member of `oneof`_ ``_duration_sec``.",
                          "type": "integer"
                        },
                        "min_required_replicas": {
                          "description": "The minimum number of VM instances that the autoscaler will recommend in time intervals starting according to schedule. This field is required.  This field is a member of `oneof`_ ``_min_required_replicas``.",
                          "type": "integer"
                        },
                        "schedule": {
                          "description": "The start timestamps of time intervals when this scaling schedule is to provide a scaling signal. This field uses the extended cron format (with an optional year field). The expression can describe a single timestamp if the optional year is set, in which case the scaling schedule runs once. The schedule is interpreted with respect to time_zone. This field is required. Note: These timestamps only describe when autoscaler starts providing the scaling signal. The VMs need additional time to become serving.  This field is a member of `oneof`_ ``_schedule``.",
                          "type": "string"
                        },
                        "time_zone": {
                          "description": "The time zone to use when interpreting the schedule. The value of this field must be a time zone name from the tz database: https://en.wikipedia.org/wiki/Tz_database. This field is assigned a default value of \"UTC\" if left empty.  This field is a member of `oneof`_ ``_time_zone``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetAutoscalingPolicyRequest",
      "description": "A request to fetch an autoscaling policy.\n\nAttributes:\n    name (str):\n        Required. The \"resource name\" of the autoscaling policy, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.autoscalingPolicies.get``, the\n           resource name of the policy has the following format:\n           ``projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}``\n\n        -  For ``projects.locations.autoscalingPolicies.get``, the\n           resource name of the policy has the following format:\n           ``projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.autoscalingPolicies.get``, the resource name of the policy has the following format: ``projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}``  -  For ``projects.locations.autoscalingPolicies.get``, the resource name of the policy has the following format: ``projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateAutoscalingPolicyRequest",
      "description": "A request to update an autoscaling policy.\n\nAttributes:\n    policy (google.cloud.dataproc_v1.types.AutoscalingPolicy):\n        Required. The updated autoscaling policy.",
      "parameters": {
        "type": "object",
        "properties": {
          "policy": {
            "description": "Required. The updated autoscaling policy.",
            "reference": "google.cloud.dataproc_v1.types.AutoscalingPolicy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "cool_down_period_sec": {
                  "description": "The number of seconds that your application takes to initialize on a VM instance. This is referred to as the `initialization period </compute/docs/autoscaler#cool_down_period>`__. Specifying an accurate initialization period improves autoscaler decisions. For example, when scaling out, the autoscaler ignores data from VMs that are still initializing because those VMs might not yet represent normal usage of your application. The default initialization period is 60 seconds. Initialization periods might vary because of numerous factors. We recommend that you test how long your application takes to initialize. To do this, create a VM and time your application's startup process.  This field is a member of `oneof`_ ``_cool_down_period_sec``.",
                  "type": "integer"
                },
                "cpu_utilization": {
                  "description": "Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.  This field is a member of `oneof`_ ``_cpu_utilization``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyCpuUtilization",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "predictive_method": {
                        "description": "Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: \\* NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. \\* OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand. Check the PredictiveMethod enum for the list of possible values.  This field is a member of `oneof`_ ``_predictive_method``.",
                        "type": "string"
                      },
                      "utilization_target": {
                        "description": "The target CPU utilization that the autoscaler maintains. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales in the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales out until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.  This field is a member of `oneof`_ ``_utilization_target``.",
                        "type": "number"
                      }
                    }
                  }
                },
                "custom_metric_utilizations": {
                  "description": "Configuration parameters of autoscaling based on a custom metric.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.compute_v1.types.AutoscalingPolicyCustomMetricUtilization",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "description": "A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data. For the filter to be valid for autoscaling purposes, the following rules apply: - You can only use the AND operator for joining selectors. - You can only use direct equality comparison operator (=) without any functions for each selector. - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels. If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a *per-group metric* for the purpose of autoscaling. If not specified, the type defaults to gce_instance. Try to provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.  This field is a member of `oneof`_ ``_filter``.",
                          "type": "string"
                        },
                        "metric": {
                          "description": "The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values. The metric must have a value type of INT64 or DOUBLE.  This field is a member of `oneof`_ ``_metric``.",
                          "type": "string"
                        },
                        "single_instance_assignment": {
                          "description": "If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler keeps the number of instances proportional to the value of this metric. The metric itself does not change value due to group resizing. A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances. A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.  This field is a member of `oneof`_ ``_single_instance_assignment``.",
                          "type": "number"
                        },
                        "utilization_target": {
                          "description": "The target value of the metric that autoscaler maintains. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric. For example, a good metric to use as a utilization_target is https://www.googleapis.com/compute/v1/instance/network/received_bytes_count. The autoscaler works to keep this value constant for each of the instances.  This field is a member of `oneof`_ ``_utilization_target``.",
                          "type": "number"
                        },
                        "utilization_target_type": {
                          "description": "Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. Check the UtilizationTargetType enum for the list of possible values.  This field is a member of `oneof`_ ``_utilization_target_type``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "load_balancing_utilization": {
                  "description": "Configuration parameters of autoscaling based on load balancer.  This field is a member of `oneof`_ ``_load_balancing_utilization``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyLoadBalancingUtilization",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "utilization_target": {
                        "description": "Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.  This field is a member of `oneof`_ ``_utilization_target``.",
                        "type": "number"
                      }
                    }
                  }
                },
                "max_num_replicas": {
                  "description": "The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas.  This field is a member of `oneof`_ ``_max_num_replicas``.",
                  "type": "integer"
                },
                "min_num_replicas": {
                  "description": "The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed.  This field is a member of `oneof`_ ``_min_num_replicas``.",
                  "type": "integer"
                },
                "mode": {
                  "description": "Defines the operating mode for this policy. The following modes are available: - OFF: Disables the autoscaler but maintains its configuration. - ONLY_SCALE_OUT: Restricts the autoscaler to add VM instances only. - ON: Enables all autoscaler activities according to its policy. For more information, see \"Turning off or restricting an autoscaler\" Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                  "type": "string"
                },
                "scale_in_control": {
                  "description": "This field is a member of `oneof`_ ``_scale_in_control``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.AutoscalingPolicyScaleInControl",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_scaled_in_replicas": {
                        "description": "Maximum allowed number (or %) of VMs that can be deducted from the peak recommendation during the window autoscaler looks at when computing recommendations. Possibly all these VMs can be deleted at once so user service needs to be prepared to lose that many VMs in one step.  This field is a member of `oneof`_ ``_max_scaled_in_replicas``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.FixedOrPercent",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "fixed": {
                              "description": "Specifies a fixed value.  This field is a member of `oneof`_ ``mode``.",
                              "type": "integer"
                            },
                            "percent": {
                              "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.  This field is a member of `oneof`_ ``mode``.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "time_window_sec": {
                        "description": "How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above.  This field is a member of `oneof`_ ``_time_window_sec``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "scaling_schedules": {
                  "description": "Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.compute_v1.types.AutoscalingPolicyScalingSchedule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "description": "A description of a scaling schedule.  This field is a member of `oneof`_ ``_description``.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "A boolean value that specifies whether a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect. This field is optional, and its value is false by default.  This field is a member of `oneof`_ ``_disabled``.",
                          "type": "boolean"
                        },
                        "duration_sec": {
                          "description": "The duration of time intervals, in seconds, for which this scaling schedule is to run. The minimum allowed value is 300. This field is required.  This field is a member of `oneof`_ ``_duration_sec``.",
                          "type": "integer"
                        },
                        "min_required_replicas": {
                          "description": "The minimum number of VM instances that the autoscaler will recommend in time intervals starting according to schedule. This field is required.  This field is a member of `oneof`_ ``_min_required_replicas``.",
                          "type": "integer"
                        },
                        "schedule": {
                          "description": "The start timestamps of time intervals when this scaling schedule is to provide a scaling signal. This field uses the extended cron format (with an optional year field). The expression can describe a single timestamp if the optional year is set, in which case the scaling schedule runs once. The schedule is interpreted with respect to time_zone. This field is required. Note: These timestamps only describe when autoscaler starts providing the scaling signal. The VMs need additional time to become serving.  This field is a member of `oneof`_ ``_schedule``.",
                          "type": "string"
                        },
                        "time_zone": {
                          "description": "The time zone to use when interpreting the schedule. The value of this field must be a time zone name from the tz database: https://en.wikipedia.org/wiki/Tz_database. This field is assigned a default value of \"UTC\" if left empty.  This field is a member of `oneof`_ ``_time_zone``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteAutoscalingPolicyRequest",
      "description": "A request to delete an autoscaling policy.\n\nAutoscaling policies in use by one or more clusters will not be\ndeleted.\n\nAttributes:\n    name (str):\n        Required. The \"resource name\" of the autoscaling policy, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.autoscalingPolicies.delete``, the\n           resource name of the policy has the following format:\n           ``projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}``\n\n        -  For ``projects.locations.autoscalingPolicies.delete``,\n           the resource name of the policy has the following format:\n           ``projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.autoscalingPolicies.delete``, the resource name of the policy has the following format: ``projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}``  -  For ``projects.locations.autoscalingPolicies.delete``, the resource name of the policy has the following format: ``projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListAutoscalingPoliciesRequest",
      "description": "A request to list autoscaling policies in a project.\n\nAttributes:\n    parent (str):\n        Required. The \"resource name\" of the region or location, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.autoscalingPolicies.list``, the\n           resource name of the region has the following format:\n           ``projects/{project_id}/regions/{region}``\n\n        -  For ``projects.locations.autoscalingPolicies.list``, the\n           resource name of the location has the following format:\n           ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Optional. The maximum number of results to\n        return in each response. Must be less than or\n        equal to 1000. Defaults to 100.\n    page_token (str):\n        Optional. The page token, returned by a\n        previous call, to request the next page of\n        results.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.autoscalingPolicies.list``, the resource name of the region has the following format: ``projects/{project_id}/regions/{region}``  -  For ``projects.locations.autoscalingPolicies.list``, the resource name of the location has the following format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of results to return in each response. Must be less than or equal to 1000. Defaults to 100.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/sessions.py": [
    {
      "type": "function",
      "name": "CreateSessionRequest",
      "description": "A request to create a session.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this\n        session will be created.\n    session (google.cloud.dataproc_v1.types.Session):\n        Required. The interactive session to create.\n    session_id (str):\n        Required. The ID to use for the session, which becomes the\n        final component of the session's resource name.\n\n        This value must be 4-63 characters. Valid characters are\n        /[a-z][0-9]-/.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        service receives two\n        `CreateSessionRequests <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest>`__\\ s\n        with the same ID, the second request is ignored, and the\n        first [Session][google.cloud.dataproc.v1.Session] is created\n        and stored in the backend.\n\n        Recommendation: Set this value to a\n        `UUID <https://en.wikipedia.org/wiki",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this session will be created.",
            "type": "string"
          },
          "session": {
            "description": "Required. The interactive session to create.",
            "reference": "google.cloud.dataproc_v1.types.Session",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}",
                  "type": "string",
                  "output_only": true
                },
                "user_id": {
                  "description": "Output only. Email of user running the session.",
                  "type": "string",
                  "output_only": true
                },
                "create_time": {
                  "description": "Output only. Session start time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. State of Session",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.State",
                  "output_only": true
                }
              }
            }
          },
          "session_id": {
            "description": "Required. The ID to use for the session, which becomes the final component of the session's resource name.  This value must be 4-63 characters. Valid characters are /[a-z][0-9]-/.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the service receives two `CreateSessionRequests <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest>`__\\ s with the same ID, the second request is ignored, and the first [Session][google.cloud.dataproc.v1.Session] is created and stored in the backend.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "session",
          "session_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSessionRequest",
      "description": "A request to get the resource representation for a session.\n\nAttributes:\n    name (str):\n        Required. The name of the session to\n        retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the session to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSessionsRequest",
      "description": "A request to list sessions in a project.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this\n        collection of sessions.\n    page_size (int):\n        Optional. The maximum number of sessions to\n        return in each response. The service may return\n        fewer than this value.\n    page_token (str):\n        Optional. A page token received from a previous\n        ``ListSessions`` call. Provide this token to retrieve the\n        subsequent page.\n    filter (str):\n        Optional. A filter for the sessions to return in the\n        response.\n\n        A filter is a logical expression constraining the values of\n        various fields in each session resource. Filters are case\n        sensitive, and may contain multiple clauses combined with\n        logical operators (AND, OR). Supported fields are\n        ``session_id``, ``session_uuid``, ``state``,\n        ``create_time``, and ``labels``.\n\n        Example:\n        ``state = ACTIVE and create_time < \"2023-01-01T00:00:00Z\"``\n        i",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of sessions.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of sessions to return in each response. The service may return fewer than this value.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token received from a previous ``ListSessions`` call. Provide this token to retrieve the subsequent page.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter for the sessions to return in the response.  A filter is a logical expression constraining the values of various fields in each session resource. Filters are case sensitive, and may contain multiple clauses combined with logical operators (AND, OR). Supported fields are ``session_id``, ``session_uuid``, ``state``, ``create_time``, and ``labels``.  Example: ``state = ACTIVE and create_time < \"2023-01-01T00:00:00Z\"`` is a filter for sessions in an ACTIVE state that were created before 2023-01-01. ``state = ACTIVE and labels.environment=production`` is a filter for sessions in an ACTIVE state that have a production environment label.  See https://google.aip.dev/assets/misc/ebnf-filtering.txt for a detailed description of the filter syntax and a list of supported comparators.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "TerminateSessionRequest",
      "description": "A request to terminate an interactive session.\n\nAttributes:\n    name (str):\n        Required. The name of the session resource to\n        terminate.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        service receives two\n        `TerminateSessionRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest>`__\\ s\n        with the same ID, the second request is ignored.\n\n        Recommendation: Set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.\n\n        The value must contain only letters (a-z, A-Z), numbers\n        (0-9), underscores (_), and hyphens (-). The maximum length\n        is 40 characters.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the session resource to terminate.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the service receives two `TerminateSessionRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest>`__\\ s with the same ID, the second request is ignored.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteSessionRequest",
      "description": "A request to delete a session.\n\nAttributes:\n    name (str):\n        Required. The name of the session resource to\n        delete.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        service receives two\n        `DeleteSessionRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteSessionRequest>`__\\ s\n        with the same ID, the second request is ignored.\n\n        Recommendation: Set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.\n\n        The value must contain only letters (a-z, A-Z), numbers\n        (0-9), underscores (_), and hyphens (-). The maximum length\n        is 40 characters.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the session resource to delete.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the service receives two `DeleteSessionRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteSessionRequest>`__\\ s with the same ID, the second request is ignored.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/clusters.py": [
    {
      "type": "function",
      "name": "CreateClusterRequest",
      "description": "A request to create a cluster.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster (google.cloud.dataproc_v1.types.Cluster):\n        Required. The cluster to create.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `CreateClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest>`__\\ s\n        with the same id, then the second request will be ignored\n        and the first\n        [google.longrunning.Operation][google.longrunning.Operation]\n        created and stored in the backend is returned.\n\n        It is recommended to always set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.\n\n        The ID must contain only letter",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. The cluster to create.",
            "reference": "google.cloud.dataproc_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `CreateClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest>`__\\ s with the same id, then the second request will be ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          },
          "action_on_failed_primary_workers": {
            "description": "Optional. Failure action when primary worker creation fails.",
            "type": "object",
            "reference": "google.cloud.dataproc_v1.types.FailureAction"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateClusterRequest",
      "description": "A request to update a cluster.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.\n    cluster (google.cloud.dataproc_v1.types.Cluster):\n        Required. The changes to the cluster.\n    graceful_decommission_timeout (google.protobuf.duration_pb2.Duration):\n        Optional. Timeout for graceful YARN decommissioning.\n        Graceful decommissioning allows removing nodes from the\n        cluster without interrupting jobs in progress. Timeout\n        specifies how long to wait for jobs in progress to finish\n        before forcefully removing nodes (and potentially\n        interrupting jobs). Default timeout is 0 (for forceful\n        decommission), and the maximum allowed timeout is 1 day.\n        (see JSON representation of\n        `Duration <https://developers.google.com/protocol",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. The changes to the cluster.",
            "reference": "google.cloud.dataproc_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "graceful_decommission_timeout": {
            "description": "Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  Only supported on Dataproc image versions 1.2 and higher.",
            "reference": "google.protobuf.duration_pb2.Duration",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "nanos": {
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                  "type": "integer"
                },
                "seconds": {
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                  "type": "integer"
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. Specifies the path, relative to ``Cluster``, of the field to update. For example, to change the number of workers in a cluster to 5, the ``update_mask`` parameter would be specified as ``config.worker_config.num_instances``, and the ``PATCH`` request body would specify the new value, as follows:  ::  { \"config\":{ \"workerConfig\":{ \"numInstances\":\"5\" } } }  Similarly, to change the number of preemptible workers in a cluster to 5, the ``update_mask`` parameter would be ``config.secondary_worker_config.num_instances``, and the ``PATCH`` request body would be set as follows:  ::  { \"config\":{ \"secondaryWorkerConfig\":{ \"numInstances\":\"5\" } } }  Note: Currently, only the following fields can be updated:  .. raw:: html  <table> <tbody> <tr> <td><strong>Mask</strong></td> <td><strong>Purpose</strong></td> </tr> <tr> <td><strong><em>labels</em></strong></td> <td>Update labels</td> </tr> <tr> <td><strong><em>config.worker_config.num_instances</em></strong></td> <td>Resize primary worker group</td> </tr> <tr> <td><strong><em>config.secondary_worker_config.num_instances</em></strong></td> <td>Resize secondary worker group</td> </tr> <tr> <td>config.autoscaling_config.policy_uri</td><td>Use, stop using, or change autoscaling policies</td> </tr> </tbody> </table>",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `UpdateClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest>`__\\ s with the same id, then the second request will be ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name",
          "cluster",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopClusterRequest",
      "description": "A request to stop a cluster.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.\n    cluster_uuid (str):\n        Optional. Specifying the ``cluster_uuid`` means the RPC will\n        fail (with error NOT_FOUND) if a cluster with the specified\n        UUID does not exist.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `StopClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest>`__\\ s\n        with the same id, then the second request will be ignored\n        and the first\n        [google.longrunning.Operation][google.longrunning.Operation]\n        created and stored in the backend is returned.\n\n        Recommendation: Set this",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "Optional. Specifying the ``cluster_uuid`` means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `StopClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest>`__\\ s with the same id, then the second request will be ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartClusterRequest",
      "description": "A request to start a cluster.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.\n    cluster_uuid (str):\n        Optional. Specifying the ``cluster_uuid`` means the RPC will\n        fail (with error NOT_FOUND) if a cluster with the specified\n        UUID does not exist.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `StartClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest>`__\\ s\n        with the same id, then the second request will be ignored\n        and the first\n        [google.longrunning.Operation][google.longrunning.Operation]\n        created and stored in the backend is returned.\n\n        Recommendation: Set t",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "Optional. Specifying the ``cluster_uuid`` means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `StartClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest>`__\\ s with the same id, then the second request will be ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteClusterRequest",
      "description": "A request to delete a cluster.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.\n    cluster_uuid (str):\n        Optional. Specifying the ``cluster_uuid`` means the RPC\n        should fail (with error NOT_FOUND) if cluster with specified\n        UUID does not exist.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `DeleteClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest>`__\\ s\n        with the same id, then the second request will be ignored\n        and the first\n        [google.longrunning.Operation][google.longrunning.Operation]\n        created and stored in the backend is returned.\n\n        It is recommended",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "Optional. Specifying the ``cluster_uuid`` means the RPC should fail (with error NOT_FOUND) if cluster with specified UUID does not exist.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `DeleteClusterRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest>`__\\ s with the same id, then the second request will be ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetClusterRequest",
      "description": "Request to get the resource representation for a cluster in a\nproject.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListClustersRequest",
      "description": "A request to list the clusters in a project.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    filter (str):\n        Optional. A filter constraining the clusters to list.\n        Filters are case-sensitive and have the following syntax:\n\n        field = value [AND [field = value]] ...\n\n        where **field** is one of ``status.state``, ``clusterName``,\n        or ``labels.[KEY]``, and ``[KEY]`` is a label key. **value**\n        can be ``*`` to match all values. ``status.state`` can be\n        one of the following: ``ACTIVE``, ``INACTIVE``,\n        ``CREATING``, ``RUNNING``, ``ERROR``, ``DELETING``,\n        ``UPDATING``, ``STOPPING``, or ``STOPPED``. ``ACTIVE``\n        contains the ``CREATING``, ``UPDATING``, and ``RUNNING``\n        states. ``INACTIVE`` contains the ``DELETING``, ``ERROR``,\n        ``STOPPING``, and ``STOPPED`` ",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:  field = value [AND [field = value]] ...  where **field** is one of ``status.state``, ``clusterName``, or ``labels.[KEY]``, and ``[KEY]`` is a label key. **value** can be ``*`` to match all values. ``status.state`` can be one of the following: ``ACTIVE``, ``INACTIVE``, ``CREATING``, ``RUNNING``, ``ERROR``, ``DELETING``, ``UPDATING``, ``STOPPING``, or ``STOPPED``. ``ACTIVE`` contains the ``CREATING``, ``UPDATING``, and ``RUNNING`` states. ``INACTIVE`` contains the ``DELETING``, ``ERROR``, ``STOPPING``, and ``STOPPED`` states. ``clusterName`` is the name of the cluster provided at creation time. Only the logical ``AND`` operator is supported; space-separated items are treated as having an implicit ``AND`` operator.  Example filter:  status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = \\*",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The standard List page size.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The standard List page token.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseClusterRequest",
      "description": "A request to collect cluster diagnostic information.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the cluster belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    cluster_name (str):\n        Required. The cluster name.\n    tarball_gcs_dir (str):\n        Optional. (Optional) The output Cloud Storage\n        directory for the diagnostic tarball. If not\n        specified, a task-specific directory in the\n        cluster's staging bucket will be used.\n    tarball_access (google.cloud.dataproc_v1.types.DiagnoseClusterRequest.TarballAccess):\n        Optional. (Optional) The access type to the\n        diagnostic tarball. If not specified, falls back\n        to default access of the bucket\n    diagnosis_interval (google.type.interval_pb2.Interval):\n        Optional. Time interval in which diagnosis\n        should be carried out on the cluster.\n    jobs (MutableSequence[str]):\n        Optional. S",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Required. The cluster name.",
            "type": "string"
          },
          "tarball_gcs_dir": {
            "description": "Optional. (Optional) The output Cloud Storage directory for the diagnostic tarball. If not specified, a task-specific directory in the cluster's staging bucket will be used.",
            "type": "string"
          },
          "tarball_access": {
            "description": "Optional. (Optional) The access type to the diagnostic tarball. If not specified, falls back to default access of the bucket",
            "type": "object",
            "reference": "google.cloud.dataproc_v1.types.DiagnoseClusterRequest.TarballAccess"
          },
          "diagnosis_interval": {
            "description": "Optional. Time interval in which diagnosis should be carried out on the cluster.",
            "reference": "google.type.interval_pb2.Interval",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "min_": {
                  "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.max].",
                  "type": "integer"
                },
                "max_": {
                  "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                  "type": "integer"
                }
              }
            }
          },
          "jobs": {
            "description": "Optional. Specifies a list of jobs on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "yarn_application_ids": {
            "description": "Optional. Specifies a list of yarn applications on which diagnosis is to be performed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "project_id",
          "region",
          "cluster_name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/node_groups.py": [
    {
      "type": "function",
      "name": "CreateNodeGroupRequest",
      "description": "A request to create a node group.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this node group will be\n        created. Format:\n        ``projects/{project}/regions/{region}/clusters/{cluster}``\n    node_group (google.cloud.dataproc_v1.types.NodeGroup):\n        Required. The node group to create.\n    node_group_id (str):\n        Optional. An optional node group ID. Generated if not\n        specified.\n\n        The ID must contain only letters (a-z, A-Z), numbers (0-9),\n        underscores (_), and hyphens (-). Cannot begin or end with\n        underscore or hyphen. Must consist of from 3 to 33\n        characters.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `CreateNodeGroupRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequests>`__\n        with the same ID, the second request is ignored and the\n        first\n        [google.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this node group will be created. Format: ``projects/{project}/regions/{region}/clusters/{cluster}``",
            "type": "string"
          },
          "node_group": {
            "description": "Required. The node group to create.",
            "reference": "google.cloud.dataproc_v1.types.NodeGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "autoscaling_policy": {
                  "description": "Specifies how autoscaling should behave.  This field is a member of `oneof`_ ``_autoscaling_policy``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.NodeGroupAutoscalingPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_nodes": {
                        "description": "The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.  This field is a member of `oneof`_ ``_max_nodes``.",
                        "type": "integer"
                      },
                      "min_nodes": {
                        "description": "The minimum number of nodes that the group should have.  This field is a member of `oneof`_ ``_min_nodes``.",
                        "type": "integer"
                      },
                      "mode": {
                        "description": "The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes. Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "creation_timestamp": {
                  "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                  "type": "string",
                  "output_only": true
                },
                "description": {
                  "description": "An optional description of this resource. Provide this property when you create the resource.  This field is a member of `oneof`_ ``_description``.",
                  "type": "string"
                },
                "fingerprint": {
                  "description": "This field is a member of `oneof`_ ``_fingerprint``.",
                  "type": "string"
                },
                "id": {
                  "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                  "type": "integer",
                  "output_only": true
                },
                "kind": {
                  "description": "[Output Only] The type of the resource. Always compute#nodeGroup for node group.  This field is a member of `oneof`_ ``_kind``.",
                  "type": "string",
                  "output_only": true
                },
                "location_hint": {
                  "description": "An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.  This field is a member of `oneof`_ ``_location_hint``.",
                  "type": "string"
                },
                "maintenance_interval": {
                  "description": "Specifies the frequency of planned maintenance events. The accepted values are: ``AS_NEEDED`` and ``RECURRENT``. Check the MaintenanceInterval enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                  "type": "string"
                },
                "maintenance_policy": {
                  "description": "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies. Check the MaintenancePolicy enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_policy``.",
                  "type": "string"
                },
                "maintenance_window": {
                  "description": "This field is a member of `oneof`_ ``_maintenance_window``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.NodeGroupMaintenanceWindow",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "maintenance_duration": {
                        "description": "[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.  This field is a member of `oneof`_ ``_maintenance_duration``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.Duration",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "start_time": {
                        "description": "Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.  This field is a member of `oneof`_ ``_start_time``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.  This field is a member of `oneof`_ ``_name``.",
                  "type": "string"
                },
                "node_template": {
                  "description": "URL of the node template to create the node group from.  This field is a member of `oneof`_ ``_node_template``.",
                  "type": "string"
                },
                "self_link": {
                  "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                  "type": "string",
                  "output_only": true
                },
                "share_settings": {
                  "description": "Share-settings for the node group  This field is a member of `oneof`_ ``_share_settings``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.ShareSettings",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_map": {
                        "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.compute_v1.types.ShareSettingsProjectConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The project ID, should be same as the key of this project config in the parent map.  This field is a member of `oneof`_ ``_project_id``.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "share_type": {
                        "description": "Type of sharing for this shared-reservation Check the ShareType enum for the list of possible values.  This field is a member of `oneof`_ ``_share_type``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "size": {
                  "description": "[Output Only] The total number of nodes in the node group.  This field is a member of `oneof`_ ``_size``.",
                  "type": "integer",
                  "output_only": true
                },
                "status": {
                  "description": "Check the Status enum for the list of possible values.  This field is a member of `oneof`_ ``_status``.",
                  "type": "string"
                },
                "zone": {
                  "description": "[Output Only] The name of the zone where the node group resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "node_group_id": {
            "description": "Optional. An optional node group ID. Generated if not specified.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `CreateNodeGroupRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequests>`__ with the same ID, the second request is ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "node_group"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResizeNodeGroupRequest",
      "description": "A request to resize a node group.\n\nAttributes:\n    name (str):\n        Required. The name of the node group to resize. Format:\n        ``projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}``\n    size (int):\n        Required. The number of running instances for\n        the node group to maintain. The group adds or\n        removes instances to maintain the number of\n        instances specified by this parameter.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        server receives two\n        `ResizeNodeGroupRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.ResizeNodeGroupRequests>`__\n        with the same ID, the second request is ignored and the\n        first\n        [google.longrunning.Operation][google.longrunning.Operation]\n        created and stored in the backend is returned.\n\n        Recommendation: Set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Universally",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the node group to resize. Format: ``projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}``",
            "type": "string"
          },
          "size": {
            "description": "Required. The number of running instances for the node group to maintain. The group adds or removes instances to maintain the number of instances specified by this parameter.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the server receives two `ResizeNodeGroupRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.ResizeNodeGroupRequests>`__ with the same ID, the second request is ignored and the first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend is returned.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          },
          "graceful_decommission_timeout": {
            "description": "Optional. Timeout for graceful YARN decommissioning. [Graceful decommissioning] (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/scaling-clusters#graceful_decommissioning) allows the removal of nodes from the Compute Engine node group without interrupting jobs in progress. This timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  Only supported on Dataproc image versions 1.2 and higher.",
            "reference": "google.protobuf.duration_pb2.Duration",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "nanos": {
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                  "type": "integer"
                },
                "seconds": {
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "size"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetNodeGroupRequest",
      "description": "A request to get a node group .\n\nAttributes:\n    name (str):\n        Required. The name of the node group to retrieve. Format:\n        ``projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the node group to retrieve. Format: ``projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/jobs.py": [
    {
      "type": "function",
      "name": "SubmitJobRequest",
      "description": "A request to submit a job.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    job (google.cloud.dataproc_v1.types.Job):\n        Required. The job resource.\n    request_id (str):\n        Optional. A unique id used to identify the request. If the\n        server receives two\n        `SubmitJobRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest>`__\\ s\n        with the same id, then the second request will be ignored\n        and the first [Job][google.cloud.dataproc.v1.Job] created\n        and stored in the backend is returned.\n\n        It is recommended to always set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.\n\n        The id must contain only letters (a-z, A-Z), numbers (0-9),\n        underscores (_), and hyph",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "job": {
            "description": "Required. The job resource.",
            "reference": "google.cloud.dataproc_v1.types.Job",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "job_name": {
                  "description": "Job name.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "job_id": {
                        "description": "The job ID within the project.",
                        "type": "string"
                      },
                      "location": {
                        "description": "The job location.",
                        "type": "string"
                      }
                    }
                  }
                },
                "job_configuration": {
                  "description": "Job configuration.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "description": "Query job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Query",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "query": {
                              "description": "The SQL query to run.",
                              "type": "string"
                            },
                            "destination_table": {
                              "description": "The table where results are written.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "default_dataset": {
                              "description": "If a table name is specified without a dataset in a query, this dataset will be added to table name.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "table_definitions": {
                              "description": "Describes data sources outside BigQuery, if needed.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableDefinition",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the table, used in queries.",
                                      "type": "string"
                                    },
                                    "source_uris": {
                                      "description": "Google Cloud Storage URIs for the data to be imported.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "query_priority": {
                              "description": "Describes the priority given to the query: ``QUERY_INTERACTIVE`` or ``QUERY_BATCH``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "statement_type": {
                              "description": "Type of the statement (e.g. SELECT, INSERT, CREATE_TABLE, CREATE_MODEL..)",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "load": {
                        "description": "Load job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Load",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "source_uris": {
                              "description": "URIs for the data to be imported. Only Google Cloud Storage URIs are supported.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "schema_json": {
                              "description": "The table schema in JSON format representation of a TableSchema.",
                              "type": "string"
                            },
                            "destination_table": {
                              "description": "The table where the imported data is written.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "extract": {
                        "description": "Extract job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Extract",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "destination_uris": {
                              "description": "Google Cloud Storage URIs where extracted data should be written.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "source_table": {
                              "description": "The source table.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "table_copy": {
                        "description": "TableCopy job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.TableCopy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "source_tables": {
                              "description": "Source tables.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "project_id": {
                                      "description": "The project ID.",
                                      "type": "string"
                                    },
                                    "dataset_id": {
                                      "description": "The dataset ID within the project.",
                                      "type": "string"
                                    },
                                    "table_id": {
                                      "description": "The table ID of the table within the dataset.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "destination_table": {
                              "description": "Destination table.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "dry_run": {
                        "description": "If true, don't actually run the job. Just check that it would run.",
                        "type": "boolean"
                      },
                      "labels": {
                        "description": "Labels provided for the job.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "job_status": {
                  "description": "Job status.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobStatus",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State of a job: ``PENDING``, ``RUNNING``, or ``DONE``.",
                        "type": "string"
                      },
                      "error": {
                        "description": "If the job did not complete successfully, this field describes why.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "additional_errors": {
                        "description": "Errors encountered during the running of the job. Do not necessarily mean that the job has completed or was unsuccessful.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.rpc.status_pb2.Status",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "Output only. State of the metadata job.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                                "output_only": true
                              },
                              "message": {
                                "description": "Output only. Message relating to the progression of a metadata job.",
                                "type": "string",
                                "output_only": true
                              },
                              "completion_percent": {
                                "description": "Output only. Progress tracking.",
                                "type": "integer",
                                "output_only": true
                              },
                              "update_time": {
                                "description": "Output only. The time when the status was updated.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "job_statistics": {
                  "description": "Job statistics.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobStatistics",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "Time when the job was created.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "start_time": {
                        "description": "Time when the job started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "end_time": {
                        "description": "Time when the job ended.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "total_processed_bytes": {
                        "description": "Total bytes processed for a job.",
                        "type": "integer"
                      },
                      "total_billed_bytes": {
                        "description": "Processed bytes, adjusted by the job's CPU usage.",
                        "type": "integer"
                      },
                      "billing_tier": {
                        "description": "The tier assigned by CPU-based billing.",
                        "type": "integer"
                      },
                      "total_slot_ms": {
                        "description": "The total number of slot-ms consumed by the query job.",
                        "type": "integer"
                      },
                      "reservation_usage": {
                        "description": "Reservation usage. This field reported misleading information and will no longer be populated. Aggregate usage of all jobs submitted to a reservation should provide a more reliable indicator of reservation imbalance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.JobStatistics.ReservationResourceUsage",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Reservation name or \"unreserved\" for on-demand resources usage.",
                                "type": "string"
                              },
                              "slot_ms": {
                                "description": "Total slot milliseconds used by the reservation for a particular job.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "reservation": {
                        "description": "Reservation name or \"unreserved\" for on-demand resource usage.",
                        "type": "string"
                      },
                      "referenced_tables": {
                        "description": "The first N tables accessed by the query job. Older queries that reference a large number of tables may not have all of their tables in this list. You can use the total_tables_processed count to know how many total tables were read in the query. For new queries, there is currently no limit.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The project ID.",
                                "type": "string"
                              },
                              "dataset_id": {
                                "description": "The dataset ID within the project.",
                                "type": "string"
                              },
                              "table_id": {
                                "description": "The table ID of the table within the dataset.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "total_tables_processed": {
                        "description": "Total number of unique tables referenced in the query.",
                        "type": "integer"
                      },
                      "referenced_views": {
                        "description": "The first N views accessed by the query job. Older queries that reference a large number of views may not have all of their views in this list. You can use the total_tables_processed count to know how many total tables were read in the query. For new queries, there is currently no limit.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The project ID.",
                                "type": "string"
                              },
                              "dataset_id": {
                                "description": "The dataset ID within the project.",
                                "type": "string"
                              },
                              "table_id": {
                                "description": "The table ID of the table within the dataset.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "total_views_processed": {
                        "description": "Total number of unique views referenced in the query.",
                        "type": "integer"
                      },
                      "query_output_row_count": {
                        "description": "Number of output rows produced by the query job.",
                        "type": "integer"
                      },
                      "total_load_output_bytes": {
                        "description": "Total bytes loaded for an import job.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A unique id used to identify the request. If the server receives two `SubmitJobRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest>`__\\ s with the same id, then the second request will be ignored and the first [Job][google.cloud.dataproc.v1.Job] created and stored in the backend is returned.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "job"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetJobRequest",
      "description": "A request to get the resource representation for a job in a\nproject.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    job_id (str):\n        Required. The job ID.",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "job_id": {
            "description": "Required. The job ID.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "job_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListJobsRequest",
      "description": "A request to list jobs in a project.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    page_size (int):\n        Optional. The number of results to return in\n        each response.\n    page_token (str):\n        Optional. The page token, returned by a\n        previous call, to request the next page of\n        results.\n    cluster_name (str):\n        Optional. If set, the returned jobs list\n        includes only jobs that were submitted to the\n        named cluster.\n    job_state_matcher (google.cloud.dataproc_v1.types.ListJobsRequest.JobStateMatcher):\n        Optional. Specifies enumerated categories of jobs to list.\n        (default = match ALL jobs).\n\n        If ``filter`` is provided, ``jobStateMatcher`` will be\n        ignored.\n    filter (str):\n        Optional. A filter constraining the jobs to list. Filters\n        are case-sen",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The number of results to return in each response.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
            "type": "string"
          },
          "cluster_name": {
            "description": "Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
            "type": "string"
          },
          "job_state_matcher": {
            "description": "Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).  If ``filter`` is provided, ``jobStateMatcher`` will be ignored.",
            "type": "object",
            "reference": "google.cloud.dataproc_v1.types.ListJobsRequest.JobStateMatcher"
          },
          "filter": {
            "description": "Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:  [field = value] AND [field [= value]] ...  where **field** is ``status.state`` or ``labels.[KEY]``, and ``[KEY]`` is a label key. **value** can be ``*`` to match all values. ``status.state`` can be either ``ACTIVE`` or ``NON_ACTIVE``. Only the logical ``AND`` operator is supported; space-separated items are treated as having an implicit ``AND`` operator.  Example filter:  status.state = ACTIVE AND labels.env = staging AND labels.starred = \\*",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateJobRequest",
      "description": "A request to update a job.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    job_id (str):\n        Required. The job ID.\n    job (google.cloud.dataproc_v1.types.Job):\n        Required. The changes to the job.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Specifies the path, relative to Job, of the field\n        to update. For example, to update the labels of a Job the\n        update_mask parameter would be specified as labels, and the\n        ``PATCH`` request body would specify the new value. Note:\n        Currently, labels is the only field that can be updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "job_id": {
            "description": "Required. The job ID.",
            "type": "string"
          },
          "job": {
            "description": "Required. The changes to the job.",
            "reference": "google.cloud.dataproc_v1.types.Job",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "job_name": {
                  "description": "Job name.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "job_id": {
                        "description": "The job ID within the project.",
                        "type": "string"
                      },
                      "location": {
                        "description": "The job location.",
                        "type": "string"
                      }
                    }
                  }
                },
                "job_configuration": {
                  "description": "Job configuration.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "description": "Query job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Query",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "query": {
                              "description": "The SQL query to run.",
                              "type": "string"
                            },
                            "destination_table": {
                              "description": "The table where results are written.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "default_dataset": {
                              "description": "If a table name is specified without a dataset in a query, this dataset will be added to table name.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "table_definitions": {
                              "description": "Describes data sources outside BigQuery, if needed.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableDefinition",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the table, used in queries.",
                                      "type": "string"
                                    },
                                    "source_uris": {
                                      "description": "Google Cloud Storage URIs for the data to be imported.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "query_priority": {
                              "description": "Describes the priority given to the query: ``QUERY_INTERACTIVE`` or ``QUERY_BATCH``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "statement_type": {
                              "description": "Type of the statement (e.g. SELECT, INSERT, CREATE_TABLE, CREATE_MODEL..)",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "load": {
                        "description": "Load job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Load",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "source_uris": {
                              "description": "URIs for the data to be imported. Only Google Cloud Storage URIs are supported.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "schema_json": {
                              "description": "The table schema in JSON format representation of a TableSchema.",
                              "type": "string"
                            },
                            "destination_table": {
                              "description": "The table where the imported data is written.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "extract": {
                        "description": "Extract job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.Extract",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "destination_uris": {
                              "description": "Google Cloud Storage URIs where extracted data should be written.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "source_table": {
                              "description": "The source table.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "table_copy": {
                        "description": "TableCopy job information.  This field is a member of `oneof`_ ``configuration``.",
                        "type": "object",
                        "reference": "google.cloud.bigquery_logging_v1.types.JobConfiguration.TableCopy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "source_tables": {
                              "description": "Source tables.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "project_id": {
                                      "description": "The project ID.",
                                      "type": "string"
                                    },
                                    "dataset_id": {
                                      "description": "The dataset ID within the project.",
                                      "type": "string"
                                    },
                                    "table_id": {
                                      "description": "The table ID of the table within the dataset.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "destination_table": {
                              "description": "Destination table.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  },
                                  "table_id": {
                                    "description": "The table ID of the table within the dataset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "create_disposition": {
                              "description": "Describes when a job is allowed to create a table: ``CREATE_IF_NEEDED``, ``CREATE_NEVER``.",
                              "type": "string"
                            },
                            "write_disposition": {
                              "description": "Describes how writes affect existing tables: ``WRITE_TRUNCATE``, ``WRITE_APPEND``, ``WRITE_EMPTY``.",
                              "type": "string"
                            },
                            "destination_table_encryption": {
                              "description": "Result table encryption information. Set when non-default encryption is used.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "kms_key_name": {
                                    "description": "unique identifier for cloud kms key",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "dry_run": {
                        "description": "If true, don't actually run the job. Just check that it would run.",
                        "type": "boolean"
                      },
                      "labels": {
                        "description": "Labels provided for the job.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "job_status": {
                  "description": "Job status.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobStatus",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State of a job: ``PENDING``, ``RUNNING``, or ``DONE``.",
                        "type": "string"
                      },
                      "error": {
                        "description": "If the job did not complete successfully, this field describes why.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "additional_errors": {
                        "description": "Errors encountered during the running of the job. Do not necessarily mean that the job has completed or was unsuccessful.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.rpc.status_pb2.Status",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "Output only. State of the metadata job.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                                "output_only": true
                              },
                              "message": {
                                "description": "Output only. Message relating to the progression of a metadata job.",
                                "type": "string",
                                "output_only": true
                              },
                              "completion_percent": {
                                "description": "Output only. Progress tracking.",
                                "type": "integer",
                                "output_only": true
                              },
                              "update_time": {
                                "description": "Output only. The time when the status was updated.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "job_statistics": {
                  "description": "Job statistics.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.JobStatistics",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "Time when the job was created.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "start_time": {
                        "description": "Time when the job started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "end_time": {
                        "description": "Time when the job ended.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "total_processed_bytes": {
                        "description": "Total bytes processed for a job.",
                        "type": "integer"
                      },
                      "total_billed_bytes": {
                        "description": "Processed bytes, adjusted by the job's CPU usage.",
                        "type": "integer"
                      },
                      "billing_tier": {
                        "description": "The tier assigned by CPU-based billing.",
                        "type": "integer"
                      },
                      "total_slot_ms": {
                        "description": "The total number of slot-ms consumed by the query job.",
                        "type": "integer"
                      },
                      "reservation_usage": {
                        "description": "Reservation usage. This field reported misleading information and will no longer be populated. Aggregate usage of all jobs submitted to a reservation should provide a more reliable indicator of reservation imbalance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.JobStatistics.ReservationResourceUsage",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Reservation name or \"unreserved\" for on-demand resources usage.",
                                "type": "string"
                              },
                              "slot_ms": {
                                "description": "Total slot milliseconds used by the reservation for a particular job.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "reservation": {
                        "description": "Reservation name or \"unreserved\" for on-demand resource usage.",
                        "type": "string"
                      },
                      "referenced_tables": {
                        "description": "The first N tables accessed by the query job. Older queries that reference a large number of tables may not have all of their tables in this list. You can use the total_tables_processed count to know how many total tables were read in the query. For new queries, there is currently no limit.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The project ID.",
                                "type": "string"
                              },
                              "dataset_id": {
                                "description": "The dataset ID within the project.",
                                "type": "string"
                              },
                              "table_id": {
                                "description": "The table ID of the table within the dataset.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "total_tables_processed": {
                        "description": "Total number of unique tables referenced in the query.",
                        "type": "integer"
                      },
                      "referenced_views": {
                        "description": "The first N views accessed by the query job. Older queries that reference a large number of views may not have all of their views in this list. You can use the total_tables_processed count to know how many total tables were read in the query. For new queries, there is currently no limit.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "project_id": {
                                "description": "The project ID.",
                                "type": "string"
                              },
                              "dataset_id": {
                                "description": "The dataset ID within the project.",
                                "type": "string"
                              },
                              "table_id": {
                                "description": "The table ID of the table within the dataset.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "total_views_processed": {
                        "description": "Total number of unique views referenced in the query.",
                        "type": "integer"
                      },
                      "query_output_row_count": {
                        "description": "Number of output rows produced by the query job.",
                        "type": "integer"
                      },
                      "total_load_output_bytes": {
                        "description": "Total bytes loaded for an import job.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. Specifies the path, relative to Job, of the field to update. For example, to update the labels of a Job the update_mask parameter would be specified as labels, and the ``PATCH`` request body would specify the new value. Note: Currently, labels is the only field that can be updated.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "project_id",
          "region",
          "job_id",
          "job",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "CancelJobRequest",
      "description": "A request to cancel a job.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    job_id (str):\n        Required. The job ID.",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "job_id": {
            "description": "Required. The job ID.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "job_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteJobRequest",
      "description": "A request to delete a job.\n\nAttributes:\n    project_id (str):\n        Required. The ID of the Google Cloud Platform\n        project that the job belongs to.\n    region (str):\n        Required. The Dataproc region in which to\n        handle the request.\n    job_id (str):\n        Required. The job ID.",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "region": {
            "description": "Required. The Dataproc region in which to handle the request.",
            "type": "string"
          },
          "job_id": {
            "description": "Required. The job ID.",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "region",
          "job_id"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/batches.py": [
    {
      "type": "function",
      "name": "CreateBatchRequest",
      "description": "A request to create a batch workload.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this\n        batch will be created.\n    batch (google.cloud.dataproc_v1.types.Batch):\n        Required. The batch to create.\n    batch_id (str):\n        Optional. The ID to use for the batch, which will become the\n        final component of the batch's resource name.\n\n        This value must be 4-63 characters. Valid characters are\n        ``/[a-z][0-9]-/``.\n    request_id (str):\n        Optional. A unique ID used to identify the request. If the\n        service receives two\n        `CreateBatchRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest>`__\\ s\n        with the same request_id, the second request is ignored and\n        the Operation that corresponds to the first Batch created\n        and stored in the backend is returned.\n\n        Recommendation: Set this value to a\n        `UUID <https://en.wikipedia.org/wiki/Uni",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this batch will be created.",
            "type": "string"
          },
          "batch": {
            "description": "Required. The batch to create.",
            "reference": "google.cloud.dataproc_v1.types.Batch",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The resource name of the batch.",
                  "type": "string",
                  "output_only": true
                },
                "uuid": {
                  "description": "Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.",
                  "type": "string",
                  "output_only": true
                },
                "create_time": {
                  "description": "Output only. The time when the batch was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "pyspark_batch": {
                  "description": "Optional. PySpark batch config.  This field is a member of `oneof`_ ``batch_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.PySparkBatch",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "main_python_file_uri": {
                        "description": "Required. The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.",
                        "type": "string"
                      },
                      "args": {
                        "description": "Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as ``--conf``, since a collision can occur that causes an incorrect batch submission.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "python_file_uris": {
                        "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: ``.py``, ``.egg``, and ``.zip``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jar_file_uris": {
                        "description": "Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_uris": {
                        "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archive_uris": {
                        "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: ``.jar``, ``.tar``, ``.tar.gz``, ``.tgz``, and ``.zip``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "main_python_file_uri"
                    ]
                  }
                },
                "spark_batch": {
                  "description": "Optional. Spark batch config.  This field is a member of `oneof`_ ``batch_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.SparkBatch",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "main_jar_file_uri": {
                        "description": "Optional. The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                        "type": "string"
                      },
                      "main_class": {
                        "description": "Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in ``jar_file_uris``.  This field is a member of `oneof`_ ``driver``.",
                        "type": "string"
                      },
                      "args": {
                        "description": "Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as ``--conf``, since a collision can occur that causes an incorrect batch submission.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jar_file_uris": {
                        "description": "Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_uris": {
                        "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archive_uris": {
                        "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: ``.jar``, ``.tar``, ``.tar.gz``, ``.tgz``, and ``.zip``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "spark_r_batch": {
                  "description": "Optional. SparkR batch config.  This field is a member of `oneof`_ ``batch_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.SparkRBatch",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "main_r_file_uri": {
                        "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a ``.R`` or ``.r`` file.",
                        "type": "string"
                      },
                      "args": {
                        "description": "Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as ``--conf``, since a collision can occur that causes an incorrect batch submission.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_uris": {
                        "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archive_uris": {
                        "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: ``.jar``, ``.tar``, ``.tar.gz``, ``.tgz``, and ``.zip``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "main_r_file_uri"
                    ]
                  }
                },
                "spark_sql_batch": {
                  "description": "Optional. SparkSql batch config.  This field is a member of `oneof`_ ``batch_config``.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.SparkSqlBatch",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query_file_uri": {
                        "description": "Required. The HCFS URI of the script that contains Spark SQL queries to execute.",
                        "type": "string"
                      },
                      "query_variables": {
                        "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: ``SET name=\"value\";``).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "jar_file_uris": {
                        "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "query_file_uri"
                    ]
                  }
                },
                "runtime_info": {
                  "description": "Output only. Runtime information about batch execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.RuntimeInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "endpoints": {
                        "description": "Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "output_only": true
                      },
                      "output_uri": {
                        "description": "Output only. A URI pointing to the location of the stdout and stderr of the workload.",
                        "type": "string",
                        "output_only": true
                      },
                      "diagnostic_output_uri": {
                        "description": "Output only. A URI pointing to the location of the diagnostics tarball.",
                        "type": "string",
                        "output_only": true
                      },
                      "approximate_usage": {
                        "description": "Output only. Approximate workload resource usage, calculated when the workload completes (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).  **Note:** This metric calculation may change in the future, for example, to capture cumulative workload resource consumption during workload execution (see the [Dataproc Serverless release notes] (https://cloud.google.com/dataproc-serverless/docs/release-notes) for announcements, changes, fixes and other Dataproc developments).",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.UsageMetrics",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "milli_dcu_seconds": {
                              "description": "Optional. DCU (Dataproc Compute Units) usage in (``milliDCU`` x ``seconds``) (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).",
                              "type": "integer"
                            },
                            "shuffle_storage_gb_seconds": {
                              "description": "Optional. Shuffle storage usage in (``GB`` x ``seconds``) (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).",
                              "type": "integer"
                            },
                            "milli_accelerator_seconds": {
                              "description": "Optional. Accelerator usage in (``milliAccelerator`` x ``seconds``) (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).",
                              "type": "integer"
                            },
                            "accelerator_type": {
                              "description": "Optional. Accelerator type being used, if any",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "current_usage": {
                        "description": "Output only. Snapshot of current workload resource usage.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.UsageSnapshot",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "milli_dcu": {
                              "description": "Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).",
                              "type": "integer"
                            },
                            "shuffle_storage_gb": {
                              "description": "Optional. Shuffle Storage in gigabytes (GB). (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing))",
                              "type": "integer"
                            },
                            "milli_dcu_premium": {
                              "description": "Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing)).",
                              "type": "integer"
                            },
                            "shuffle_storage_gb_premium": {
                              "description": "Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing))",
                              "type": "integer"
                            },
                            "milli_accelerator": {
                              "description": "Optional. Milli (one-thousandth) accelerator. (see [Dataproc Serverless pricing] (https://cloud.google.com/dataproc-serverless/pricing))",
                              "type": "integer"
                            },
                            "accelerator_type": {
                              "description": "Optional. Accelerator type being used, if any",
                              "type": "string"
                            },
                            "snapshot_time": {
                              "description": "Optional. The timestamp of the usage snapshot.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "state": {
                  "description": "Output only. The state of the batch.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.Batch.State",
                  "output_only": true
                },
                "state_message": {
                  "description": "Output only. Batch state details, such as a failure description if the state is ``FAILED``.",
                  "type": "string",
                  "output_only": true
                },
                "state_time": {
                  "description": "Output only. The time when the batch entered a current state.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "creator": {
                  "description": "Output only. The email address of the user who created the batch.",
                  "type": "string",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. The labels to associate with this batch. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a batch.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "runtime_config": {
                  "description": "Optional. Runtime configuration for the batch execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.RuntimeConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kubernetes": {
                        "description": "Kubernetes runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.KubernetesConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "gateway_service_mesh": {
                              "description": "Kubernetes Gateway API service mesh configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "http_route": {
                                    "description": "Required. Name of the Gateway API HTTPRoute.",
                                    "type": "string"
                                  },
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.",
                                    "type": "string"
                                  },
                                  "route_update_wait_time": {
                                    "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "stable_cutback_duration": {
                                    "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.",
                                    "type": "string"
                                  },
                                  "route_destinations": {
                                    "description": "Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.deploy_v1.types.KubernetesConfig.GatewayServiceMesh.RouteDestinations",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "destination_ids": {
                                          "description": "Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid entries include the associated entities IDs configured in the Target resource and \"@self\" to include the Target cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "propagate_service": {
                                          "description": "Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be set to true if destinations are specified.",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "destination_ids"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "http_route",
                                  "service",
                                  "deployment"
                                ]
                              }
                            },
                            "service_networking": {
                              "description": "Kubernetes Service networking configuration.  This field is a member of `oneof`_ ``service_definition``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.KubernetesConfig.ServiceNetworking",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service": {
                                    "description": "Required. Name of the Kubernetes Service.",
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.",
                                    "type": "string"
                                  },
                                  "disable_pod_overprovisioning": {
                                    "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.",
                                    "type": "boolean"
                                  },
                                  "pod_selector_label": {
                                    "description": "Optional. The label to use when selecting Pods for the Deployment resource. This label must already be present in the Deployment.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "service",
                                  "deployment"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "cloud_run": {
                        "description": "Cloud Run runtime configuration.  This field is a member of `oneof`_ ``runtime_config``.",
                        "type": "object",
                        "reference": "google.cloud.deploy_v1.types.CloudRunConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "disabled": {
                              "description": "Whether Cloud Run addon is enabled for this cluster.",
                              "type": "boolean"
                            },
                            "load_balancer_type": {
                              "description": "Which load balancer type is installed for Cloud Run.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.CloudRunConfig.LoadBalancerType"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "environment_config": {
                  "description": "Optional. Environment configuration for the batch execution.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.EnvironmentConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "execution_config": {
                        "description": "Optional. Execution configuration for a workload.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ExecutionConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "usages": {
                              "description": "Required. Usages when this configuration should be applied.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.deploy_v1.types.ExecutionConfig.ExecutionEnvironmentUsage"
                              }
                            },
                            "default_pool": {
                              "description": "Optional. Use default Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.DefaultPool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "private_pool": {
                              "description": "Optional. Use private Cloud Build pool.  This field is a member of `oneof`_ ``execution_environment``.",
                              "type": "object",
                              "reference": "google.cloud.deploy_v1.types.PrivatePool",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "worker_pool": {
                                    "description": "Required. Resource name of the Cloud Build worker pool to use. The format is ``projects/{project}/locations/{location}/workerPools/{pool}``.",
                                    "type": "string"
                                  },
                                  "service_account": {
                                    "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.",
                                    "type": "string"
                                  },
                                  "artifact_storage": {
                                    "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "worker_pool"
                                ]
                              }
                            },
                            "worker_pool": {
                              "description": "Optional. The resource name of the ``WorkerPool``, with the format ``projects/{project}/locations/{location}/workerPools/{worker_pool}``. If this optional field is unspecified, the default Cloud Build pool will be used.",
                              "type": "string"
                            },
                            "service_account": {
                              "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) is used.",
                              "type": "string"
                            },
                            "artifact_storage": {
                              "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
                              "type": "string"
                            },
                            "execution_timeout": {
                              "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "verbose": {
                              "description": "Optional. If true, additional logging will be enabled when running builds in this execution environment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "usages"
                          ]
                        }
                      },
                      "peripherals_config": {
                        "description": "Optional. Peripherals configuration that workload has access to.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.PeripheralsConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "metastore_service": {
                              "description": "Optional. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[region]/services/[service_id]``",
                              "type": "string"
                            },
                            "spark_history_server_config": {
                              "description": "Optional. The Spark History Server configuration for the workload.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.SparkHistoryServerConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "dataproc_cluster": {
                                    "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the connection.  Example:  -  ``projects/[project_id]/regions/[region]/clusters/[cluster_name]``",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "operation": {
                  "description": "Output only. The resource name of the operation associated with this batch.",
                  "type": "string",
                  "output_only": true
                },
                "state_history": {
                  "description": "Output only. Historical state information for the batch.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.Batch.StateHistory",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Output only. The state of the batch at this point in history.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.Batch.State",
                          "output_only": true
                        },
                        "state_message": {
                          "description": "Output only. Details about the state at this point in history.",
                          "type": "string",
                          "output_only": true
                        },
                        "state_start_time": {
                          "description": "Output only. The time when the batch entered the historical state.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        }
                      }
                    }
                  },
                  "output_only": true
                }
              }
            }
          },
          "batch_id": {
            "description": "Optional. The ID to use for the batch, which will become the final component of the batch's resource name.  This value must be 4-63 characters. Valid characters are ``/[a-z][0-9]-/``.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique ID used to identify the request. If the service receives two `CreateBatchRequest <https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest>`__\\ s with the same request_id, the second request is ignored and the Operation that corresponds to the first Batch created and stored in the backend is returned.  Recommendation: Set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "batch"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetBatchRequest",
      "description": "A request to get the resource representation for a batch\nworkload.\n\nAttributes:\n    name (str):\n        Required. The fully qualified name of the batch to retrieve\n        in the format\n        \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\".",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The fully qualified name of the batch to retrieve in the format \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\".",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListBatchesRequest",
      "description": "A request to list batch workloads in a project.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this\n        collection of batches.\n    page_size (int):\n        Optional. The maximum number of batches to\n        return in each response. The service may return\n        fewer than this value. The default page size is\n        20; the maximum page size is 1000.\n    page_token (str):\n        Optional. A page token received from a previous\n        ``ListBatches`` call. Provide this token to retrieve the\n        subsequent page.\n    filter (str):\n        Optional. A filter for the batches to return in the\n        response.\n\n        A filter is a logical expression constraining the values of\n        various fields in each batch resource. Filters are case\n        sensitive, and may contain multiple clauses combined with\n        logical operators (AND/OR). Supported fields are\n        ``batch_id``, ``batch_uuid``, ``state``, and\n        ``create_time``.\n\n        e.g.\n        ``state = RUNNING and",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of batches.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of batches to return in each response. The service may return fewer than this value. The default page size is 20; the maximum page size is 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token received from a previous ``ListBatches`` call. Provide this token to retrieve the subsequent page.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter for the batches to return in the response.  A filter is a logical expression constraining the values of various fields in each batch resource. Filters are case sensitive, and may contain multiple clauses combined with logical operators (AND/OR). Supported fields are ``batch_id``, ``batch_uuid``, ``state``, and ``create_time``.  e.g. ``state = RUNNING and create_time < \"2023-01-01T00:00:00Z\"`` filters for batches in state RUNNING that were created before 2023-01-01  See https://google.aip.dev/assets/misc/ebnf-filtering.txt for a detailed description of the filter syntax and a list of supported comparisons.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Field(s) on which to sort the list of batches.  Currently the only supported sort orders are unspecified (empty) and ``create_time desc`` to sort by most recently created batches first.  See https://google.aip.dev/132#ordering for more details.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteBatchRequest",
      "description": "A request to delete a batch workload.\n\nAttributes:\n    name (str):\n        Required. The fully qualified name of the batch to retrieve\n        in the format\n        \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\".",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The fully qualified name of the batch to retrieve in the format \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\".",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc/google/cloud/dataproc_v1/types/workflow_templates.py": [
    {
      "type": "function",
      "name": "CreateWorkflowTemplateRequest",
      "description": "A request to create a workflow template.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the region or location, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.workflowTemplates.create``, the\n           resource name of the region has the following format:\n           ``projects/{project_id}/regions/{region}``\n\n        -  For ``projects.locations.workflowTemplates.create``, the\n           resource name of the location has the following format:\n           ``projects/{project_id}/locations/{location}``\n    template (google.cloud.dataproc_v1.types.WorkflowTemplate):\n        Required. The Dataproc workflow template to\n        create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates.create``, the resource name of the region has the following format: ``projects/{project_id}/regions/{region}``  -  For ``projects.locations.workflowTemplates.create``, the resource name of the location has the following format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "template": {
            "description": "Required. The Dataproc workflow template to create.",
            "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
                  "type": "string",
                  "output_only": true
                },
                "version": {
                  "description": "Optional. Used to perform a consistent read-modify-write.  This field should be left blank for a ``CreateWorkflowTemplate`` request. It is required for an ``UpdateWorkflowTemplate`` request, and must match the current server version. A typical update template flow would fetch the current template with a ``GetWorkflowTemplate`` request, which will return the current template with the ``version`` field filled in with the current server version. The user updates other fields in the template, then returns it as part of the ``UpdateWorkflowTemplate`` request.",
                  "type": "integer"
                },
                "create_time": {
                  "description": "Output only. The time template was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time template was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.  Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  No more than 32 labels can be associated with a template.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "placement": {
                  "description": "Required. WorkflowTemplate scheduling information.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplatePlacement",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "managed_cluster": {
                        "description": "A cluster that is managed by the workflow.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ManagedCluster",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cluster_name": {
                              "description": "Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.  The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.",
                              "type": "string"
                            },
                            "config": {
                              "description": "Required. The cluster configuration.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.ClusterConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "config_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "temp_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "gce_cluster_config": {
                                    "description": "Optional. The shared Compute Engine config settings for all instances in a cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.GceClusterConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "zone_uri": {
                                          "description": "Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`` -  ``projects/[project_id]/zones/[zone]`` -  ``[zone]``",
                                          "type": "string"
                                        },
                                        "network_uri": {
                                          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither ``network_uri`` nor ``subnetwork_uri`` is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see `Using Subnetworks <https://cloud.google.com/compute/docs/subnetworks>`__ for more information).  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default`` -  ``default``",
                                          "type": "string"
                                        },
                                        "subnetwork_uri": {
                                          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``sub0``",
                                          "type": "string"
                                        },
                                        "internal_ip_only": {
                                          "description": "Optional. This setting applies to subnetwork-enabled networks. It is set to ``true`` by default in clusters created with image versions 2.2.x.  When set to ``true``:  -  All cluster VMs have internal IP addresses. -  [Google Private Access] (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. -  Off-cluster dependencies must be configured to be accessible without external IP addresses.  When set to ``false``:  -  Cluster VMs are not restricted to internal IP addresses. -  Ephemeral external IP addresses are assigned to each cluster VM.  This field is a member of `oneof`_ ``_internal_ip_only``.",
                                          "type": "boolean"
                                        },
                                        "private_ipv6_google_access": {
                                          "description": "Optional. The type of IPv6 access for a cluster.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.GceClusterConfig.PrivateIpv6GoogleAccess"
                                        },
                                        "service_account": {
                                          "description": "Optional. The `Dataproc service account <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc>`__ (also see `VM Data Plane identity <https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity>`__) used by Dataproc cluster VM instances to access Google Cloud Platform services.  If not specified, the `Compute Engine default service account <https://cloud.google.com/compute/docs/access/service-accounts#default_service_account>`__ is used.",
                                          "type": "string"
                                        },
                                        "service_account_scopes": {
                                          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:  -  https://www.googleapis.com/auth/cloud.useraccounts.readonly -  https://www.googleapis.com/auth/devstorage.read_write -  https://www.googleapis.com/auth/logging.write  If no scopes are specified, the following defaults are also provided:  -  https://www.googleapis.com/auth/bigquery -  https://www.googleapis.com/auth/bigtable.admin.table -  https://www.googleapis.com/auth/bigtable.data -  https://www.googleapis.com/auth/devstorage.full_control",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "tags": {
                                          "description": "The Compute Engine network tags to add to all instances (see `Tagging instances <https://cloud.google.com/vpc/docs/add-remove-network-tags>`__).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "metadata": {
                                          "description": "Optional. The Compute Engine metadata entries to add to all instances (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__).",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "reservation_affinity": {
                                          "description": "Optional. Reservation Affinity for consuming Zonal reservation.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ReservationAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "consume_reservation_type": {
                                                "description": "Corresponds to the type of reservation consumption.",
                                                "type": "object",
                                                "reference": "google.cloud.container_v1beta1.types.ReservationAffinity.Type"
                                              },
                                              "key": {
                                                "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "Corresponds to the label value(s) of reservation resource(s).",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "node_group_affinity": {
                                          "description": "Optional. Node Group Affinity for sole-tenant clusters.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.NodeGroupAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "node_group_uri": {
                                                "description": "Required. The URI of a sole-tenant `node group resource <https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups>`__ that the cluster will be created on.  A full URL, partial URI, or node group name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``node-group-1``",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "node_group_uri"
                                            ]
                                          }
                                        },
                                        "shielded_instance_config": {
                                          "description": "Optional. Shielded Instance Config for clusters using `Compute Engine Shielded VMs <https://cloud.google.com/security/shielded-cloud/shielded-vm>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ShieldedInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_secure_boot": {
                                                "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                                                "type": "boolean"
                                              },
                                              "enable_integrity_monitoring": {
                                                "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "confidential_instance_config": {
                                          "description": "Optional. Confidential Instance Config for clusters using `Confidential VMs <https://cloud.google.com/compute/confidential-vm/docs>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ConfidentialInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_confidential_compute": {
                                                "description": "Optional. Defines whether the instance should have confidential compute enabled.  This field is a member of `oneof`_ ``_enable_confidential_compute``.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "master_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's master instance.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "worker_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's worker instances.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "secondary_worker_config": {
                                    "description": "Optional. The Compute Engine config settings for a cluster's secondary worker instances",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "software_config": {
                                    "description": "Optional. The config settings for cluster software.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SoftwareConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "image_version": {
                                          "description": "Optional. The version of software inside the cluster. It must be one of the supported `Dataproc Versions <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported-dataproc-image-versions>`__, such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the `\"preview\" version <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions>`__. If unspecified, it defaults to the latest Debian version.",
                                          "type": "string"
                                        },
                                        "properties": {
                                          "description": "Optional. The properties to set on daemon config files.  Property keys are specified in ``prefix:property`` format, for example ``core:hadoop.tmp.dir``. The following are supported prefixes and their mappings:  -  capacity-scheduler: ``capacity-scheduler.xml`` -  core: ``core-site.xml`` -  distcp: ``distcp-default.xml`` -  hdfs: ``hdfs-site.xml`` -  hive: ``hive-site.xml`` -  mapred: ``mapred-site.xml`` -  pig: ``pig.properties`` -  spark: ``spark-defaults.conf`` -  yarn: ``yarn-site.xml``  For more information, see `Cluster properties <https://cloud.google.com/dataproc/docs/concepts/cluster-properties>`__.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "optional_components": {
                                          "description": "Optional. The set of components to activate on the cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.Component"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "initialization_actions": {
                                    "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's ``role`` metadata to run an executable on a master or worker node, as shown below using ``curl`` (you can also use ``wget``):  ::  ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.NodeInitializationAction",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "executable_file": {
                                            "description": "Required. Cloud Storage URI of executable file.",
                                            "type": "string"
                                          },
                                          "execution_timeout": {
                                            "description": "Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
                                            "type": "object",
                                            "reference": "google.protobuf.duration_pb2.Duration",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "nanos": {
                                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                  "type": "integer"
                                                },
                                                "seconds": {
                                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "executable_file"
                                        ]
                                      }
                                    }
                                  },
                                  "encryption_config": {
                                    "description": "Optional. Encryption settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EncryptionConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kms_key_name": {
                                          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "autoscaling_config": {
                                    "description": "Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.AutoscalingConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "policy_uri": {
                                          "description": "Optional. The autoscaling policy used by the cluster.  Only resource names including projectid and location (region) are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]`` -  ``projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]``  Note that the policy must be in the same project and Dataproc region.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "security_config": {
                                    "description": "Optional. Security settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SecurityConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kerberos_config": {
                                          "description": "Optional. Kerberos related configuration.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.KerberosConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "keytab": {
                                                "description": "A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).",
                                                "type": "object",
                                                "reference": "google.cloud.metastore_v1alpha.types.Secret",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key_name": {
                                                      "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                                      "type": "string"
                                                    },
                                                    "cipher_text": {
                                                      "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "principal": {
                                                "description": "A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form ``primary/instance@REALM``, but there is no exact format.",
                                                "type": "string"
                                              },
                                              "krb5_config_gcs_uri": {
                                                "description": "A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form ``gs://{bucket_name}/path/to/krb5.conf``, although the file does not need to be named krb5.conf explicitly.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "identity_config": {
                                          "description": "Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.IdentityConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "user_service_account_mapping": {
                                                "description": "Required. Map of user to service account.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "user_service_account_mapping"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "lifecycle_config": {
                                    "description": "Optional. Lifecycle setting for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.LifecycleConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "idle_delete_ttl": {
                                          "description": "Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "auto_delete_time": {
                                          "description": "Optional. The time when cluster will be auto-deleted (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                        },
                                        "auto_delete_ttl": {
                                          "description": "Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "idle_start_time": {
                                          "description": "Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                          "output_only": true
                                        }
                                      }
                                    }
                                  },
                                  "endpoint_config": {
                                    "description": "Optional. Port/endpoint configuration for this cluster",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EndpointConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "http_ports": {
                                          "description": "Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "enable_http_port_access": {
                                          "description": "Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "metastore_config": {
                                    "description": "Optional. Metastore configuration.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.MetastoreConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "dataproc_metastore_service": {
                                          "description": "Required. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[dataproc_region]/services/[service-name]``",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "dataproc_metastore_service"
                                      ]
                                    }
                                  },
                                  "dataproc_metric_config": {
                                    "description": "Optional. The config for Dataproc metrics.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "metrics": {
                                          "description": "Required. Metrics sources to enable.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig.Metric",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Required. Metric name, e.g., \"nodes total\", \"percent done\".",
                                                  "type": "string"
                                                },
                                                "int_value": {
                                                  "description": "For metrics with integer value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "integer"
                                                },
                                                "double_value": {
                                                  "description": "For metrics with floating point value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "number"
                                                },
                                                "string_value": {
                                                  "description": "For metrics with custom values (ratios, visual progress, etc.).  This field is a member of `oneof`_ ``value``.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "metrics"
                                      ]
                                    }
                                  },
                                  "auxiliary_node_groups": {
                                    "description": "Optional. The node group settings.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.AuxiliaryNodeGroup",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "node_group": {
                                            "description": "Required. Node group configuration.",
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.NodeGroup",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "autoscaling_policy": {
                                                  "description": "Specifies how autoscaling should behave.  This field is a member of `oneof`_ ``_autoscaling_policy``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupAutoscalingPolicy",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_nodes": {
                                                        "description": "The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.  This field is a member of `oneof`_ ``_max_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "min_nodes": {
                                                        "description": "The minimum number of nodes that the group should have.  This field is a member of `oneof`_ ``_min_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "mode": {
                                                        "description": "The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes. Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "creation_timestamp": {
                                                  "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "description": {
                                                  "description": "An optional description of this resource. Provide this property when you create the resource.  This field is a member of `oneof`_ ``_description``.",
                                                  "type": "string"
                                                },
                                                "fingerprint": {
                                                  "description": "This field is a member of `oneof`_ ``_fingerprint``.",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "kind": {
                                                  "description": "[Output Only] The type of the resource. Always compute#nodeGroup for node group.  This field is a member of `oneof`_ ``_kind``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "location_hint": {
                                                  "description": "An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.  This field is a member of `oneof`_ ``_location_hint``.",
                                                  "type": "string"
                                                },
                                                "maintenance_interval": {
                                                  "description": "Specifies the frequency of planned maintenance events. The accepted values are: ``AS_NEEDED`` and ``RECURRENT``. Check the MaintenanceInterval enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                                                  "type": "string"
                                                },
                                                "maintenance_policy": {
                                                  "description": "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies. Check the MaintenancePolicy enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_policy``.",
                                                  "type": "string"
                                                },
                                                "maintenance_window": {
                                                  "description": "This field is a member of `oneof`_ ``_maintenance_window``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupMaintenanceWindow",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "maintenance_duration": {
                                                        "description": "[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.  This field is a member of `oneof`_ ``_maintenance_duration``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.compute_v1.types.Duration",
                                                        "output_only": true,
                                                        "resolved_schema": {
                                                          "type": "object",
                                                          "properties": {
                                                            "nanos": {
                                                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                              "type": "integer"
                                                            },
                                                            "seconds": {
                                                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                              "type": "integer"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "start_time": {
                                                        "description": "Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.  This field is a member of `oneof`_ ``_start_time``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.  This field is a member of `oneof`_ ``_name``.",
                                                  "type": "string"
                                                },
                                                "node_template": {
                                                  "description": "URL of the node template to create the node group from.  This field is a member of `oneof`_ ``_node_template``.",
                                                  "type": "string"
                                                },
                                                "self_link": {
                                                  "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "share_settings": {
                                                  "description": "Share-settings for the node group  This field is a member of `oneof`_ ``_share_settings``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.ShareSettings",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "project_map": {
                                                        "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "object",
                                                          "reference": "google.cloud.compute_v1.types.ShareSettingsProjectConfig",
                                                          "resolved_schema": {
                                                            "type": "object",
                                                            "properties": {
                                                              "project_id": {
                                                                "description": "The project ID, should be same as the key of this project config in the parent map.  This field is a member of `oneof`_ ``_project_id``.",
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "share_type": {
                                                        "description": "Type of sharing for this shared-reservation Check the ShareType enum for the list of possible values.  This field is a member of `oneof`_ ``_share_type``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "size": {
                                                  "description": "[Output Only] The total number of nodes in the node group.  This field is a member of `oneof`_ ``_size``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "status": {
                                                  "description": "Check the Status enum for the list of possible values.  This field is a member of `oneof`_ ``_status``.",
                                                  "type": "string"
                                                },
                                                "zone": {
                                                  "description": "[Output Only] The name of the zone where the node group resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                                                  "type": "string",
                                                  "output_only": true
                                                }
                                              }
                                            }
                                          },
                                          "node_group_id": {
                                            "description": "Optional. A node group ID. Generated if not specified.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "node_group"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Optional. The labels to associate with this cluster.  Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_name",
                            "config"
                          ]
                        }
                      },
                      "cluster_selector": {
                        "description": "Optional. A selector that chooses target cluster for jobs based on metadata.  The selector is evaluated at the time each job is submitted.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ClusterSelector",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "zone": {
                              "description": "Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.  If unspecified, the zone of the first cluster matching the selector is used.",
                              "type": "string"
                            },
                            "cluster_labels": {
                              "description": "Required. The cluster labels. Cluster must have all labels to match.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_labels"
                          ]
                        }
                      }
                    }
                  }
                },
                "jobs": {
                  "description": "Required. The Directed Acyclic Graph of Jobs to submit.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.OrderedJob",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "step_id": {
                          "description": "Required. The step id. The id must be unique among all jobs within the template.  The step id is used as prefix for job id, as job ``goog-dataproc-workflow-step-id`` label, and in [prerequisiteStepIds][google.cloud.dataproc.v1.OrderedJob.prerequisite_step_ids] field from other steps.  The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.",
                          "type": "string"
                        },
                        "hadoop_job": {
                          "description": "Optional. Job is a Hadoop job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HadoopJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file containing the main class. Examples:  'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in ``jar_file_uris``.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``-libjars`` or ``-Dfoo=bar``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types:  .jar, .tar, .tar.gz, .tgz, or .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_job": {
                          "description": "Optional. Job is a Spark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pyspark_job": {
                          "description": "Optional. Job is a PySpark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PySparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_python_file_uri": {
                                "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "python_file_uris": {
                                "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_python_file_uri"
                            ]
                          }
                        },
                        "hive_job": {
                          "description": "Optional. Job is a Hive job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HiveJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains Hive queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Hive command: ``SET name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/hive/conf/hive-site.xml, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "pig_job": {
                          "description": "Optional. Job is a Pig job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PigJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains the Pig queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Pig command: ``name=[value]``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/pig/conf/pig.properties, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_r_job": {
                          "description": "Optional. Job is a SparkR job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkRJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_r_file_uri": {
                                "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_r_file_uri"
                            ]
                          }
                        },
                        "spark_sql_job": {
                          "description": "Optional. Job is a SparkSql job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkSqlJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET ``name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "presto_job": {
                          "description": "Optional. Job is a Presto job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PrestoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Presto client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Presto `session properties <https://prestodb.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Presto CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trino_job": {
                          "description": "Optional. Job is a Trino job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.TrinoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Trino client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Trino `session properties <https://trino.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Trino CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "flink_job": {
                          "description": "Optional. Job is a Flink job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.FlinkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in [jarFileUris][google.cloud.dataproc.v1.FlinkJob.jar_file_uris].  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "savepoint_uri": {
                                "description": "Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/flink/conf/flink-defaults.conf`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "labels": {
                          "description": "Optional. The labels to associate with this job.  Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given job.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "scheduling": {
                          "description": "Optional. Job scheduling configuration.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.JobScheduling",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "max_failures_per_hour": {
                                "description": "Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.  A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.  Maximum value is 10.  **Note:** This restartable job option is not supported in Dataproc [workflow templates] (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).",
                                "type": "integer"
                              },
                              "max_failures_total": {
                                "description": "Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.  Maximum value is 240.  **Note:** Currently, this restartable job option is not supported in Dataproc `workflow templates <https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template>`__.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "prerequisite_step_ids": {
                          "description": "Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "step_id"
                      ]
                    }
                  }
                },
                "parameters": {
                  "description": "Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.TemplateParameter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.",
                          "type": "string"
                        },
                        "fields": {
                          "description": "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.  A field path is similar in syntax to a [google.protobuf.FieldMask][google.protobuf.FieldMask]. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as ``placement.clusterSelector.zone``.  Also, field paths can reference fields using the following syntax:  -  Values in maps can be referenced by key:  -  labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  placement.managedCluster.labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  jobs['step-id'].labels['key']  -  Jobs in the jobs list can be referenced by step-id:  -  jobs['step-id'].hadoopJob.mainJarFileUri -  jobs['step-id'].hiveJob.queryFileUri -  jobs['step-id'].pySparkJob.mainPythonFileUri -  jobs['step-id'].hadoopJob.jarFileUris[0] -  jobs['step-id'].hadoopJob.archiveUris[0] -  jobs['step-id'].hadoopJob.fileUris[0] -  jobs['step-id'].pySparkJob.pythonFileUris[0]  -  Items in repeated fields can be referenced by a zero-based index:  -  jobs['step-id'].sparkJob.args[0]  -  Other examples:  -  jobs['step-id'].hadoopJob.properties['key'] -  jobs['step-id'].hadoopJob.args[0] -  jobs['step-id'].hiveJob.scriptVariables['key'] -  jobs['step-id'].hadoopJob.mainJarFileUri -  placement.clusterSelector.zone  It may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid:  -  placement.clusterSelector.clusterLabels -  jobs['step-id'].sparkJob.args",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Brief description of the parameter. Must not exceed 1024 characters.",
                          "type": "string"
                        },
                        "validation": {
                          "description": "Optional. Validation rules to be applied to this parameter's value.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.ParameterValidation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "regex": {
                                "description": "Validation based on regular expressions.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.RegexValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "regexes": {
                                      "description": "Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "regexes"
                                  ]
                                }
                              },
                              "values": {
                                "description": "Validation based on a list of allowed values.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.ValueValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "description": "Required. List of allowed values for the parameter.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "values"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name",
                        "fields"
                      ]
                    }
                  }
                },
                "dag_timeout": {
                  "description": "Optional. Timeout duration for the DAG of jobs, expressed in seconds (see `JSON representation of duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__). The timeout duration must be from 10 minutes (\"600s\") to 24 hours (\"86400s\"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a `managed cluster </dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster>`__, the cluster is deleted.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "encryption_config": {
                  "description": "Optional. Encryption settings for encrypting workflow template job arguments.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate.EncryptionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kms_key_name": {
                        "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "placement",
                "jobs"
              ]
            }
          }
        },
        "required": [
          "parent",
          "template"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetWorkflowTemplateRequest",
      "description": "A request to fetch a workflow template.\n\nAttributes:\n    name (str):\n        Required. The resource name of the workflow template, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.workflowTemplates.get``, the\n           resource name of the template has the following format:\n           ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``\n\n        -  For ``projects.locations.workflowTemplates.get``, the\n           resource name of the template has the following format:\n           ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``\n    version (int):\n        Optional. The version of workflow template to\n        retrieve. Only previously instantiated versions\n        can be retrieved.\n\n        If unspecified, retrieves the current version.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates.get``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates.get``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
            "type": "string"
          },
          "version": {
            "description": "Optional. The version of workflow template to retrieve. Only previously instantiated versions can be retrieved.  If unspecified, retrieves the current version.",
            "type": "integer"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "InstantiateWorkflowTemplateRequest",
      "description": "A request to instantiate a workflow template.\n\nAttributes:\n    name (str):\n        Required. The resource name of the workflow template, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.workflowTemplates.instantiate``,\n           the resource name of the template has the following\n           format:\n           ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``\n\n        -  For ``projects.locations.workflowTemplates.instantiate``,\n           the resource name of the template has the following\n           format:\n           ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``\n    version (int):\n        Optional. The version of workflow template to\n        instantiate. If specified, the workflow will be\n        instantiated only if the current version of the\n        workflow template has the supplied version.\n\n        This option cannot be used to instantiate a\n        previous version of workfl",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates.instantiate``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates.instantiate``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
            "type": "string"
          },
          "version": {
            "description": "Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.  This option cannot be used to instantiate a previous version of workflow template.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          },
          "parameters": {
            "description": "Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "InstantiateInlineWorkflowTemplateRequest",
      "description": "A request to instantiate an inline workflow template.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the region or location, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For\n           ``projects.regions.workflowTemplates,instantiateinline``,\n           the resource name of the region has the following format:\n           ``projects/{project_id}/regions/{region}``\n\n        -  For\n           ``projects.locations.workflowTemplates.instantiateinline``,\n           the resource name of the location has the following\n           format: ``projects/{project_id}/locations/{location}``\n    template (google.cloud.dataproc_v1.types.WorkflowTemplate):\n        Required. The workflow template to\n        instantiate.\n    request_id (str):\n        Optional. A tag that prevents multiple concurrent workflow\n        instances with the same tag from running. This mitigates\n        risk of concurrent instances started due to retries.\n\n        It is recommend",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates,instantiateinline``, the resource name of the region has the following format: ``projects/{project_id}/regions/{region}``  -  For ``projects.locations.workflowTemplates.instantiateinline``, the resource name of the location has the following format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "template": {
            "description": "Required. The workflow template to instantiate.",
            "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
                  "type": "string",
                  "output_only": true
                },
                "version": {
                  "description": "Optional. Used to perform a consistent read-modify-write.  This field should be left blank for a ``CreateWorkflowTemplate`` request. It is required for an ``UpdateWorkflowTemplate`` request, and must match the current server version. A typical update template flow would fetch the current template with a ``GetWorkflowTemplate`` request, which will return the current template with the ``version`` field filled in with the current server version. The user updates other fields in the template, then returns it as part of the ``UpdateWorkflowTemplate`` request.",
                  "type": "integer"
                },
                "create_time": {
                  "description": "Output only. The time template was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time template was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.  Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  No more than 32 labels can be associated with a template.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "placement": {
                  "description": "Required. WorkflowTemplate scheduling information.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplatePlacement",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "managed_cluster": {
                        "description": "A cluster that is managed by the workflow.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ManagedCluster",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cluster_name": {
                              "description": "Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.  The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.",
                              "type": "string"
                            },
                            "config": {
                              "description": "Required. The cluster configuration.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.ClusterConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "config_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "temp_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "gce_cluster_config": {
                                    "description": "Optional. The shared Compute Engine config settings for all instances in a cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.GceClusterConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "zone_uri": {
                                          "description": "Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`` -  ``projects/[project_id]/zones/[zone]`` -  ``[zone]``",
                                          "type": "string"
                                        },
                                        "network_uri": {
                                          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither ``network_uri`` nor ``subnetwork_uri`` is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see `Using Subnetworks <https://cloud.google.com/compute/docs/subnetworks>`__ for more information).  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default`` -  ``default``",
                                          "type": "string"
                                        },
                                        "subnetwork_uri": {
                                          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``sub0``",
                                          "type": "string"
                                        },
                                        "internal_ip_only": {
                                          "description": "Optional. This setting applies to subnetwork-enabled networks. It is set to ``true`` by default in clusters created with image versions 2.2.x.  When set to ``true``:  -  All cluster VMs have internal IP addresses. -  [Google Private Access] (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. -  Off-cluster dependencies must be configured to be accessible without external IP addresses.  When set to ``false``:  -  Cluster VMs are not restricted to internal IP addresses. -  Ephemeral external IP addresses are assigned to each cluster VM.  This field is a member of `oneof`_ ``_internal_ip_only``.",
                                          "type": "boolean"
                                        },
                                        "private_ipv6_google_access": {
                                          "description": "Optional. The type of IPv6 access for a cluster.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.GceClusterConfig.PrivateIpv6GoogleAccess"
                                        },
                                        "service_account": {
                                          "description": "Optional. The `Dataproc service account <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc>`__ (also see `VM Data Plane identity <https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity>`__) used by Dataproc cluster VM instances to access Google Cloud Platform services.  If not specified, the `Compute Engine default service account <https://cloud.google.com/compute/docs/access/service-accounts#default_service_account>`__ is used.",
                                          "type": "string"
                                        },
                                        "service_account_scopes": {
                                          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:  -  https://www.googleapis.com/auth/cloud.useraccounts.readonly -  https://www.googleapis.com/auth/devstorage.read_write -  https://www.googleapis.com/auth/logging.write  If no scopes are specified, the following defaults are also provided:  -  https://www.googleapis.com/auth/bigquery -  https://www.googleapis.com/auth/bigtable.admin.table -  https://www.googleapis.com/auth/bigtable.data -  https://www.googleapis.com/auth/devstorage.full_control",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "tags": {
                                          "description": "The Compute Engine network tags to add to all instances (see `Tagging instances <https://cloud.google.com/vpc/docs/add-remove-network-tags>`__).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "metadata": {
                                          "description": "Optional. The Compute Engine metadata entries to add to all instances (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__).",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "reservation_affinity": {
                                          "description": "Optional. Reservation Affinity for consuming Zonal reservation.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ReservationAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "consume_reservation_type": {
                                                "description": "Corresponds to the type of reservation consumption.",
                                                "type": "object",
                                                "reference": "google.cloud.container_v1beta1.types.ReservationAffinity.Type"
                                              },
                                              "key": {
                                                "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "Corresponds to the label value(s) of reservation resource(s).",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "node_group_affinity": {
                                          "description": "Optional. Node Group Affinity for sole-tenant clusters.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.NodeGroupAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "node_group_uri": {
                                                "description": "Required. The URI of a sole-tenant `node group resource <https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups>`__ that the cluster will be created on.  A full URL, partial URI, or node group name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``node-group-1``",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "node_group_uri"
                                            ]
                                          }
                                        },
                                        "shielded_instance_config": {
                                          "description": "Optional. Shielded Instance Config for clusters using `Compute Engine Shielded VMs <https://cloud.google.com/security/shielded-cloud/shielded-vm>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ShieldedInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_secure_boot": {
                                                "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                                                "type": "boolean"
                                              },
                                              "enable_integrity_monitoring": {
                                                "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "confidential_instance_config": {
                                          "description": "Optional. Confidential Instance Config for clusters using `Confidential VMs <https://cloud.google.com/compute/confidential-vm/docs>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ConfidentialInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_confidential_compute": {
                                                "description": "Optional. Defines whether the instance should have confidential compute enabled.  This field is a member of `oneof`_ ``_enable_confidential_compute``.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "master_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's master instance.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "worker_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's worker instances.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "secondary_worker_config": {
                                    "description": "Optional. The Compute Engine config settings for a cluster's secondary worker instances",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "software_config": {
                                    "description": "Optional. The config settings for cluster software.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SoftwareConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "image_version": {
                                          "description": "Optional. The version of software inside the cluster. It must be one of the supported `Dataproc Versions <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported-dataproc-image-versions>`__, such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the `\"preview\" version <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions>`__. If unspecified, it defaults to the latest Debian version.",
                                          "type": "string"
                                        },
                                        "properties": {
                                          "description": "Optional. The properties to set on daemon config files.  Property keys are specified in ``prefix:property`` format, for example ``core:hadoop.tmp.dir``. The following are supported prefixes and their mappings:  -  capacity-scheduler: ``capacity-scheduler.xml`` -  core: ``core-site.xml`` -  distcp: ``distcp-default.xml`` -  hdfs: ``hdfs-site.xml`` -  hive: ``hive-site.xml`` -  mapred: ``mapred-site.xml`` -  pig: ``pig.properties`` -  spark: ``spark-defaults.conf`` -  yarn: ``yarn-site.xml``  For more information, see `Cluster properties <https://cloud.google.com/dataproc/docs/concepts/cluster-properties>`__.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "optional_components": {
                                          "description": "Optional. The set of components to activate on the cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.Component"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "initialization_actions": {
                                    "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's ``role`` metadata to run an executable on a master or worker node, as shown below using ``curl`` (you can also use ``wget``):  ::  ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.NodeInitializationAction",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "executable_file": {
                                            "description": "Required. Cloud Storage URI of executable file.",
                                            "type": "string"
                                          },
                                          "execution_timeout": {
                                            "description": "Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
                                            "type": "object",
                                            "reference": "google.protobuf.duration_pb2.Duration",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "nanos": {
                                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                  "type": "integer"
                                                },
                                                "seconds": {
                                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "executable_file"
                                        ]
                                      }
                                    }
                                  },
                                  "encryption_config": {
                                    "description": "Optional. Encryption settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EncryptionConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kms_key_name": {
                                          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "autoscaling_config": {
                                    "description": "Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.AutoscalingConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "policy_uri": {
                                          "description": "Optional. The autoscaling policy used by the cluster.  Only resource names including projectid and location (region) are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]`` -  ``projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]``  Note that the policy must be in the same project and Dataproc region.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "security_config": {
                                    "description": "Optional. Security settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SecurityConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kerberos_config": {
                                          "description": "Optional. Kerberos related configuration.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.KerberosConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "keytab": {
                                                "description": "A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).",
                                                "type": "object",
                                                "reference": "google.cloud.metastore_v1alpha.types.Secret",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key_name": {
                                                      "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                                      "type": "string"
                                                    },
                                                    "cipher_text": {
                                                      "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "principal": {
                                                "description": "A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form ``primary/instance@REALM``, but there is no exact format.",
                                                "type": "string"
                                              },
                                              "krb5_config_gcs_uri": {
                                                "description": "A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form ``gs://{bucket_name}/path/to/krb5.conf``, although the file does not need to be named krb5.conf explicitly.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "identity_config": {
                                          "description": "Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.IdentityConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "user_service_account_mapping": {
                                                "description": "Required. Map of user to service account.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "user_service_account_mapping"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "lifecycle_config": {
                                    "description": "Optional. Lifecycle setting for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.LifecycleConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "idle_delete_ttl": {
                                          "description": "Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "auto_delete_time": {
                                          "description": "Optional. The time when cluster will be auto-deleted (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                        },
                                        "auto_delete_ttl": {
                                          "description": "Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "idle_start_time": {
                                          "description": "Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                          "output_only": true
                                        }
                                      }
                                    }
                                  },
                                  "endpoint_config": {
                                    "description": "Optional. Port/endpoint configuration for this cluster",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EndpointConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "http_ports": {
                                          "description": "Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "enable_http_port_access": {
                                          "description": "Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "metastore_config": {
                                    "description": "Optional. Metastore configuration.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.MetastoreConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "dataproc_metastore_service": {
                                          "description": "Required. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[dataproc_region]/services/[service-name]``",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "dataproc_metastore_service"
                                      ]
                                    }
                                  },
                                  "dataproc_metric_config": {
                                    "description": "Optional. The config for Dataproc metrics.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "metrics": {
                                          "description": "Required. Metrics sources to enable.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig.Metric",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Required. Metric name, e.g., \"nodes total\", \"percent done\".",
                                                  "type": "string"
                                                },
                                                "int_value": {
                                                  "description": "For metrics with integer value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "integer"
                                                },
                                                "double_value": {
                                                  "description": "For metrics with floating point value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "number"
                                                },
                                                "string_value": {
                                                  "description": "For metrics with custom values (ratios, visual progress, etc.).  This field is a member of `oneof`_ ``value``.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "metrics"
                                      ]
                                    }
                                  },
                                  "auxiliary_node_groups": {
                                    "description": "Optional. The node group settings.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.AuxiliaryNodeGroup",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "node_group": {
                                            "description": "Required. Node group configuration.",
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.NodeGroup",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "autoscaling_policy": {
                                                  "description": "Specifies how autoscaling should behave.  This field is a member of `oneof`_ ``_autoscaling_policy``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupAutoscalingPolicy",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_nodes": {
                                                        "description": "The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.  This field is a member of `oneof`_ ``_max_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "min_nodes": {
                                                        "description": "The minimum number of nodes that the group should have.  This field is a member of `oneof`_ ``_min_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "mode": {
                                                        "description": "The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes. Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "creation_timestamp": {
                                                  "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "description": {
                                                  "description": "An optional description of this resource. Provide this property when you create the resource.  This field is a member of `oneof`_ ``_description``.",
                                                  "type": "string"
                                                },
                                                "fingerprint": {
                                                  "description": "This field is a member of `oneof`_ ``_fingerprint``.",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "kind": {
                                                  "description": "[Output Only] The type of the resource. Always compute#nodeGroup for node group.  This field is a member of `oneof`_ ``_kind``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "location_hint": {
                                                  "description": "An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.  This field is a member of `oneof`_ ``_location_hint``.",
                                                  "type": "string"
                                                },
                                                "maintenance_interval": {
                                                  "description": "Specifies the frequency of planned maintenance events. The accepted values are: ``AS_NEEDED`` and ``RECURRENT``. Check the MaintenanceInterval enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                                                  "type": "string"
                                                },
                                                "maintenance_policy": {
                                                  "description": "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies. Check the MaintenancePolicy enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_policy``.",
                                                  "type": "string"
                                                },
                                                "maintenance_window": {
                                                  "description": "This field is a member of `oneof`_ ``_maintenance_window``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupMaintenanceWindow",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "maintenance_duration": {
                                                        "description": "[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.  This field is a member of `oneof`_ ``_maintenance_duration``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.compute_v1.types.Duration",
                                                        "output_only": true,
                                                        "resolved_schema": {
                                                          "type": "object",
                                                          "properties": {
                                                            "nanos": {
                                                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                              "type": "integer"
                                                            },
                                                            "seconds": {
                                                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                              "type": "integer"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "start_time": {
                                                        "description": "Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.  This field is a member of `oneof`_ ``_start_time``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.  This field is a member of `oneof`_ ``_name``.",
                                                  "type": "string"
                                                },
                                                "node_template": {
                                                  "description": "URL of the node template to create the node group from.  This field is a member of `oneof`_ ``_node_template``.",
                                                  "type": "string"
                                                },
                                                "self_link": {
                                                  "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "share_settings": {
                                                  "description": "Share-settings for the node group  This field is a member of `oneof`_ ``_share_settings``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.ShareSettings",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "project_map": {
                                                        "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "object",
                                                          "reference": "google.cloud.compute_v1.types.ShareSettingsProjectConfig",
                                                          "resolved_schema": {
                                                            "type": "object",
                                                            "properties": {
                                                              "project_id": {
                                                                "description": "The project ID, should be same as the key of this project config in the parent map.  This field is a member of `oneof`_ ``_project_id``.",
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "share_type": {
                                                        "description": "Type of sharing for this shared-reservation Check the ShareType enum for the list of possible values.  This field is a member of `oneof`_ ``_share_type``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "size": {
                                                  "description": "[Output Only] The total number of nodes in the node group.  This field is a member of `oneof`_ ``_size``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "status": {
                                                  "description": "Check the Status enum for the list of possible values.  This field is a member of `oneof`_ ``_status``.",
                                                  "type": "string"
                                                },
                                                "zone": {
                                                  "description": "[Output Only] The name of the zone where the node group resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                                                  "type": "string",
                                                  "output_only": true
                                                }
                                              }
                                            }
                                          },
                                          "node_group_id": {
                                            "description": "Optional. A node group ID. Generated if not specified.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "node_group"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Optional. The labels to associate with this cluster.  Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_name",
                            "config"
                          ]
                        }
                      },
                      "cluster_selector": {
                        "description": "Optional. A selector that chooses target cluster for jobs based on metadata.  The selector is evaluated at the time each job is submitted.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ClusterSelector",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "zone": {
                              "description": "Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.  If unspecified, the zone of the first cluster matching the selector is used.",
                              "type": "string"
                            },
                            "cluster_labels": {
                              "description": "Required. The cluster labels. Cluster must have all labels to match.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_labels"
                          ]
                        }
                      }
                    }
                  }
                },
                "jobs": {
                  "description": "Required. The Directed Acyclic Graph of Jobs to submit.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.OrderedJob",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "step_id": {
                          "description": "Required. The step id. The id must be unique among all jobs within the template.  The step id is used as prefix for job id, as job ``goog-dataproc-workflow-step-id`` label, and in [prerequisiteStepIds][google.cloud.dataproc.v1.OrderedJob.prerequisite_step_ids] field from other steps.  The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.",
                          "type": "string"
                        },
                        "hadoop_job": {
                          "description": "Optional. Job is a Hadoop job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HadoopJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file containing the main class. Examples:  'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in ``jar_file_uris``.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``-libjars`` or ``-Dfoo=bar``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types:  .jar, .tar, .tar.gz, .tgz, or .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_job": {
                          "description": "Optional. Job is a Spark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pyspark_job": {
                          "description": "Optional. Job is a PySpark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PySparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_python_file_uri": {
                                "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "python_file_uris": {
                                "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_python_file_uri"
                            ]
                          }
                        },
                        "hive_job": {
                          "description": "Optional. Job is a Hive job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HiveJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains Hive queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Hive command: ``SET name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/hive/conf/hive-site.xml, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "pig_job": {
                          "description": "Optional. Job is a Pig job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PigJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains the Pig queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Pig command: ``name=[value]``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/pig/conf/pig.properties, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_r_job": {
                          "description": "Optional. Job is a SparkR job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkRJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_r_file_uri": {
                                "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_r_file_uri"
                            ]
                          }
                        },
                        "spark_sql_job": {
                          "description": "Optional. Job is a SparkSql job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkSqlJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET ``name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "presto_job": {
                          "description": "Optional. Job is a Presto job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PrestoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Presto client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Presto `session properties <https://prestodb.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Presto CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trino_job": {
                          "description": "Optional. Job is a Trino job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.TrinoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Trino client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Trino `session properties <https://trino.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Trino CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "flink_job": {
                          "description": "Optional. Job is a Flink job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.FlinkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in [jarFileUris][google.cloud.dataproc.v1.FlinkJob.jar_file_uris].  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "savepoint_uri": {
                                "description": "Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/flink/conf/flink-defaults.conf`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "labels": {
                          "description": "Optional. The labels to associate with this job.  Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given job.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "scheduling": {
                          "description": "Optional. Job scheduling configuration.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.JobScheduling",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "max_failures_per_hour": {
                                "description": "Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.  A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.  Maximum value is 10.  **Note:** This restartable job option is not supported in Dataproc [workflow templates] (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).",
                                "type": "integer"
                              },
                              "max_failures_total": {
                                "description": "Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.  Maximum value is 240.  **Note:** Currently, this restartable job option is not supported in Dataproc `workflow templates <https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template>`__.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "prerequisite_step_ids": {
                          "description": "Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "step_id"
                      ]
                    }
                  }
                },
                "parameters": {
                  "description": "Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.TemplateParameter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.",
                          "type": "string"
                        },
                        "fields": {
                          "description": "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.  A field path is similar in syntax to a [google.protobuf.FieldMask][google.protobuf.FieldMask]. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as ``placement.clusterSelector.zone``.  Also, field paths can reference fields using the following syntax:  -  Values in maps can be referenced by key:  -  labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  placement.managedCluster.labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  jobs['step-id'].labels['key']  -  Jobs in the jobs list can be referenced by step-id:  -  jobs['step-id'].hadoopJob.mainJarFileUri -  jobs['step-id'].hiveJob.queryFileUri -  jobs['step-id'].pySparkJob.mainPythonFileUri -  jobs['step-id'].hadoopJob.jarFileUris[0] -  jobs['step-id'].hadoopJob.archiveUris[0] -  jobs['step-id'].hadoopJob.fileUris[0] -  jobs['step-id'].pySparkJob.pythonFileUris[0]  -  Items in repeated fields can be referenced by a zero-based index:  -  jobs['step-id'].sparkJob.args[0]  -  Other examples:  -  jobs['step-id'].hadoopJob.properties['key'] -  jobs['step-id'].hadoopJob.args[0] -  jobs['step-id'].hiveJob.scriptVariables['key'] -  jobs['step-id'].hadoopJob.mainJarFileUri -  placement.clusterSelector.zone  It may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid:  -  placement.clusterSelector.clusterLabels -  jobs['step-id'].sparkJob.args",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Brief description of the parameter. Must not exceed 1024 characters.",
                          "type": "string"
                        },
                        "validation": {
                          "description": "Optional. Validation rules to be applied to this parameter's value.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.ParameterValidation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "regex": {
                                "description": "Validation based on regular expressions.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.RegexValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "regexes": {
                                      "description": "Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "regexes"
                                  ]
                                }
                              },
                              "values": {
                                "description": "Validation based on a list of allowed values.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.ValueValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "description": "Required. List of allowed values for the parameter.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "values"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name",
                        "fields"
                      ]
                    }
                  }
                },
                "dag_timeout": {
                  "description": "Optional. Timeout duration for the DAG of jobs, expressed in seconds (see `JSON representation of duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__). The timeout duration must be from 10 minutes (\"600s\") to 24 hours (\"86400s\"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a `managed cluster </dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster>`__, the cluster is deleted.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "encryption_config": {
                  "description": "Optional. Encryption settings for encrypting workflow template job arguments.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate.EncryptionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kms_key_name": {
                        "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "placement",
                "jobs"
              ]
            }
          },
          "request_id": {
            "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.  It is recommended to always set this value to a `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier>`__.  The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "template"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateWorkflowTemplateRequest",
      "description": "A request to update a workflow template.\n\nAttributes:\n    template (google.cloud.dataproc_v1.types.WorkflowTemplate):\n        Required. The updated workflow template.\n\n        The ``template.version`` field must match the current\n        version.",
      "parameters": {
        "type": "object",
        "properties": {
          "template": {
            "description": "Required. The updated workflow template.  The ``template.version`` field must match the current version.",
            "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
                  "type": "string",
                  "output_only": true
                },
                "version": {
                  "description": "Optional. Used to perform a consistent read-modify-write.  This field should be left blank for a ``CreateWorkflowTemplate`` request. It is required for an ``UpdateWorkflowTemplate`` request, and must match the current server version. A typical update template flow would fetch the current template with a ``GetWorkflowTemplate`` request, which will return the current template with the ``version`` field filled in with the current server version. The user updates other fields in the template, then returns it as part of the ``UpdateWorkflowTemplate`` request.",
                  "type": "integer"
                },
                "create_time": {
                  "description": "Output only. The time template was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time template was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.  Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__.  No more than 32 labels can be associated with a template.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "placement": {
                  "description": "Required. WorkflowTemplate scheduling information.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplatePlacement",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "managed_cluster": {
                        "description": "A cluster that is managed by the workflow.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ManagedCluster",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cluster_name": {
                              "description": "Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.  The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.",
                              "type": "string"
                            },
                            "config": {
                              "description": "Required. The cluster configuration.",
                              "type": "object",
                              "reference": "google.cloud.dataproc_v1.types.ClusterConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "config_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "temp_bucket": {
                                    "description": "Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see `Dataproc staging and temp buckets <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket>`__). **This field requires a Cloud Storage bucket name, not a ``gs://...`` URI to a Cloud Storage bucket.**",
                                    "type": "string"
                                  },
                                  "gce_cluster_config": {
                                    "description": "Optional. The shared Compute Engine config settings for all instances in a cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.GceClusterConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "zone_uri": {
                                          "description": "Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`` -  ``projects/[project_id]/zones/[zone]`` -  ``[zone]``",
                                          "type": "string"
                                        },
                                        "network_uri": {
                                          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither ``network_uri`` nor ``subnetwork_uri`` is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see `Using Subnetworks <https://cloud.google.com/compute/docs/subnetworks>`__ for more information).  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default`` -  ``default``",
                                          "type": "string"
                                        },
                                        "subnetwork_uri": {
                                          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``projects/[project_id]/regions/[region]/subnetworks/sub0`` -  ``sub0``",
                                          "type": "string"
                                        },
                                        "internal_ip_only": {
                                          "description": "Optional. This setting applies to subnetwork-enabled networks. It is set to ``true`` by default in clusters created with image versions 2.2.x.  When set to ``true``:  -  All cluster VMs have internal IP addresses. -  [Google Private Access] (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. -  Off-cluster dependencies must be configured to be accessible without external IP addresses.  When set to ``false``:  -  Cluster VMs are not restricted to internal IP addresses. -  Ephemeral external IP addresses are assigned to each cluster VM.  This field is a member of `oneof`_ ``_internal_ip_only``.",
                                          "type": "boolean"
                                        },
                                        "private_ipv6_google_access": {
                                          "description": "Optional. The type of IPv6 access for a cluster.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.GceClusterConfig.PrivateIpv6GoogleAccess"
                                        },
                                        "service_account": {
                                          "description": "Optional. The `Dataproc service account <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc>`__ (also see `VM Data Plane identity <https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity>`__) used by Dataproc cluster VM instances to access Google Cloud Platform services.  If not specified, the `Compute Engine default service account <https://cloud.google.com/compute/docs/access/service-accounts#default_service_account>`__ is used.",
                                          "type": "string"
                                        },
                                        "service_account_scopes": {
                                          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:  -  https://www.googleapis.com/auth/cloud.useraccounts.readonly -  https://www.googleapis.com/auth/devstorage.read_write -  https://www.googleapis.com/auth/logging.write  If no scopes are specified, the following defaults are also provided:  -  https://www.googleapis.com/auth/bigquery -  https://www.googleapis.com/auth/bigtable.admin.table -  https://www.googleapis.com/auth/bigtable.data -  https://www.googleapis.com/auth/devstorage.full_control",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "tags": {
                                          "description": "The Compute Engine network tags to add to all instances (see `Tagging instances <https://cloud.google.com/vpc/docs/add-remove-network-tags>`__).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "metadata": {
                                          "description": "Optional. The Compute Engine metadata entries to add to all instances (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__).",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "reservation_affinity": {
                                          "description": "Optional. Reservation Affinity for consuming Zonal reservation.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ReservationAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "consume_reservation_type": {
                                                "description": "Corresponds to the type of reservation consumption.",
                                                "type": "object",
                                                "reference": "google.cloud.container_v1beta1.types.ReservationAffinity.Type"
                                              },
                                              "key": {
                                                "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "Corresponds to the label value(s) of reservation resource(s).",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "node_group_affinity": {
                                          "description": "Optional. Node Group Affinity for sole-tenant clusters.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.NodeGroupAffinity",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "node_group_uri": {
                                                "description": "Required. The URI of a sole-tenant `node group resource <https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups>`__ that the cluster will be created on.  A full URL, partial URI, or node group name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``projects/[project_id]/zones/[zone]/nodeGroups/node-group-1`` -  ``node-group-1``",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "node_group_uri"
                                            ]
                                          }
                                        },
                                        "shielded_instance_config": {
                                          "description": "Optional. Shielded Instance Config for clusters using `Compute Engine Shielded VMs <https://cloud.google.com/security/shielded-cloud/shielded-vm>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ShieldedInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_secure_boot": {
                                                "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                                                "type": "boolean"
                                              },
                                              "enable_integrity_monitoring": {
                                                "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "confidential_instance_config": {
                                          "description": "Optional. Confidential Instance Config for clusters using `Confidential VMs <https://cloud.google.com/compute/confidential-vm/docs>`__.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ConfidentialInstanceConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "enable_confidential_compute": {
                                                "description": "Optional. Defines whether the instance should have confidential compute enabled.  This field is a member of `oneof`_ ``_enable_confidential_compute``.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "master_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's master instance.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "worker_config": {
                                    "description": "Optional. The Compute Engine config settings for the cluster's worker instances.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "secondary_worker_config": {
                                    "description": "Optional. The Compute Engine config settings for a cluster's secondary worker instances",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "num_instances": {
                                          "description": "Optional. The number of VM instances in the instance group. For `HA cluster </dataproc/docs/concepts/configuring-clusters/high-availability>`__ `master_config <#FIELDS.master_config>`__ groups, **must be set to 3**. For standard cluster `master_config <#FIELDS.master_config>`__ groups, **must be set to 1**.",
                                          "type": "integer"
                                        },
                                        "instance_names": {
                                          "description": "Output only. The list of instance names. Dataproc derives the names from ``cluster_name``, ``num_instances``, and the instance group.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "instance_references": {
                                          "description": "Output only. List of references to Compute Engine instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.InstanceReference",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "instance": {
                                                  "description": "The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances  This field is a member of `oneof`_ ``_instance``.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "output_only": true
                                        },
                                        "image_uri": {
                                          "description": "Optional. The Compute Engine image resource used for cluster instances.  The URI can represent an image or image family.  Image examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`` -  ``projects/[project_id]/global/images/[image-id]`` -  ``image-id``  Image family examples. Dataproc will use the most recent image from the family:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`` -  ``projects/[project_id]/global/images/family/[custom-image-family-name]``  If the URI is unspecified, it will be inferred from ``SoftwareConfig.image_version`` or the system default.",
                                          "type": "string"
                                        },
                                        "machine_type_uri": {
                                          "description": "Optional. The Compute Engine machine type used for cluster instances.  A full URL, partial URI, or short name are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`` -  ``n1-standard-2``  **Auto Zone Exception**: If you are using the Dataproc `Auto Zone Placement <https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement>`__ feature, you must use the short name of the machine type resource, for example, ``n1-standard-2``.",
                                          "type": "string"
                                        },
                                        "disk_config": {
                                          "description": "Optional. Disk option config settings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.DiskConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "boot_disk_type": {
                                                "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See `Disk types <https://cloud.google.com/compute/docs/disks#disk-types>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_size_gb": {
                                                "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                                                "type": "integer"
                                              },
                                              "num_local_ssds": {
                                                "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and `HDFS <https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html>`__ data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.  Note: Local SSD options may vary by machine type and number of vCPUs selected.",
                                                "type": "integer"
                                              },
                                              "local_ssd_interface": {
                                                "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See `local SSD performance <https://cloud.google.com/compute/docs/disks/local-ssd#performance>`__.",
                                                "type": "string"
                                              },
                                              "boot_disk_provisioned_iops": {
                                                "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_iops``.",
                                                "type": "integer"
                                              },
                                              "boot_disk_provisioned_throughput": {
                                                "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.  This field is a member of `oneof`_ ``_boot_disk_provisioned_throughput``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "is_preemptible": {
                                          "description": "Output only. Specifies that this instance group contains preemptible instances.",
                                          "type": "boolean",
                                          "output_only": true
                                        },
                                        "preemptibility": {
                                          "description": "Optional. Specifies the preemptibility of the instance group.  The default value for master and worker groups is ``NON_PREEMPTIBLE``. This default cannot be changed.  The default value for secondary instances is ``PREEMPTIBLE``.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceGroupConfig.Preemptibility"
                                        },
                                        "managed_group_config": {
                                          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.ManagedGroupConfig",
                                          "output_only": true,
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "instance_template_name": {
                                                "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_name": {
                                                "description": "Output only. The name of the Instance Group Manager for this group.",
                                                "type": "string",
                                                "output_only": true
                                              },
                                              "instance_group_manager_uri": {
                                                "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                                                "type": "string",
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "accelerators": {
                                          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.AcceleratorConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "accelerator_count": {
                                                  "description": "The number of the accelerator cards exposed to an instance.",
                                                  "type": "integer"
                                                },
                                                "accelerator_type": {
                                                  "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                                  "type": "string"
                                                },
                                                "gpu_partition_size": {
                                                  "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                                  "type": "string"
                                                },
                                                "max_time_shared_clients_per_gpu": {
                                                  "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                                  "type": "integer"
                                                },
                                                "gpu_sharing_config": {
                                                  "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_shared_clients_per_gpu": {
                                                        "description": "The max number of containers that can share a physical GPU.",
                                                        "type": "integer"
                                                      },
                                                      "gpu_sharing_strategy": {
                                                        "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                                      }
                                                    }
                                                  }
                                                },
                                                "gpu_driver_installation_config": {
                                                  "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gpu_driver_version": {
                                                        "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_cpu_platform": {
                                          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See `Dataproc -> Minimum CPU Platform <https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu>`__.",
                                          "type": "string"
                                        },
                                        "min_num_instances": {
                                          "description": "Optional. The minimum number of primary worker instances to create. If ``min_num_instances`` is set, cluster creation will succeed if the number of primary workers created is at least equal to the ``min_num_instances`` number.  Example: Cluster creation request with ``num_instances`` = ``5`` and ``min_num_instances`` = ``3``:  -  If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a ``RUNNING`` state. -  If 2 instances are created and 3 instances fail, the cluster in placed in an ``ERROR`` state. The failed VMs are not deleted.",
                                          "type": "integer"
                                        },
                                        "instance_flexibility_policy": {
                                          "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "provisioning_model_mix": {
                                                "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                                                "type": "object",
                                                "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.ProvisioningModelMix",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "standard_capacity_base": {
                                                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.  This field is a member of `oneof`_ ``_standard_capacity_base``.",
                                                      "type": "integer"
                                                    },
                                                    "standard_capacity_percent_above_base": {
                                                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.  This field is a member of `oneof`_ ``_standard_capacity_percent_above_base``.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_list": {
                                                "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelection",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_types": {
                                                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "rank": {
                                                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "instance_selection_results": {
                                                "description": "Output only. A list of instance selection results in the group.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "reference": "google.cloud.dataproc_v1.types.InstanceFlexibilityPolicy.InstanceSelectionResult",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "machine_type": {
                                                        "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".  This field is a member of `oneof`_ ``_machine_type``.",
                                                        "type": "string",
                                                        "output_only": true
                                                      },
                                                      "vm_count": {
                                                        "description": "Output only. Number of VM provisioned with the machine_type.  This field is a member of `oneof`_ ``_vm_count``.",
                                                        "type": "integer",
                                                        "output_only": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_only": true
                                              }
                                            }
                                          }
                                        },
                                        "startup_config": {
                                          "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.StartupConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "required_registration_fraction": {
                                                "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).  This field is a member of `oneof`_ ``_required_registration_fraction``.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "software_config": {
                                    "description": "Optional. The config settings for cluster software.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SoftwareConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "image_version": {
                                          "description": "Optional. The version of software inside the cluster. It must be one of the supported `Dataproc Versions <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported-dataproc-image-versions>`__, such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the `\"preview\" version <https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions>`__. If unspecified, it defaults to the latest Debian version.",
                                          "type": "string"
                                        },
                                        "properties": {
                                          "description": "Optional. The properties to set on daemon config files.  Property keys are specified in ``prefix:property`` format, for example ``core:hadoop.tmp.dir``. The following are supported prefixes and their mappings:  -  capacity-scheduler: ``capacity-scheduler.xml`` -  core: ``core-site.xml`` -  distcp: ``distcp-default.xml`` -  hdfs: ``hdfs-site.xml`` -  hive: ``hive-site.xml`` -  mapred: ``mapred-site.xml`` -  pig: ``pig.properties`` -  spark: ``spark-defaults.conf`` -  yarn: ``yarn-site.xml``  For more information, see `Cluster properties <https://cloud.google.com/dataproc/docs/concepts/cluster-properties>`__.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "optional_components": {
                                          "description": "Optional. The set of components to activate on the cluster.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.Component"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "initialization_actions": {
                                    "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's ``role`` metadata to run an executable on a master or worker node, as shown below using ``curl`` (you can also use ``wget``):  ::  ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.NodeInitializationAction",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "executable_file": {
                                            "description": "Required. Cloud Storage URI of executable file.",
                                            "type": "string"
                                          },
                                          "execution_timeout": {
                                            "description": "Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
                                            "type": "object",
                                            "reference": "google.protobuf.duration_pb2.Duration",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "nanos": {
                                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                  "type": "integer"
                                                },
                                                "seconds": {
                                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "executable_file"
                                        ]
                                      }
                                    }
                                  },
                                  "encryption_config": {
                                    "description": "Optional. Encryption settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EncryptionConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kms_key_name": {
                                          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "autoscaling_config": {
                                    "description": "Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.AutoscalingConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "policy_uri": {
                                          "description": "Optional. The autoscaling policy used by the cluster.  Only resource names including projectid and location (region) are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]`` -  ``projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]``  Note that the policy must be in the same project and Dataproc region.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "security_config": {
                                    "description": "Optional. Security settings for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.SecurityConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "kerberos_config": {
                                          "description": "Optional. Kerberos related configuration.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.KerberosConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "keytab": {
                                                "description": "A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).",
                                                "type": "object",
                                                "reference": "google.cloud.metastore_v1alpha.types.Secret",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key_name": {
                                                      "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                                      "type": "string"
                                                    },
                                                    "cipher_text": {
                                                      "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "principal": {
                                                "description": "A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form ``primary/instance@REALM``, but there is no exact format.",
                                                "type": "string"
                                              },
                                              "krb5_config_gcs_uri": {
                                                "description": "A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form ``gs://{bucket_name}/path/to/krb5.conf``, although the file does not need to be named krb5.conf explicitly.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "identity_config": {
                                          "description": "Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.",
                                          "type": "object",
                                          "reference": "google.cloud.dataproc_v1.types.IdentityConfig",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "user_service_account_mapping": {
                                                "description": "Required. Map of user to service account.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "user_service_account_mapping"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "lifecycle_config": {
                                    "description": "Optional. Lifecycle setting for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.LifecycleConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "idle_delete_ttl": {
                                          "description": "Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "auto_delete_time": {
                                          "description": "Optional. The time when cluster will be auto-deleted (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                        },
                                        "auto_delete_ttl": {
                                          "description": "Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of `Duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).  This field is a member of `oneof`_ ``ttl``.",
                                          "type": "object",
                                          "reference": "google.protobuf.duration_pb2.Duration",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "nanos": {
                                                "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                "type": "integer"
                                              },
                                              "seconds": {
                                                "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "idle_start_time": {
                                          "description": "Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of `Timestamp <https://developers.google.com/protocol-buffers/docs/proto3#json>`__).",
                                          "type": "object",
                                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                          "output_only": true
                                        }
                                      }
                                    }
                                  },
                                  "endpoint_config": {
                                    "description": "Optional. Port/endpoint configuration for this cluster",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.EndpointConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "http_ports": {
                                          "description": "Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          },
                                          "output_only": true
                                        },
                                        "enable_http_port_access": {
                                          "description": "Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "metastore_config": {
                                    "description": "Optional. Metastore configuration.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.MetastoreConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "dataproc_metastore_service": {
                                          "description": "Required. Resource name of an existing Dataproc Metastore service.  Example:  -  ``projects/[project_id]/locations/[dataproc_region]/services/[service-name]``",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "dataproc_metastore_service"
                                      ]
                                    }
                                  },
                                  "dataproc_metric_config": {
                                    "description": "Optional. The config for Dataproc metrics.",
                                    "type": "object",
                                    "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "metrics": {
                                          "description": "Required. Metrics sources to enable.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.DataprocMetricConfig.Metric",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Required. Metric name, e.g., \"nodes total\", \"percent done\".",
                                                  "type": "string"
                                                },
                                                "int_value": {
                                                  "description": "For metrics with integer value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "integer"
                                                },
                                                "double_value": {
                                                  "description": "For metrics with floating point value.  This field is a member of `oneof`_ ``value``.",
                                                  "type": "number"
                                                },
                                                "string_value": {
                                                  "description": "For metrics with custom values (ratios, visual progress, etc.).  This field is a member of `oneof`_ ``value``.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "metrics"
                                      ]
                                    }
                                  },
                                  "auxiliary_node_groups": {
                                    "description": "Optional. The node group settings.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.dataproc_v1.types.AuxiliaryNodeGroup",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "node_group": {
                                            "description": "Required. Node group configuration.",
                                            "type": "object",
                                            "reference": "google.cloud.dataproc_v1.types.NodeGroup",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "autoscaling_policy": {
                                                  "description": "Specifies how autoscaling should behave.  This field is a member of `oneof`_ ``_autoscaling_policy``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupAutoscalingPolicy",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_nodes": {
                                                        "description": "The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.  This field is a member of `oneof`_ ``_max_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "min_nodes": {
                                                        "description": "The minimum number of nodes that the group should have.  This field is a member of `oneof`_ ``_min_nodes``.",
                                                        "type": "integer"
                                                      },
                                                      "mode": {
                                                        "description": "The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes. Check the Mode enum for the list of possible values.  This field is a member of `oneof`_ ``_mode``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "creation_timestamp": {
                                                  "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "description": {
                                                  "description": "An optional description of this resource. Provide this property when you create the resource.  This field is a member of `oneof`_ ``_description``.",
                                                  "type": "string"
                                                },
                                                "fingerprint": {
                                                  "description": "This field is a member of `oneof`_ ``_fingerprint``.",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "kind": {
                                                  "description": "[Output Only] The type of the resource. Always compute#nodeGroup for node group.  This field is a member of `oneof`_ ``_kind``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "location_hint": {
                                                  "description": "An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.  This field is a member of `oneof`_ ``_location_hint``.",
                                                  "type": "string"
                                                },
                                                "maintenance_interval": {
                                                  "description": "Specifies the frequency of planned maintenance events. The accepted values are: ``AS_NEEDED`` and ``RECURRENT``. Check the MaintenanceInterval enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                                                  "type": "string"
                                                },
                                                "maintenance_policy": {
                                                  "description": "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies. Check the MaintenancePolicy enum for the list of possible values.  This field is a member of `oneof`_ ``_maintenance_policy``.",
                                                  "type": "string"
                                                },
                                                "maintenance_window": {
                                                  "description": "This field is a member of `oneof`_ ``_maintenance_window``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.NodeGroupMaintenanceWindow",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "maintenance_duration": {
                                                        "description": "[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.  This field is a member of `oneof`_ ``_maintenance_duration``.",
                                                        "type": "object",
                                                        "reference": "google.cloud.compute_v1.types.Duration",
                                                        "output_only": true,
                                                        "resolved_schema": {
                                                          "type": "object",
                                                          "properties": {
                                                            "nanos": {
                                                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                                              "type": "integer"
                                                            },
                                                            "seconds": {
                                                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                                              "type": "integer"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "start_time": {
                                                        "description": "Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.  This field is a member of `oneof`_ ``_start_time``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.  This field is a member of `oneof`_ ``_name``.",
                                                  "type": "string"
                                                },
                                                "node_template": {
                                                  "description": "URL of the node template to create the node group from.  This field is a member of `oneof`_ ``_node_template``.",
                                                  "type": "string"
                                                },
                                                "self_link": {
                                                  "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                                                  "type": "string",
                                                  "output_only": true
                                                },
                                                "share_settings": {
                                                  "description": "Share-settings for the node group  This field is a member of `oneof`_ ``_share_settings``.",
                                                  "type": "object",
                                                  "reference": "google.cloud.compute_v1.types.ShareSettings",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "project_map": {
                                                        "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "object",
                                                          "reference": "google.cloud.compute_v1.types.ShareSettingsProjectConfig",
                                                          "resolved_schema": {
                                                            "type": "object",
                                                            "properties": {
                                                              "project_id": {
                                                                "description": "The project ID, should be same as the key of this project config in the parent map.  This field is a member of `oneof`_ ``_project_id``.",
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "share_type": {
                                                        "description": "Type of sharing for this shared-reservation Check the ShareType enum for the list of possible values.  This field is a member of `oneof`_ ``_share_type``.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "size": {
                                                  "description": "[Output Only] The total number of nodes in the node group.  This field is a member of `oneof`_ ``_size``.",
                                                  "type": "integer",
                                                  "output_only": true
                                                },
                                                "status": {
                                                  "description": "Check the Status enum for the list of possible values.  This field is a member of `oneof`_ ``_status``.",
                                                  "type": "string"
                                                },
                                                "zone": {
                                                  "description": "[Output Only] The name of the zone where the node group resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                                                  "type": "string",
                                                  "output_only": true
                                                }
                                              }
                                            }
                                          },
                                          "node_group_id": {
                                            "description": "Optional. A node group ID. Generated if not specified.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "node_group"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Optional. The labels to associate with this cluster.  Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_name",
                            "config"
                          ]
                        }
                      },
                      "cluster_selector": {
                        "description": "Optional. A selector that chooses target cluster for jobs based on metadata.  The selector is evaluated at the time each job is submitted.  This field is a member of `oneof`_ ``placement``.",
                        "type": "object",
                        "reference": "google.cloud.dataproc_v1.types.ClusterSelector",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "zone": {
                              "description": "Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.  If unspecified, the zone of the first cluster matching the selector is used.",
                              "type": "string"
                            },
                            "cluster_labels": {
                              "description": "Required. The cluster labels. Cluster must have all labels to match.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "cluster_labels"
                          ]
                        }
                      }
                    }
                  }
                },
                "jobs": {
                  "description": "Required. The Directed Acyclic Graph of Jobs to submit.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.OrderedJob",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "step_id": {
                          "description": "Required. The step id. The id must be unique among all jobs within the template.  The step id is used as prefix for job id, as job ``goog-dataproc-workflow-step-id`` label, and in [prerequisiteStepIds][google.cloud.dataproc.v1.OrderedJob.prerequisite_step_ids] field from other steps.  The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.",
                          "type": "string"
                        },
                        "hadoop_job": {
                          "description": "Optional. Job is a Hadoop job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HadoopJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file containing the main class. Examples:  'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in ``jar_file_uris``.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``-libjars`` or ``-Dfoo=bar``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types:  .jar, .tar, .tar.gz, .tgz, or .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_job": {
                          "description": "Optional. Job is a Spark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pyspark_job": {
                          "description": "Optional. Job is a PySpark job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PySparkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_python_file_uri": {
                                "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "python_file_uris": {
                                "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_python_file_uri"
                            ]
                          }
                        },
                        "hive_job": {
                          "description": "Optional. Job is a Hive job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.HiveJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains Hive queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Hive command: ``SET name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/hive/conf/hive-site.xml, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "pig_job": {
                          "description": "Optional. Job is a Pig job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PigJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains the Pig queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Pig command: ``name=[value]``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/hadoop/conf/*-site.xml``, /etc/pig/conf/pig.properties, and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spark_r_job": {
                          "description": "Optional. Job is a SparkR job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkRJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_r_file_uri": {
                                "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_uris": {
                                "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "archive_uris": {
                                "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types:  .jar, .tar, .tar.gz, .tgz, and .zip.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "main_r_file_uri"
                            ]
                          }
                        },
                        "spark_sql_job": {
                          "description": "Optional. Job is a SparkSql job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.SparkSqlJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "script_variables": {
                                "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET ``name=\"value\";``).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "presto_job": {
                          "description": "Optional. Job is a Presto job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.PrestoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Presto client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Presto `session properties <https://prestodb.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Presto CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trino_job": {
                          "description": "Optional. Job is a Trino job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.TrinoJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_file_uri": {
                                "description": "The HCFS URI of the script that contains SQL queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "string"
                              },
                              "query_list": {
                                "description": "A list of queries.  This field is a member of `oneof`_ ``queries``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.QueryList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "queries": {
                                      "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob:  ::  \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "queries"
                                  ]
                                }
                              },
                              "continue_on_failure": {
                                "description": "Optional. Whether to continue executing queries if a query fails. The default value is ``false``. Setting to ``true`` can be useful when executing independent parallel queries.",
                                "type": "boolean"
                              },
                              "output_format": {
                                "description": "Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats",
                                "type": "string"
                              },
                              "client_tags": {
                                "description": "Optional. Trino client tags to attach to this query",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values. Used to set Trino `session properties <https://trino.io/docs/current/sql/set-session.html>`__ Equivalent to using the --session flag in the Trino CLI",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "flink_job": {
                          "description": "Optional. Job is a Flink job.  This field is a member of `oneof`_ ``job_type``.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.FlinkJob",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "main_jar_file_uri": {
                                "description": "The HCFS URI of the jar file that contains the main class.  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "main_class": {
                                "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in [jarFileUris][google.cloud.dataproc.v1.FlinkJob.jar_file_uris].  This field is a member of `oneof`_ ``driver``.",
                                "type": "string"
                              },
                              "args": {
                                "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as ``--conf``, that can be set as job properties, since a collision might occur that causes an incorrect job submission.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "jar_file_uris": {
                                "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "savepoint_uri": {
                                "description": "Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in ``/etc/flink/conf/flink-defaults.conf`` and classes in user code.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logging_config": {
                                "description": "Optional. The runtime log config for job execution.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.LoggingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "component_config": {
                                      "description": "Logging components configuration",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "enable_components": {
                                            "description": "Select components to collect logs. An empty set would disable all logging.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.container_v1beta1.types.LoggingComponentConfig.Component"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "labels": {
                          "description": "Optional. The labels to associate with this job.  Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}  Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}  No more than 32 labels can be associated with a given job.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "scheduling": {
                          "description": "Optional. Job scheduling configuration.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.JobScheduling",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "max_failures_per_hour": {
                                "description": "Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.  A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.  Maximum value is 10.  **Note:** This restartable job option is not supported in Dataproc [workflow templates] (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).",
                                "type": "integer"
                              },
                              "max_failures_total": {
                                "description": "Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.  Maximum value is 240.  **Note:** Currently, this restartable job option is not supported in Dataproc `workflow templates <https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template>`__.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "prerequisite_step_ids": {
                          "description": "Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "step_id"
                      ]
                    }
                  }
                },
                "parameters": {
                  "description": "Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dataproc_v1.types.TemplateParameter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.",
                          "type": "string"
                        },
                        "fields": {
                          "description": "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.  A field path is similar in syntax to a [google.protobuf.FieldMask][google.protobuf.FieldMask]. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as ``placement.clusterSelector.zone``.  Also, field paths can reference fields using the following syntax:  -  Values in maps can be referenced by key:  -  labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  placement.managedCluster.labels['key'] -  placement.clusterSelector.clusterLabels['key'] -  jobs['step-id'].labels['key']  -  Jobs in the jobs list can be referenced by step-id:  -  jobs['step-id'].hadoopJob.mainJarFileUri -  jobs['step-id'].hiveJob.queryFileUri -  jobs['step-id'].pySparkJob.mainPythonFileUri -  jobs['step-id'].hadoopJob.jarFileUris[0] -  jobs['step-id'].hadoopJob.archiveUris[0] -  jobs['step-id'].hadoopJob.fileUris[0] -  jobs['step-id'].pySparkJob.pythonFileUris[0]  -  Items in repeated fields can be referenced by a zero-based index:  -  jobs['step-id'].sparkJob.args[0]  -  Other examples:  -  jobs['step-id'].hadoopJob.properties['key'] -  jobs['step-id'].hadoopJob.args[0] -  jobs['step-id'].hiveJob.scriptVariables['key'] -  jobs['step-id'].hadoopJob.mainJarFileUri -  placement.clusterSelector.zone  It may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid:  -  placement.clusterSelector.clusterLabels -  jobs['step-id'].sparkJob.args",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Brief description of the parameter. Must not exceed 1024 characters.",
                          "type": "string"
                        },
                        "validation": {
                          "description": "Optional. Validation rules to be applied to this parameter's value.",
                          "type": "object",
                          "reference": "google.cloud.dataproc_v1.types.ParameterValidation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "regex": {
                                "description": "Validation based on regular expressions.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.RegexValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "regexes": {
                                      "description": "Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "regexes"
                                  ]
                                }
                              },
                              "values": {
                                "description": "Validation based on a list of allowed values.  This field is a member of `oneof`_ ``validation_type``.",
                                "type": "object",
                                "reference": "google.cloud.dataproc_v1.types.ValueValidation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "description": "Required. List of allowed values for the parameter.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "values"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name",
                        "fields"
                      ]
                    }
                  }
                },
                "dag_timeout": {
                  "description": "Optional. Timeout duration for the DAG of jobs, expressed in seconds (see `JSON representation of duration <https://developers.google.com/protocol-buffers/docs/proto3#json>`__). The timeout duration must be from 10 minutes (\"600s\") to 24 hours (\"86400s\"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a `managed cluster </dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster>`__, the cluster is deleted.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "encryption_config": {
                  "description": "Optional. Encryption settings for encrypting workflow template job arguments.",
                  "type": "object",
                  "reference": "google.cloud.dataproc_v1.types.WorkflowTemplate.EncryptionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kms_key_name": {
                        "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "placement",
                "jobs"
              ]
            }
          }
        },
        "required": [
          "template"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListWorkflowTemplatesRequest",
      "description": "A request to list workflow templates in a project.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the region or location, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.workflowTemplates,list``, the\n           resource name of the region has the following format:\n           ``projects/{project_id}/regions/{region}``\n\n        -  For ``projects.locations.workflowTemplates.list``, the\n           resource name of the location has the following format:\n           ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Optional. The maximum number of results to\n        return in each response.\n    page_token (str):\n        Optional. The page token, returned by a\n        previous call, to request the next page of\n        results.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates,list``, the resource name of the region has the following format: ``projects/{project_id}/regions/{region}``  -  For ``projects.locations.workflowTemplates.list``, the resource name of the location has the following format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of results to return in each response.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteWorkflowTemplateRequest",
      "description": "A request to delete a workflow template.\n\nCurrently started workflows will remain running.\n\nAttributes:\n    name (str):\n        Required. The resource name of the workflow template, as\n        described in\n        https://cloud.google.com/apis/design/resource_names.\n\n        -  For ``projects.regions.workflowTemplates.delete``, the\n           resource name of the template has the following format:\n           ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``\n\n        -  For ``projects.locations.workflowTemplates.instantiate``,\n           the resource name of the template has the following\n           format:\n           ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``\n    version (int):\n        Optional. The version of workflow template to\n        delete. If specified, will only delete the\n        template if the current server version matches\n        specified version.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names.  -  For ``projects.regions.workflowTemplates.delete``, the resource name of the template has the following format: ``projects/{project_id}/regions/{region}/workflowTemplates/{template_id}``  -  For ``projects.locations.workflowTemplates.instantiate``, the resource name of the template has the following format: ``projects/{project_id}/locations/{location}/workflowTemplates/{template_id}``",
            "type": "string"
          },
          "version": {
            "description": "Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.",
            "type": "integer"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}