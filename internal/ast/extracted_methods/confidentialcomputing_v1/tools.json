{
  "ConfidentialComputing": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_challenge",
          "description": "Creates a new Challenge in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import confidentialcomputing_v1\n\n    async def sample_create_challenge():\n        # Create a client\n        client = confidentialcomputing_v1.ConfidentialComputingAsyncClient()\n\n        # Initialize request argument(s)\n        request = confidentialcomputing_v1.CreateChallengeRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_challenge(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location where the Challenge will be used, in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "challenge": {
                "type": "google.cloud.confidentialcomputing_v1.types.Challenge",
                "description": "Required. The Challenge to be created. Currently this field can be empty as all the Challenge fields are set by the server.  This corresponds to the ``challenge`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.confidentialcomputing_v1.types.Challenge: A Challenge from the server used to guarantee freshness of attestations"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "challenge",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.confidentialcomputing_v1.types.Challenge"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "verify_attestation",
          "description": "Verifies the provided attestation info, returning a\nsigned OIDC token.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import confidentialcomputing_v1\n\n    async def sample_verify_attestation():\n        # Create a client\n        client = confidentialcomputing_v1.ConfidentialComputingAsyncClient()\n\n        # Initialize request argument(s)\n        request = confidentialcomputing_v1.VerifyAttestationRequest(\n            challenge=\"challenge_value\",\n        )\n\n        # Make the request\n        response = await client.verify_attestation(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.confidentialcomputing_v1.types.VerifyAttestationResponse"
          ]
        }
      }
    ]
  }
}