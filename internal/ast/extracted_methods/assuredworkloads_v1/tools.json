{
  "AssuredWorkloadsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_workload",
          "description": "Creates Assured Workload.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_create_workload():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        workload = assuredworkloads_v1.Workload()\n        workload.display_name = \"display_name_value\"\n        workload.compliance_regime = \"ASSURED_WORKLOADS_FOR_PARTNERS\"\n\n        request = assuredworkloads_v1.CreateWorkloadRequest(\n            parent=\"parent_value\",\n            workload=workload,\n        )\n\n        # Make ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the new Workload's parent. Must be of the form ``organizations/{org_id}/locations/{location_id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workload": {
                "type": "google.cloud.assuredworkloads_v1.types.Workload",
                "description": "Required. Assured Workload to create This corresponds to the ``workload`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.assuredworkloads_v1.types.Workload` A Workload object for managing highly regulated workloads of cloud customers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workload",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workload",
          "description": "Updates an existing workload. Currently allows updating of\nworkload display_name and labels. For force updates don't set\netag field in the Workload. Only one update operation per\nworkload can be in progress.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_update_workload():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        workload = assuredworkloads_v1.Workload()\n        workload.display_name = \"display_name_value\"\n        workload.compliance_regime = \"ASSU",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workload": {
                "type": "google.cloud.assuredworkloads_v1.types.Workload",
                "description": "Required. The workload to update. The workload's ``name`` field is used to identify the workload to be updated. Format: organizations/{org_id}/locations/{location_id}/workloads/{workload_id}  This corresponds to the ``workload`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.assuredworkloads_v1.types.Workload: A Workload object for managing highly regulated workloads of cloud customers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workload",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restrict_allowed_resources",
          "description": "Restrict the list of resources allowed in the\nWorkload environment. The current list of allowed\nproducts can be found at\nhttps://cloud.google.com/assured-workloads/docs/supported-products\nIn addition to assuredworkloads.workload.update\npermission, the user should also have\norgpolicy.policy.set permission on the folder resource\nto use this functionality.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_restrict_allowed_resources():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workload",
          "description": "Deletes the workload. Make sure that workload's direct children\nare already in a deleted state, otherwise the request will fail\nwith a FAILED_PRECONDITION error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_delete_workload():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = assuredworkloads_v1.DeleteWorkloadRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_workload(request=request)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``name`` field is used to identify the workload. Format: organizations/{org_id}/locations/{location_id}/workloads/{workload_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workload",
          "description": "Gets Assured Workload associated with a CRM Node\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_get_workload():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = assuredworkloads_v1.GetWorkloadRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workload(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.assuredworkload",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Workload to fetch. This is the workload's relative path in the API, formatted as \"organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}\". For example, \"organizations/123/locations/us-east1/workloads/assured-workload-1\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.assuredworkloads_v1.types.Workload: A Workload object for managing highly regulated workloads of cloud customers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workloads",
          "description": "Lists Assured Workloads under a CRM Node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_list_workloads():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = assuredworkloads_v1.ListWorkloadsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workloads(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent Resource to list workloads from. Must be of the form ``organizations/{org_id}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.assuredworkloads_v1.services.assured_workloads_service.pagers.ListWorkloadsAsyncPager: Response of ListWorkloads endpoint.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_violations",
          "description": "Lists the Violations in the AssuredWorkload Environment. Callers\nmay also choose to read across multiple Workloads as per\n`AIP-159 <https://google.aip.dev/159>`__ by using '-' (the\nhyphen or dash character) as a wildcard character instead of\nworkload-id in the parent. Format\n``organizations/{org_id}/locations/{location}/workloads/-``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_list_violations():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Workload name. Format ``organizations/{org_id}/locations/{location}/workloads/{workload}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.assuredworkloads_v1.services.assured_workloads_service.pagers.ListViolationsAsyncPager: Response of ListViolations endpoint.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_violation",
          "description": "Retrieves Assured Workload Violation based on ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_get_violation():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = assuredworkloads_v1.GetViolationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_violation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.assuredwork",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Violation to fetch (ie. Violation.name). Format:  organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violation}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.assuredworkloads_v1.types.Violation: Workload monitoring Violation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "acknowledge_violation",
          "description": "Acknowledges an existing violation. By acknowledging\na violation, users acknowledge the existence of a\ncompliance violation in their workload and decide to\nignore it due to a valid business justification.\nAcknowledgement is a permanent operation and it cannot\nbe reverted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import assuredworkloads_v1\n\n    async def sample_acknowledge_violation():\n        # Create a client\n        client = assuredworkloads_v1.AssuredWorkloadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = assuredworkloads_v1.AcknowledgeViolationRequest(\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}