{
  "DeliveryService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_delivery_vehicle",
          "description": "Creates and returns a new ``DeliveryVehicle``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_create_delivery_vehicle():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.CreateDeliveryVehicleRequest(\n            parent=\"parent_value\",\n            delivery_vehicle_id=\"delivery_vehicle_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_delivery_vehicle(request=request)\n\n        # Handle th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}``. The provider must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "delivery_vehicle": {
                "type": "google.maps.fleetengine_delivery_v1.types.DeliveryVehicle",
                "description": "Required. The ``DeliveryVehicle`` entity to create. When creating a new delivery vehicle, you may set the following optional fields:  -  type -  last_location -  attributes  Note: The DeliveryVehicle's ``name`` field is ignored. All other DeliveryVehicle fields must not be set; otherwise, an error is returned.  This corresponds to the ``delivery_vehicle`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "delivery_vehicle_id": {
                "type": "str",
                "description": "Required. The Delivery Vehicle ID must be unique and subject to the following restrictions:  -  Must be a valid Unicode string. -  Limited to a maximum length of 64 characters. -  Normalized according to [Unicode Normalization Form C] (http://www.unicode.org/reports/tr15/). -  May not contain any of the following ASCII characters: '/', ':', '?', ',', or '#'.  This corresponds to the ``delivery_vehicle_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.DeliveryVehicle: The DeliveryVehicle message. A delivery vehicle transports shipments from a depot to a delivery location, and from a pickup location to the depot. In some cases, delivery vehicles also transport shipments directly from the pickup location to the delivery location.  Note: gRPC and REST APIs use different field naming conventions. For example, the DeliveryVehicle.current_route_segment field in the gRPC API and the DeliveryVehicle.currentRouteSegment field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "delivery_vehicle",
              "delivery_vehicle_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.DeliveryVehicle"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_delivery_vehicle",
          "description": "Returns the specified ``DeliveryVehicle`` instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_get_delivery_vehicle():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.GetDeliveryVehicleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_delivery_vehicle(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}/deliveryVehicles/{delivery_vehicle}``. The ``provider`` must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.DeliveryVehicle: The DeliveryVehicle message. A delivery vehicle transports shipments from a depot to a delivery location, and from a pickup location to the depot. In some cases, delivery vehicles also transport shipments directly from the pickup location to the delivery location.  Note: gRPC and REST APIs use different field naming conventions. For example, the DeliveryVehicle.current_route_segment field in the gRPC API and the DeliveryVehicle.currentRouteSegment field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.DeliveryVehicle"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_delivery_vehicle",
          "description": "Writes updated ``DeliveryVehicle`` data to Fleet Engine, and\nassigns ``Tasks`` to the ``DeliveryVehicle``. You cannot update\nthe name of the ``DeliveryVehicle``. You *can* update\n``remaining_vehicle_journey_segments``, but it must contain all\nof the ``VehicleJourneySegment``\\ s to be persisted on the\n``DeliveryVehicle``. The ``task_id``\\ s are retrieved from\n``remaining_vehicle_journey_segments``, and their corresponding\n``Tasks`` are assigned to the ``DeliveryVehicle`` if they have\nnot yet been assigned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "delivery_vehicle": {
                "type": "google.maps.fleetengine_delivery_v1.types.DeliveryVehicle",
                "description": "Required. The ``DeliveryVehicle`` entity update to apply. Note: You cannot update the name of the ``DeliveryVehicle``.  This corresponds to the ``delivery_vehicle`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A field mask that indicates which ``DeliveryVehicle`` fields to update. Note that the update_mask must contain at least one field.  This is a comma-separated list of fully qualified names of fields. Example: ``\"remaining_vehicle_journey_segments\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.DeliveryVehicle: The DeliveryVehicle message. A delivery vehicle transports shipments from a depot to a delivery location, and from a pickup location to the depot. In some cases, delivery vehicles also transport shipments directly from the pickup location to the delivery location.  Note: gRPC and REST APIs use different field naming conventions. For example, the DeliveryVehicle.current_route_segment field in the gRPC API and the DeliveryVehicle.currentRouteSegment field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "delivery_vehicle",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.DeliveryVehicle"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_tasks",
          "description": "Creates and returns a batch of new ``Task`` objects.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_batch_create_tasks():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        requests = fleetengine_delivery_v1.CreateTaskRequest()\n        requests.parent = \"parent_value\"\n        requests.task_id = \"task_id_value\"\n        requests.task.type_ = \"UNAVAILABLE\"\n        requests.task.state = \"CLOSED\"\n\n        request = fleetengine_delivery_v1.BatchCreateTasksRequest(\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.BatchCreateTasksResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_task",
          "description": "Creates and returns a new ``Task`` object.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_create_task():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        task = fleetengine_delivery_v1.Task()\n        task.type_ = \"UNAVAILABLE\"\n        task.state = \"CLOSED\"\n\n        request = fleetengine_delivery_v1.CreateTaskRequest(\n            parent=\"parent_value\",\n            task_id=\"task_id_value\",\n            task=task,\n        )\n\n        # Make the request\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}``. The ``provider`` must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "task": {
                "type": "google.maps.fleetengine_delivery_v1.types.Task",
                "description": "Required. The Task entity to create. When creating a Task, the following fields are required:  -  ``type`` -  ``state`` (must be set to ``OPEN``) -  ``tracking_id`` (must not be set for ``UNAVAILABLE`` or ``SCHEDULED_STOP`` tasks, but required for all other task types) -  ``planned_location`` (optional for ``UNAVAILABLE`` tasks) -  ``task_duration``  Note: The Task's ``name`` field is ignored. All other Task fields must not be set; otherwise, an error is returned.  This corresponds to the ``task`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "task_id": {
                "type": "str",
                "description": "Required. The Task ID must be unique, but it should be not a shipment tracking ID. To store a shipment tracking ID, use the ``tracking_id`` field. Note that multiple tasks can have the same ``tracking_id``. Task IDs are subject to the following restrictions:  -  Must be a valid Unicode string. -  Limited to a maximum length of 64 characters. -  Normalized according to [Unicode Normalization Form C] (http://www.unicode.org/reports/tr15/). -  May not contain any of the following ASCII characters: '/', ':', '?', ',', or '#'.  This corresponds to the ``task_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.Task: A Task in the Delivery API represents a single action to track. In general, there is a distinction between shipment-related Tasks and break Tasks. A shipment can have multiple Tasks associated with it. For example, there could be one Task for the pickup, and one for the drop-off or transfer. Also, different Tasks for a given shipment can be handled by different vehicles. For example, one vehicle could handle the pickup, driving the shipment to the hub, while another vehicle drives the same shipment from the hub to the drop-off location.  Note: gRPC and REST APIs use different field naming conventions. For example, the Task.journey_sharing_info field in the gRPC API and the Task.journeySharingInfo field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "task",
              "task_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.Task"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_task",
          "description": "Gets information about a ``Task``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_get_task():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.GetTaskRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_task(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.maps.fleetengine_delivery_v1.types.GetTaskRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}/tasks/{task}``. The ``provider`` must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.Task: A Task in the Delivery API represents a single action to track. In general, there is a distinction between shipment-related Tasks and break Tasks. A shipment can have multiple Tasks associated with it. For example, there could be one Task for the pickup, and one for the drop-off or transfer. Also, different Tasks for a given shipment can be handled by different vehicles. For example, one vehicle could handle the pickup, driving the shipment to the hub, while another vehicle drives the same shipment from the hub to the drop-off location.  Note: gRPC and REST APIs use different field naming conventions. For example, the Task.journey_sharing_info field in the gRPC API and the Task.journeySharingInfo field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.Task"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_task",
          "description": "Updates ``Task`` data.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_update_task():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        task = fleetengine_delivery_v1.Task()\n        task.type_ = \"UNAVAILABLE\"\n        task.state = \"CLOSED\"\n\n        request = fleetengine_delivery_v1.UpdateTaskRequest(\n            task=task,\n        )\n\n        # Make the request\n        response = await client.update_task(request=request)\n\n        # Handle the response\n        p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "task": {
                "type": "google.maps.fleetengine_delivery_v1.types.Task",
                "description": "Required. The Task associated with the update. The following fields are maintained by Fleet Engine. Do not update them using ``Task.update``.  -  ``last_location``. -  ``last_location_snappable``. -  ``name``. -  ``remaining_vehicle_journey_segments``. -  ``task_outcome_location_source``.  Note: You cannot change the value of ``task_outcome`` once you set it.  If the Task has been assigned to a delivery vehicle, then don't set the Task state to CLOSED using ``Task.update``. Instead, remove the ``VehicleStop`` that contains the Task from the delivery vehicle, which automatically sets the Task state to CLOSED.  This corresponds to the ``task`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The field mask that indicates which Task fields to update. Note: The ``update_mask`` must contain at least one field.  This is a comma-separated list of fully qualified names of fields. Example: ``\"task_outcome,task_outcome_time,task_outcome_location\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.Task: A Task in the Delivery API represents a single action to track. In general, there is a distinction between shipment-related Tasks and break Tasks. A shipment can have multiple Tasks associated with it. For example, there could be one Task for the pickup, and one for the drop-off or transfer. Also, different Tasks for a given shipment can be handled by different vehicles. For example, one vehicle could handle the pickup, driving the shipment to the hub, while another vehicle drives the same shipment from the hub to the drop-off location.  Note: gRPC and REST APIs use different field naming conventions. For example, the Task.journey_sharing_info field in the gRPC API and the Task.journeySharingInfo field in the REST API refer to the same field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "task",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.Task"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tasks",
          "description": "Gets all ``Task``\\ s that meet the specified filtering criteria.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_list_tasks():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.ListTasksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tasks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}``. The ``provider`` must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.services.delivery_service.pagers.ListTasksAsyncPager: The ListTasks response that contains the set of Tasks that meet the filter criteria in the ListTasksRequest.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.services.delivery_service.pagers.ListTasksAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_task_tracking_info",
          "description": "Returns the specified ``TaskTrackingInfo`` instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_get_task_tracking_info():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.GetTaskTrackingInfoRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_task_tracking_info(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}/taskTrackingInfo/{tracking_id}``. The ``provider`` must be the Google Cloud Project ID, and the ``tracking_id`` must be the tracking ID associated with the task. An example name can be ``providers/sample-cloud-project/taskTrackingInfo/sample-tracking-id``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.types.TaskTrackingInfo: The TaskTrackingInfo message. The message contains task tracking information which will be used for display. If a tracking ID is associated with multiple Tasks, Fleet Engine uses a heuristic to decide which Task's TaskTrackingInfo to select."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.types.TaskTrackingInfo"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_delivery_vehicles",
          "description": "Gets all ``DeliveryVehicle``\\ s that meet the specified\nfiltering criteria.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.maps import fleetengine_delivery_v1\n\n    async def sample_list_delivery_vehicles():\n        # Create a client\n        client = fleetengine_delivery_v1.DeliveryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = fleetengine_delivery_v1.ListDeliveryVehiclesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_delivery_vehicles(request=request)\n\n        # Handle the response\n        async for response ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Must be in the format ``providers/{provider}``. The ``provider`` must be the Google Cloud Project ID. For example, ``sample-cloud-project``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.maps.fleetengine_delivery_v1.services.delivery_service.pagers.ListDeliveryVehiclesAsyncPager: The ListDeliveryVehicles response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.maps.fleetengine_delivery_v1.services.delivery_service.pagers.ListDeliveryVehiclesAsyncPager"
          ]
        }
      }
    ]
  }
}