{
  "OsConfigZonalService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_os_policy_assignment",
          "description": "Create an OS policy assignment.\n\nThis method also creates the first revision of the OS policy\nassignment.\n\nThis method returns a long running operation (LRO) that contains\nthe rollout details. The rollout can be cancelled by cancelling\nthe LRO.\n\nFor more information, see `Method:\nprojects.locations.osPolicyAssignments.operations.cancel <https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_create_os_policy_assignment():\n        # Create a client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name in the form: projects/{project}/locations/{location}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "os_policy_assignment": {
                "type": "google.cloud.osconfig_v1alpha.types.OSPolicyAssignment",
                "description": "Required. The OS policy assignment to be created.  This corresponds to the ``os_policy_assignment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "os_policy_assignment_id": {
                "type": "str",
                "description": "Required. The logical name of the OS policy assignment in the project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-63 characters. -  Must end with a number or a letter. -  Must be unique within the project.  This corresponds to the ``os_policy_assignment_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.osconfig_v1alpha.types.OSPolicyAssignment` OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances.  An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script.  For more information, see [OS policy and OS policy assignment](\\ https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "os_policy_assignment",
              "os_policy_assignment_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_os_policy_assignment",
          "description": "Update an existing OS policy assignment.\n\nThis method creates a new revision of the OS policy assignment.\n\nThis method returns a long running operation (LRO) that contains\nthe rollout details. The rollout can be cancelled by cancelling\nthe LRO.\n\nFor more information, see `Method:\nprojects.locations.osPolicyAssignments.operations.cancel <https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_update_os_policy_assignment():\n        # Create a client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "os_policy_assignment": {
                "type": "google.cloud.osconfig_v1alpha.types.OSPolicyAssignment",
                "description": "Required. The updated OS policy assignment.  This corresponds to the ``os_policy_assignment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask that controls which fields of the assignment should be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.osconfig_v1alpha.types.OSPolicyAssignment` OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances.  An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script.  For more information, see [OS policy and OS policy assignment](\\ https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "os_policy_assignment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_os_policy_assignment",
          "description": "Retrieve an existing OS policy assignment.\n\nThis method always returns the latest revision. In order to\nretrieve a previous revision of the assignment, also provide the\nrevision ID in the ``name`` parameter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_get_os_policy_assignment():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.GetOSPolicyAssignmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of OS policy assignment.  Format: ``projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}@{revisionId}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.types.OSPolicyAssignment: OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances.  An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script.  For more information, see [OS policy and OS policy assignment](\\ https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.types.OSPolicyAssignment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_os_policy_assignments",
          "description": "List the OS policy assignments under the parent\nresource.\nFor each OS policy assignment, the latest revision is\nreturned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_os_policy_assignments():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListOSPolicyAssignmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_os_policy_assignments(request=request)\n\n        # Handl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentsAsyncPager: A response message for listing all assignments under given parent. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_os_policy_assignment_revisions",
          "description": "List the OS policy assignment revisions for a given\nOS policy assignment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_os_policy_assignment_revisions():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListOSPolicyAssignmentRevisionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.list_os_policy_assignment_revisions(request=request)\n\n        # Handle the response\n        asy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the OS policy assignment to list revisions for.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentRevisionsAsyncPager: A response message for listing all revisions for a OS policy assignment. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentRevisionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_os_policy_assignment",
          "description": "Delete the OS policy assignment.\n\nThis method creates a new revision of the OS policy assignment.\n\nThis method returns a long running operation (LRO) that contains\nthe rollout details. The rollout can be cancelled by cancelling\nthe LRO.\n\nIf the LRO completes and is not cancelled, all revisions\nassociated with the OS policy assignment are deleted.\n\nFor more information, see `Method:\nprojects.locations.osPolicyAssignments.operations.cancel <https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the OS policy assignment to be deleted  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance_os_policies_compliance",
          "description": "Get OS policies compliance data for the specified\nCompute Engine VM instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_get_instance_os_policies_compliance():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.GetInstanceOSPoliciesComplianceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance_os_policies_compliance(request=request)\n\n        # Handle the response\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. API resource name for instance OS policies compliance resource.  Format: ``projects/{project}/locations/{location}/instanceOSPoliciesCompliances/{instance}``  For ``{project}``, either Compute Engine project-number or project-id can be provided. For ``{instance}``, either Compute Engine VM instance-id or instance-name can be provided.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.types.InstanceOSPoliciesCompliance: This API resource represents the OS policies compliance data for a Compute Engine virtual machine (VM) instance at a given point in time.  A Compute Engine VM can have multiple OS policy assignments, and each assignment can have multiple OS policies. As a result, multiple OS policies could be applied to a single VM.  You can use this API resource to determine both the compliance state of your VM as well as the compliance state of an individual OS policy.  For more information, see [View compliance](\\ https://cloud.google.com/compute/docs/os-configuration-management/view-compliance)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.types.InstanceOSPoliciesCompliance"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_instance_os_policies_compliances",
          "description": "List OS policies compliance data for all Compute\nEngine VM instances in the specified zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_instance_os_policies_compliances():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListInstanceOSPoliciesCompliancesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instance_os_policies_compliances(request=request)\n\n        # Han",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name.  Format: ``projects/{project}/locations/{location}``  For ``{project}``, either Compute Engine project-number or project-id can be provided.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListInstanceOSPoliciesCompliancesAsyncPager: A response message for listing OS policies compliance data for all Compute Engine VMs in the given location.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListInstanceOSPoliciesCompliancesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_os_policy_assignment_report",
          "description": "Get the OS policy asssignment report for the\nspecified Compute Engine VM instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_get_os_policy_assignment_report():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.GetOSPolicyAssignmentReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_os_policy_assignment_report(request=request)\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. API resource name for OS policy assignment report.  Format: ``/projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/report``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided. For ``{instance_id}``, either Compute Engine ``instance-id`` or ``instance-name`` can be provided. For ``{assignment_id}``, the OSPolicyAssignment id must be provided.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.types.OSPolicyAssignmentReport: A report of the OS policy assignment status for a given instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.types.OSPolicyAssignmentReport"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_os_policy_assignment_reports",
          "description": "List OS policy asssignment reports for all Compute\nEngine VM instances in the specified zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_os_policy_assignment_reports():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListOSPolicyAssignmentReportsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_os_policy_assignment_reports(request=request)\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name.  Format: ``projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided. For ``{instance}``, either ``instance-name``, ``instance-id``, or ``-`` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all instances in the project/location. For ``{assignment}``, either ``assignment-id`` or ``-`` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all OSPolicyAssignments in the project/location. Either {instance} or {assignment} must be ``-``.  For example: ``projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports`` returns all reports for the instance ``projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports`` returns all the reports for the given assignment across all instances. ``projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports`` returns all the reports for all assignments across all instances.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentReportsAsyncPager: A response message for listing OS Policy assignment reports including the page of results and page token.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListOSPolicyAssignmentReportsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_inventory",
          "description": "Get inventory data for the specified VM instance. If the VM has\nno associated inventory, the message ``NOT_FOUND`` is returned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_get_inventory():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.GetInventoryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_inventory(request=request)\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. API resource name for inventory resource.  Format: ``projects/{project}/locations/{location}/instances/{instance}/inventory``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided. For ``{instance}``, either Compute Engine ``instance-id`` or ``instance-name`` can be provided.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.types.Inventory: This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time.  You can use this API resource to determine the inventory data of your VM.  For more information, see [Information provided by OS inventory management](\\ https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.types.Inventory"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_inventories",
          "description": "List inventory data for all VM instances in the\nspecified zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_inventories():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListInventoriesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_inventories(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name.  Format: ``projects/{project}/locations/{location}/instances/-``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListInventoriesAsyncPager: A response message for listing inventory data for all VMs in a specified location.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListInventoriesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_vulnerability_report",
          "description": "Gets the vulnerability report for the specified VM\ninstance. Only VMs with inventory data have\nvulnerability reports associated with them.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_get_vulnerability_report():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.GetVulnerabilityReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_vulnerability_report(request=request)\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. API resource name for vulnerability resource.  Format: ``projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided. For ``{instance}``, either Compute Engine ``instance-id`` or ``instance-name`` can be provided.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.types.VulnerabilityReport: This API resource represents the vulnerability report for a specified Compute Engine virtual machine (VM) instance at a given point in time.  For more information, see [Vulnerability reports](\\ https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.types.VulnerabilityReport"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_vulnerability_reports",
          "description": "List vulnerability reports for all VM instances in\nthe specified zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import osconfig_v1alpha\n\n    async def sample_list_vulnerability_reports():\n        # Create a client\n        client = osconfig_v1alpha.OsConfigZonalServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = osconfig_v1alpha.ListVulnerabilityReportsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_vulnerability_reports(request=request)\n\n        # Handle the response\n        async for response in page_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name.  Format: ``projects/{project}/locations/{location}/instances/-``  For ``{project}``, either ``project-number`` or ``project-id`` can be provided.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListVulnerabilityReportsAsyncPager: A response message for listing vulnerability reports for all VM instances in the specified location.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.osconfig_v1alpha.services.os_config_zonal_service.pagers.ListVulnerabilityReportsAsyncPager"
          ]
        }
      }
    ]
  }
}