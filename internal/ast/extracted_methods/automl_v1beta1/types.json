{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-automl/google/cloud/automl_v1beta1/types/service.py": [
    {
      "type": "function",
      "name": "CreateDatasetRequest",
      "description": "Request message for\n[AutoMl.CreateDataset][google.cloud.automl.v1beta1.AutoMl.CreateDataset].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project to\n        create the dataset for.\n    dataset (google.cloud.automl_v1beta1.types.Dataset):\n        Required. The dataset to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the project to create the dataset for.",
            "type": "string"
          },
          "dataset": {
            "description": "Required. The dataset to create.",
            "reference": "google.cloud.automl_v1beta1.types.Dataset",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "dataset_name": {
                  "description": "The name of the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      }
                    }
                  }
                },
                "info": {
                  "description": "User-provided metadata for the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.DatasetInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "friendly_name": {
                        "description": "A short name for the dataset, such as\\ ``\"Analytics Data 2011\"``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A long description, perhaps several paragraphs, describing the dataset contents in detail.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "Labels provided for the dataset.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "The time the dataset was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "The time the dataset was last modified.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "acl": {
                  "description": "The access control list for the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "entries": {
                        "description": "Access control entry list.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl.Entry",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                                "type": "string"
                              },
                              "group_email": {
                                "description": "Grants access to a group identified by an email address.",
                                "type": "string"
                              },
                              "user_email": {
                                "description": "Grants access to a user identified by an email address.",
                                "type": "string"
                              },
                              "domain": {
                                "description": "Grants access to all members of a domain.",
                                "type": "string"
                              },
                              "special_group": {
                                "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                                "type": "string"
                              },
                              "view_name": {
                                "description": "Grants access to a BigQuery View.",
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "project_id": {
                                      "description": "The project ID.",
                                      "type": "string"
                                    },
                                    "dataset_id": {
                                      "description": "The dataset ID within the project.",
                                      "type": "string"
                                    },
                                    "table_id": {
                                      "description": "The table ID of the table within the dataset.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "default_table_expire_duration": {
                  "description": "If this field is present, each table that does not specify an expiration time is assigned an expiration time by adding this duration to the table's ``createTime``. If this field is empty, there is no default table expiration time.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "dataset"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDatasetRequest",
      "description": "Request message for\n[AutoMl.GetDataset][google.cloud.automl.v1beta1.AutoMl.GetDataset].\n\nAttributes:\n    name (str):\n        Required. The resource name of the dataset to\n        retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the dataset to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDatasetsRequest",
      "description": "Request message for\n[AutoMl.ListDatasets][google.cloud.automl.v1beta1.AutoMl.ListDatasets].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project\n        from which to list datasets.\n    filter (str):\n        An expression for filtering the results of the request.\n\n        -  ``dataset_metadata`` - for existence of the case (e.g.\n           ``image_classification_dataset_metadata:*``). Some\n           examples of using the filter are:\n\n        -  ``translation_dataset_metadata:*`` --> The dataset has\n           ``translation_dataset_metadata``.\n    page_size (int):\n        Requested page size. Server may return fewer\n        results than requested. If unspecified, server\n        will pick a default size.\n    page_token (str):\n        A token identifying a page of results for the server to\n        return Typically obtained via\n        [ListDatasetsResponse.next_page_token][google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token]\n        of the previous\n        [AutoMl.ListD",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the project from which to list datasets.",
            "type": "string"
          },
          "filter": {
            "description": "An expression for filtering the results of the request.  -  ``dataset_metadata`` - for existence of the case (e.g. ``image_classification_dataset_metadata:*``). Some examples of using the filter are:  -  ``translation_dataset_metadata:*`` --> The dataset has ``translation_dataset_metadata``.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer results than requested. If unspecified, server will pick a default size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results for the server to return Typically obtained via [ListDatasetsResponse.next_page_token][google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token] of the previous [AutoMl.ListDatasets][google.cloud.automl.v1beta1.AutoMl.ListDatasets] call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDatasetRequest",
      "description": "Request message for\n[AutoMl.UpdateDataset][google.cloud.automl.v1beta1.AutoMl.UpdateDataset]\n\nAttributes:\n    dataset (google.cloud.automl_v1beta1.types.Dataset):\n        Required. The dataset which replaces the\n        resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "dataset": {
            "description": "Required. The dataset which replaces the resource on the server.",
            "reference": "google.cloud.automl_v1beta1.types.Dataset",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "dataset_name": {
                  "description": "The name of the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      }
                    }
                  }
                },
                "info": {
                  "description": "User-provided metadata for the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.DatasetInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "friendly_name": {
                        "description": "A short name for the dataset, such as\\ ``\"Analytics Data 2011\"``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A long description, perhaps several paragraphs, describing the dataset contents in detail.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "Labels provided for the dataset.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "The time the dataset was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "The time the dataset was last modified.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "acl": {
                  "description": "The access control list for the dataset.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "entries": {
                        "description": "Access control entry list.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl.Entry",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                                "type": "string"
                              },
                              "group_email": {
                                "description": "Grants access to a group identified by an email address.",
                                "type": "string"
                              },
                              "user_email": {
                                "description": "Grants access to a user identified by an email address.",
                                "type": "string"
                              },
                              "domain": {
                                "description": "Grants access to all members of a domain.",
                                "type": "string"
                              },
                              "special_group": {
                                "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                                "type": "string"
                              },
                              "view_name": {
                                "description": "Grants access to a BigQuery View.",
                                "type": "object",
                                "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "project_id": {
                                      "description": "The project ID.",
                                      "type": "string"
                                    },
                                    "dataset_id": {
                                      "description": "The dataset ID within the project.",
                                      "type": "string"
                                    },
                                    "table_id": {
                                      "description": "The table ID of the table within the dataset.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "default_table_expire_duration": {
                  "description": "If this field is present, each table that does not specify an expiration time is assigned an expiration time by adding this duration to the table's ``createTime``. If this field is empty, there is no default table expiration time.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "dataset"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDatasetRequest",
      "description": "Request message for\n[AutoMl.DeleteDataset][google.cloud.automl.v1beta1.AutoMl.DeleteDataset].\n\nAttributes:\n    name (str):\n        Required. The resource name of the dataset to\n        delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the dataset to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ImportDataRequest",
      "description": "Request message for\n[AutoMl.ImportData][google.cloud.automl.v1beta1.AutoMl.ImportData].\n\nAttributes:\n    name (str):\n        Required. Dataset name. Dataset must already\n        exist. All imported annotations and examples\n        will be added.\n    input_config (google.cloud.automl_v1beta1.types.InputConfig):\n        Required. The desired input location and its\n        domain specific semantics, if any.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Dataset name. Dataset must already exist. All imported annotations and examples will be added.",
            "type": "string"
          },
          "input_config": {
            "description": "Required. The desired input location and its domain specific semantics, if any.",
            "reference": "google.cloud.automl_v1beta1.types.InputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_input_configs": {
                  "description": "Set of input BigQuery tables.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.enterpriseknowledgegraph_v1.types.BigQueryInputConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "bigquery_table": {
                          "description": "Required. Format is ``projects/*/datasets/*/tables/*``.",
                          "type": "string"
                        },
                        "gcs_uri": {
                          "description": "Required. Schema mapping file",
                          "type": "string"
                        }
                      },
                      "required": [
                        "bigquery_table",
                        "gcs_uri"
                      ]
                    }
                  }
                },
                "entity_type": {
                  "description": "Entity type",
                  "type": "object",
                  "reference": "google.cloud.enterpriseknowledgegraph_v1.types.InputConfig.EntityType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Required. The name of the entity type.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Required. Indicates the kind of entity type.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                      },
                      "auto_expansion_mode": {
                        "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                      },
                      "entities": {
                        "description": "Optional. The collection of entity entries associated with the entity type.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                "type": "string"
                              },
                              "synonyms": {
                                "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "value",
                              "synonyms"
                            ]
                          }
                        }
                      },
                      "enable_fuzzy_extraction": {
                        "description": "Optional. Enables fuzzy entity extraction during classification.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "display_name",
                      "kind"
                    ]
                  }
                },
                "previous_result_bigquery_table": {
                  "description": "Optional. Provide the bigquery table containing the previous results if cluster ID stability is desired. Format is ``projects/*/datasets/*/tables/*``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "input_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportDataRequest",
      "description": "Request message for\n[AutoMl.ExportData][google.cloud.automl.v1beta1.AutoMl.ExportData].\n\nAttributes:\n    name (str):\n        Required. The resource name of the dataset.\n    output_config (google.cloud.automl_v1beta1.types.OutputConfig):\n        Required. The desired output location.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the dataset.",
            "type": "string"
          },
          "output_config": {
            "description": "Required. The desired output location.",
            "reference": "google.cloud.automl_v1beta1.types.OutputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_dataset": {
                  "description": "Format is \u201cprojects/\\ */datasets/*\\ \u201d.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "output_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetAnnotationSpecRequest",
      "description": "Request message for\n[AutoMl.GetAnnotationSpec][google.cloud.automl.v1beta1.AutoMl.GetAnnotationSpec].\n\nAttributes:\n    name (str):\n        Required. The resource name of the annotation\n        spec to retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the annotation spec to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTableSpecRequest",
      "description": "Request message for\n[AutoMl.GetTableSpec][google.cloud.automl.v1beta1.AutoMl.GetTableSpec].\n\nAttributes:\n    name (str):\n        Required. The resource name of the table spec\n        to retrieve.\n    field_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Mask specifying which fields to read.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the table spec to retrieve.",
            "type": "string"
          },
          "field_mask": {
            "description": "Mask specifying which fields to read.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTableSpecsRequest",
      "description": "Request message for\n[AutoMl.ListTableSpecs][google.cloud.automl.v1beta1.AutoMl.ListTableSpecs].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the dataset to\n        list table specs from.\n    field_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Mask specifying which fields to read.\n    filter (str):\n        Filter expression, see go/filtering.\n    page_size (int):\n        Requested page size. The server can return\n        fewer results than requested. If unspecified,\n        the server will pick a default size.\n    page_token (str):\n        A token identifying a page of results for the server to\n        return. Typically obtained from the\n        [ListTableSpecsResponse.next_page_token][google.cloud.automl.v1beta1.ListTableSpecsResponse.next_page_token]\n        field of the previous\n        [AutoMl.ListTableSpecs][google.cloud.automl.v1beta1.AutoMl.ListTableSpecs]\n        call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the dataset to list table specs from.",
            "type": "string"
          },
          "field_mask": {
            "description": "Mask specifying which fields to read.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "filter": {
            "description": "Filter expression, see go/filtering.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. The server can return fewer results than requested. If unspecified, the server will pick a default size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results for the server to return. Typically obtained from the [ListTableSpecsResponse.next_page_token][google.cloud.automl.v1beta1.ListTableSpecsResponse.next_page_token] field of the previous [AutoMl.ListTableSpecs][google.cloud.automl.v1beta1.AutoMl.ListTableSpecs] call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTableSpecRequest",
      "description": "Request message for\n[AutoMl.UpdateTableSpec][google.cloud.automl.v1beta1.AutoMl.UpdateTableSpec]\n\nAttributes:\n    table_spec (google.cloud.automl_v1beta1.types.TableSpec):\n        Required. The table spec which replaces the\n        resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "table_spec": {
            "description": "Required. The table spec which replaces the resource on the server.",
            "reference": "google.cloud.automl_v1beta1.types.TableSpec",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "grouped_entry": {
                  "description": "Output only. If the table is a dated shard, i.e., with name pattern ``[prefix]YYYYMMDD``, ``grouped_entry`` is the Data Catalog resource name of the date sharded grouped entry, for example, ``projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}``. Otherwise, ``grouped_entry`` is empty.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "table_spec"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetColumnSpecRequest",
      "description": "Request message for\n[AutoMl.GetColumnSpec][google.cloud.automl.v1beta1.AutoMl.GetColumnSpec].\n\nAttributes:\n    name (str):\n        Required. The resource name of the column\n        spec to retrieve.\n    field_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Mask specifying which fields to read.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the column spec to retrieve.",
            "type": "string"
          },
          "field_mask": {
            "description": "Mask specifying which fields to read.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListColumnSpecsRequest",
      "description": "Request message for\n[AutoMl.ListColumnSpecs][google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the table spec\n        to list column specs from.\n    field_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Mask specifying which fields to read.\n    filter (str):\n        Filter expression, see go/filtering.\n    page_size (int):\n        Requested page size. The server can return\n        fewer results than requested. If unspecified,\n        the server will pick a default size.\n    page_token (str):\n        A token identifying a page of results for the server to\n        return. Typically obtained from the\n        [ListColumnSpecsResponse.next_page_token][google.cloud.automl.v1beta1.ListColumnSpecsResponse.next_page_token]\n        field of the previous\n        [AutoMl.ListColumnSpecs][google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs]\n        call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the table spec to list column specs from.",
            "type": "string"
          },
          "field_mask": {
            "description": "Mask specifying which fields to read.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "filter": {
            "description": "Filter expression, see go/filtering.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. The server can return fewer results than requested. If unspecified, the server will pick a default size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results for the server to return. Typically obtained from the [ListColumnSpecsResponse.next_page_token][google.cloud.automl.v1beta1.ListColumnSpecsResponse.next_page_token] field of the previous [AutoMl.ListColumnSpecs][google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs] call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateColumnSpecRequest",
      "description": "Request message for\n[AutoMl.UpdateColumnSpec][google.cloud.automl.v1beta1.AutoMl.UpdateColumnSpec]\n\nAttributes:\n    column_spec (google.cloud.automl_v1beta1.types.ColumnSpec):\n        Required. The column spec which replaces the\n        resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "column_spec": {
            "description": "Required. The column spec which replaces the resource on the server.",
            "reference": "google.cloud.automl_v1beta1.types.ColumnSpec",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The resource name of the column specs. Form:  ``projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/tableSpecs/{table_spec_id}/columnSpecs/{column_spec_id}``",
                  "type": "string"
                },
                "data_type": {
                  "description": "The data type of elements stored in the column.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1beta1.types.DataType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "list_element_type": {
                        "description": "If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [ARRAY][google.cloud.automl.v1beta1.TypeCode.ARRAY], then ``list_element_type`` is the type of the elements.  This field is a member of `oneof`_ ``details``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.DataType"
                      },
                      "struct_type": {
                        "description": "If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT], then ``struct_type`` provides type information for the struct's fields.  This field is a member of `oneof`_ ``details``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.StructType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "fields": {
                              "description": "Unordered map of struct field names to their data types. Fields cannot be added or removed via Update. Their names and data types are still mutable.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.DataType"
                              }
                            }
                          }
                        }
                      },
                      "time_format": {
                        "description": "If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [TIMESTAMP][google.cloud.automl.v1beta1.TypeCode.TIMESTAMP] then ``time_format`` provides the format in which that time field is expressed. The time_format must either be one of:  -  ``UNIX_SECONDS`` -  ``UNIX_MILLISECONDS`` -  ``UNIX_MICROSECONDS`` -  ``UNIX_NANOSECONDS`` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in ``strftime`` syntax. If time_format is not set, then the default format as described on the type_code is used.  This field is a member of `oneof`_ ``details``.",
                        "type": "string"
                      },
                      "type_code": {
                        "description": "Required. The [TypeCode][google.cloud.automl.v1beta1.TypeCode] for this type.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.TypeCode"
                      },
                      "nullable": {
                        "description": "If true, this DataType can also be ``NULL``. In .CSV files ``NULL`` value is expressed as an empty string.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "type_code"
                    ]
                  }
                },
                "display_name": {
                  "description": "Output only. The name of the column to show in the interface. The name can be up to 100 characters long and can consist only of ASCII Latin letters A-Z and a-z, ASCII digits 0-9, underscores(_), and forward slashes(/), and must start with a letter or a digit.",
                  "type": "string"
                },
                "data_stats": {
                  "description": "Output only. Stats of the series of values in the column. This field may be stale, see the ancestor's Dataset.tables_dataset_metadata.stats_update_time field for the timestamp at which these stats were last updated.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1beta1.types.DataStats",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "float64_stats": {
                        "description": "The statistics for FLOAT64 DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.Float64Stats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "mean": {
                              "description": "The mean of the series.",
                              "type": "number"
                            },
                            "standard_deviation": {
                              "description": "The standard deviation of the series.",
                              "type": "number"
                            },
                            "quantiles": {
                              "description": "Ordered from 0 to k k-quantile values of the data series of n values. The value at index i is, approximately, the i*n/k-th smallest value in the series; for i = 0 and i = k these are, respectively, the min and max values.",
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            },
                            "histogram_buckets": {
                              "description": "Histogram buckets of the data series. Sorted by the min value of the bucket, ascendingly, and the number of the buckets is dynamically generated. The buckets are non-overlapping and completely cover whole FLOAT64 range with min of first bucket being ``\"-Infinity\"``, and max of the last one being ``\"Infinity\"``.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.Float64Stats.HistogramBucket",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "min_": {
                                      "description": "The minimum value of the bucket, inclusive.",
                                      "type": "number"
                                    },
                                    "max_": {
                                      "description": "The maximum value of the bucket, exclusive unless max = ``\"Infinity\"``, in which case it's inclusive.",
                                      "type": "number"
                                    },
                                    "count": {
                                      "description": "The number of data values that are in the bucket, i.e. are between min and max values.",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "string_stats": {
                        "description": "The statistics for STRING DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.StringStats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "top_unigram_stats": {
                              "description": "The statistics of the top 20 unigrams, ordered by [count][google.cloud.automl.v1beta1.StringStats.UnigramStats.count].",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.StringStats.UnigramStats",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "description": "The unigram.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "The number of occurrences of this unigram in the series.",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "timestamp_stats": {
                        "description": "The statistics for TIMESTAMP DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.TimestampStats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "granular_stats": {
                              "description": "The string key is the pre-defined granularity. Currently supported: hour_of_day, day_of_week, month_of_year. Granularities finer that the granularity of timestamp data are not populated (e.g. if timestamps are at day granularity, then hour_of_day is not populated).",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.TimestampStats.GranularStats",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "buckets": {
                                      "description": "A map from granularity key to example count for that key. E.g. for hour_of_day ``13`` means 1pm, or for month_of_year ``5`` means May).",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "array_stats": {
                        "description": "The statistics for ARRAY DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.ArrayStats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "member_stats": {
                              "description": "Stats of all the values of all arrays, as if they were a single long series of data. The type depends on the element type of the array.",
                              "type": "object",
                              "reference": "google.cloud.automl_v1beta1.types.DataStats"
                            }
                          }
                        }
                      },
                      "struct_stats": {
                        "description": "The statistics for STRUCT DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.StructStats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "field_stats": {
                              "description": "Map from a field name of the struct to data stats aggregated over series of all data in that field across all the structs.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.DataStats"
                              }
                            }
                          }
                        }
                      },
                      "category_stats": {
                        "description": "The statistics for CATEGORY DataType.  This field is a member of `oneof`_ ``stats``.",
                        "type": "object",
                        "reference": "google.cloud.automl_v1beta1.types.CategoryStats",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "top_category_stats": {
                              "description": "The statistics of the top 20 CATEGORY values, ordered by  [count][google.cloud.automl.v1beta1.CategoryStats.SingleCategoryStats.count].",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.automl_v1beta1.types.CategoryStats.SingleCategoryStats",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "description": "The CATEGORY value.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "The number of occurrences of this value in the series.",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "distinct_value_count": {
                        "description": "The number of distinct values.",
                        "type": "integer"
                      },
                      "null_value_count": {
                        "description": "The number of values that are null.",
                        "type": "integer"
                      },
                      "valid_value_count": {
                        "description": "The number of values that are valid.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "top_correlated_columns": {
                  "description": "Deprecated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.automl_v1beta1.types.ColumnSpec.CorrelatedColumn",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "column_spec_id": {
                          "description": "The column_spec_id of the correlated column, which belongs to the same table as the in-context column.",
                          "type": "string"
                        },
                        "correlation_stats": {
                          "description": "Correlation between this and the in-context column.",
                          "type": "object",
                          "reference": "google.cloud.automl_v1beta1.types.CorrelationStats",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "cramers_v": {
                                "description": "The correlation value using the Cramer's V measure.",
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "etag": {
                  "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "column_spec"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateModelRequest",
      "description": "Request message for\n[AutoMl.CreateModel][google.cloud.automl.v1beta1.AutoMl.CreateModel].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the parent project\n        where the model is being created.\n    model (google.cloud.automl_v1beta1.types.Model):\n        Required. The model to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the parent project where the model is being created.",
            "type": "string"
          },
          "model": {
            "description": "Required. The model to create.",
            "reference": "google.cloud.automl_v1beta1.types.Model",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The fully qualified resource name of the model.  Format: ``projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`` catalog_id has char limit of 50. recommendation_model_id has char limit of 40.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The display name of the model.  Should be human readable, used to display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8 encoded string with limit of 1024 characters.",
                  "type": "string"
                },
                "training_state": {
                  "description": "Optional. The training state that the model is in (e.g. ``TRAINING`` or ``PAUSED``).  Since part of the cost of running the service is frequency of training - this can be used to determine when to train model in order to control cost. If not specified: the default value for ``CreateModel`` method is ``TRAINING``. The default value for ``UpdateModel`` method is to keep the state the same as before.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.Model.TrainingState"
                },
                "serving_state": {
                  "description": "Output only. The serving state of the model: ``ACTIVE``, ``NOT_ACTIVE``.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.Model.ServingState"
                },
                "create_time": {
                  "description": "Output only. Timestamp the Recommendation Model was created at.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "Output only. Timestamp the Recommendation Model was last updated. E.g. if a Recommendation Model was paused - this would be the time the pause was initiated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "type_": {
                  "description": "Required. The type of model e.g. ``home-page``.  Currently supported values: ``recommended-for-you``, ``others-you-may-like``, ``frequently-bought-together``, ``page-optimization``, ``similar-items``, ``buy-it-again``, ``on-sale-items``, and ``recently-viewed``\\ (readonly value).  This field together with [optimization_objective][google.cloud.retail.v2.Model.optimization_objective] describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = ``frequently-bought-together`` and optimization_objective = ``ctr``), you receive an error 400 if you try to create/update a recommendation with this set of knobs.",
                  "type": "string"
                },
                "optimization_objective": {
                  "description": "Optional. The optimization objective e.g. ``cvr``.  Currently supported values: ``ctr``, ``cvr``, ``revenue-per-order``.  If not specified, we choose default based on model type. Default depends on type of recommendation:  ``recommended-for-you`` => ``ctr``  ``others-you-may-like`` => ``ctr``  ``frequently-bought-together`` => ``revenue_per_order``  This field together with [optimization_objective][google.cloud.retail.v2.Model.type] describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = ``frequently-bought-together`` and optimization_objective = ``ctr``), you receive an error 400 if you try to create/update a recommendation with this set of knobs.",
                  "type": "string"
                },
                "periodic_tuning_state": {
                  "description": "Optional. The state of periodic tuning.  The period we use is 3 months - to do a one-off tune earlier use the ``TuneModel`` method. Default value is ``PERIODIC_TUNING_ENABLED``.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.Model.PeriodicTuningState"
                },
                "last_tune_time": {
                  "description": "Output only. The timestamp when the latest successful tune finished.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "tuning_operation": {
                  "description": "Output only. The tune operation associated with the model. Can be used to determine if there is an ongoing tune for this recommendation. Empty field implies no tune is goig on.",
                  "type": "string"
                },
                "data_state": {
                  "description": "Output only. The state of data requirements for this model: ``DATA_OK`` and ``DATA_ERROR``.  Recommendation model cannot be trained if the data is in ``DATA_ERROR`` state. Recommendation model can have ``DATA_ERROR`` state even if serving state is ``ACTIVE``: models were trained successfully before, but cannot be refreshed because model no longer has sufficient data for training.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.Model.DataState"
                },
                "filtering_option": {
                  "description": "Optional. If ``RECOMMENDATIONS_FILTERING_ENABLED``, recommendation filtering by attributes is enabled for the model.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.RecommendationsFilteringOption"
                },
                "serving_config_lists": {
                  "description": "Output only. The list of valid serving configs associated with the PageOptimizationConfig.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.retail_v2.types.Model.ServingConfigList",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "serving_config_ids": {
                          "description": "Optional. A set of valid serving configs that may be used for ``PAGE_OPTIMIZATION``.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "model_features_config": {
                  "description": "Optional. Additional model features config.",
                  "type": "object",
                  "reference": "google.cloud.retail_v2.types.Model.ModelFeaturesConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "frequently_bought_together_config": {
                        "description": "Additional configs for frequently-bought-together models.  This field is a member of `oneof`_ ``type_dedicated_config``.",
                        "type": "object",
                        "reference": "google.cloud.retail_v2.types.Model.FrequentlyBoughtTogetherFeaturesConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "context_products_type": {
                              "description": "Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the ``frequently-bought-together`` type. If it isn't specified, it defaults to [MULTIPLE_CONTEXT_PRODUCTS][google.cloud.retail.v2.Model.ContextProductsType.MULTIPLE_CONTEXT_PRODUCTS].",
                              "type": "object",
                              "reference": "google.cloud.retail_v2.types.Model.ContextProductsType"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "display_name",
                "type_"
              ]
            }
          }
        },
        "required": [
          "parent",
          "model"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetModelRequest",
      "description": "Request message for\n[AutoMl.GetModel][google.cloud.automl.v1beta1.AutoMl.GetModel].\n\nAttributes:\n    name (str):\n        Required. Resource name of the model.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the model.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListModelsRequest",
      "description": "Request message for\n[AutoMl.ListModels][google.cloud.automl.v1beta1.AutoMl.ListModels].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project, from\n        which to list the models.\n    filter (str):\n        An expression for filtering the results of the request.\n\n        -  ``model_metadata`` - for existence of the case (e.g.\n           ``video_classification_model_metadata:*``).\n\n        -  ``dataset_id`` - for = or !=. Some examples of using the\n           filter are:\n\n        -  ``image_classification_model_metadata:*`` --> The model\n           has ``image_classification_model_metadata``.\n\n        -  ``dataset_id=5`` --> The model was created from a dataset\n           with ID 5.\n    page_size (int):\n        Requested page size.\n    page_token (str):\n        A token identifying a page of results for the server to\n        return Typically obtained via\n        [ListModelsResponse.next_page_token][google.cloud.automl.v1beta1.ListModelsResponse.next_page_token]\n        of the previous\n ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project, from which to list the models.",
            "type": "string"
          },
          "filter": {
            "description": "An expression for filtering the results of the request.  -  ``model_metadata`` - for existence of the case (e.g. ``video_classification_model_metadata:*``).  -  ``dataset_id`` - for = or !=. Some examples of using the filter are:  -  ``image_classification_model_metadata:*`` --> The model has ``image_classification_model_metadata``.  -  ``dataset_id=5`` --> The model was created from a dataset with ID 5.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results for the server to return Typically obtained via [ListModelsResponse.next_page_token][google.cloud.automl.v1beta1.ListModelsResponse.next_page_token] of the previous [AutoMl.ListModels][google.cloud.automl.v1beta1.AutoMl.ListModels] call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteModelRequest",
      "description": "Request message for\n[AutoMl.DeleteModel][google.cloud.automl.v1beta1.AutoMl.DeleteModel].\n\nAttributes:\n    name (str):\n        Required. Resource name of the model being\n        deleted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the model being deleted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeployModelRequest",
      "description": "Request message for\n[AutoMl.DeployModel][google.cloud.automl.v1beta1.AutoMl.DeployModel].\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    image_object_detection_model_deployment_metadata (google.cloud.automl_v1beta1.types.ImageObjectDetectionModelDeploymentMetadata):\n        Model deployment metadata specific to Image\n        Object Detection.\n\n        This field is a member of `oneof`_ ``model_deployment_metadata``.\n    image_classification_model_deployment_metadata (google.cloud.automl_v1beta1.types.ImageClassificationModelDeploymentMetadata):\n        Model deployment metadata specific to Image\n        Classification.\n\n        This field is a member of `oneof`_ ``model_deployment_metadata``.\n    name (str):\n        Required. Resou",
      "parameters": {
        "type": "object",
        "properties": {
          "image_object_detection_model_deployment_metadata": {
            "description": "Model deployment metadata specific to Image Object Detection.  This field is a member of `oneof`_ ``model_deployment_metadata``.",
            "reference": "google.cloud.automl_v1beta1.types.ImageObjectDetectionModelDeploymentMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "node_count": {
                  "description": "Input only. The number of nodes to deploy the model on. A node is an abstraction of a machine resource, which can handle online prediction QPS as given in the model's [qps_per_node][google.cloud.automl.v1.ImageObjectDetectionModelMetadata.qps_per_node]. Must be between 1 and 100, inclusive on both ends.",
                  "type": "integer"
                }
              }
            }
          },
          "image_classification_model_deployment_metadata": {
            "description": "Model deployment metadata specific to Image Classification.  This field is a member of `oneof`_ ``model_deployment_metadata``.",
            "reference": "google.cloud.automl_v1beta1.types.ImageClassificationModelDeploymentMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "node_count": {
                  "description": "Input only. The number of nodes to deploy the model on. A node is an abstraction of a machine resource, which can handle online prediction QPS as given in the model's [node_qps][google.cloud.automl.v1.ImageClassificationModelMetadata.node_qps]. Must be between 1 and 100, inclusive on both ends.",
                  "type": "integer"
                }
              }
            }
          },
          "name": {
            "description": "Required. Resource name of the model to deploy.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UndeployModelRequest",
      "description": "Request message for\n[AutoMl.UndeployModel][google.cloud.automl.v1beta1.AutoMl.UndeployModel].\n\nAttributes:\n    name (str):\n        Required. Resource name of the model to\n        undeploy.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the model to undeploy.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportModelRequest",
      "description": "Request message for\n[AutoMl.ExportModel][google.cloud.automl.v1beta1.AutoMl.ExportModel].\nModels need to be enabled for exporting, otherwise an error code\nwill be returned.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model to\n        export.\n    output_config (google.cloud.automl_v1beta1.types.ModelExportOutputConfig):\n        Required. The desired output location and\n        configuration.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model to export.",
            "type": "string"
          },
          "output_config": {
            "description": "Required. The desired output location and configuration.",
            "reference": "google.cloud.automl_v1beta1.types.ModelExportOutputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_destination": {
                  "description": "Required. The Google Cloud Storage location where the model is to be written to. This location may only be set for the following model formats: \"tflite\", \"edgetpu_tflite\", \"tf_saved_model\", \"tf_js\", \"core_ml\".  Under the directory given as the destination a new one with name \"model-export--\", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format, will be created. Inside the model and any of its supporting files will be written.  This field is a member of `oneof`_ ``destination``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.GcsDestination",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "The URI of the Cloud Storage object. It's the same URI that is used by gsutil. For example: \"gs://bucket_name/object_name\". See `Viewing and Editing Object Metadata <https://cloud.google.com/storage/docs/viewing-editing-metadata>`__ for more information.  This field is a member of `oneof`_ ``object_uri``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "model_format": {
                  "description": "The format in which the model must be exported. The available, and default, formats depend on the problem and model type (if given problem and type combination doesn't have a format listed, it means its models are not exportable):  -  For Image Classification mobile-low-latency-1, mobile-versatile-1, mobile-high-accuracy-1: \"tflite\" (default), \"edgetpu_tflite\", \"tf_saved_model\", \"tf_js\", \"docker\".  -  For Image Classification mobile-core-ml-low-latency-1, mobile-core-ml-versatile-1, mobile-core-ml-high-accuracy-1: \"core_ml\" (default).  -  For Image Object Detection mobile-low-latency-1, mobile-versatile-1, mobile-high-accuracy-1: \"tflite\", \"tf_saved_model\", \"tf_js\". Formats description:  -  tflite - Used for Android mobile devices.  -  edgetpu_tflite - Used for `Edge TPU <https://cloud.google.com/edge-tpu/>`__ devices.  -  tf_saved_model - A tensorflow model in SavedModel format.  -  tf_js - A `TensorFlow.js <https://www.tensorflow.org/js>`__ model that can be used in the browser and in Node.js using JavaScript.  -  docker - Used for Docker containers. Use the params field to customize the container. The container is verified to work correctly on ubuntu 16.04 operating system. See more at `containers quickstart <https://cloud.google.com/vision/automl/docs/containers-gcs-quickstart>`__  -  core_ml - Used for iOS mobile devices.",
                  "type": "string"
                },
                "params": {
                  "description": "Additional model-type and format specific parameters describing the requirements for the to be exported model files, any string must be up to 25000 characters long.  -  For ``docker`` format: ``cpu_architecture`` - (string) \"x86_64\" (default). ``gpu_architecture`` - (string) \"none\" (default), \"nvidia\".",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "gcs_destination"
              ]
            }
          }
        },
        "required": [
          "name",
          "output_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportEvaluatedExamplesRequest",
      "description": "Request message for\n[AutoMl.ExportEvaluatedExamples][google.cloud.automl.v1beta1.AutoMl.ExportEvaluatedExamples].\n\nAttributes:\n    name (str):\n        Required. The resource name of the model\n        whose evaluated examples are to be exported.\n    output_config (google.cloud.automl_v1beta1.types.ExportEvaluatedExamplesOutputConfig):\n        Required. The desired output location and\n        configuration.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model whose evaluated examples are to be exported.",
            "type": "string"
          },
          "output_config": {
            "description": "Required. The desired output location and configuration.",
            "reference": "google.cloud.automl_v1beta1.types.ExportEvaluatedExamplesOutputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_destination": {
                  "description": "The BigQuery location where the output is to be written to.  This field is a member of `oneof`_ ``destination``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1beta1.types.BigQueryDestination",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "dataset_id": {
                        "description": "The ID of a BigQuery Dataset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "output_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetModelEvaluationRequest",
      "description": "Request message for\n[AutoMl.GetModelEvaluation][google.cloud.automl.v1beta1.AutoMl.GetModelEvaluation].\n\nAttributes:\n    name (str):\n        Required. Resource name for the model\n        evaluation.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name for the model evaluation.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListModelEvaluationsRequest",
      "description": "Request message for\n[AutoMl.ListModelEvaluations][google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the model to list\n        the model evaluations for. If modelId is set as\n        \"-\", this will list model evaluations from\n        across all models of the parent location.\n    filter (str):\n        An expression for filtering the results of the request.\n\n        -  ``annotation_spec_id`` - for =, != or existence. See\n           example below for the last.\n\n        Some examples of using the filter are:\n\n        -  ``annotation_spec_id!=4`` --> The model evaluation was\n           done for annotation spec with ID different than 4.\n        -  ``NOT annotation_spec_id:*`` --> The model evaluation was\n           done for aggregate of all annotation specs.\n    page_size (int):\n        Requested page size.\n    page_token (str):\n        A token identifying a page of results for the server to\n        return. Typically obtained via\n        [List",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the model to list the model evaluations for. If modelId is set as \"-\", this will list model evaluations from across all models of the parent location.",
            "type": "string"
          },
          "filter": {
            "description": "An expression for filtering the results of the request.  -  ``annotation_spec_id`` - for =, != or existence. See example below for the last.  Some examples of using the filter are:  -  ``annotation_spec_id!=4`` --> The model evaluation was done for annotation spec with ID different than 4. -  ``NOT annotation_spec_id:*`` --> The model evaluation was done for aggregate of all annotation specs.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results for the server to return. Typically obtained via [ListModelEvaluationsResponse.next_page_token][google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token] of the previous [AutoMl.ListModelEvaluations][google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations] call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-automl/google/cloud/automl_v1beta1/types/prediction_service.py": [
    {
      "type": "function",
      "name": "PredictRequest",
      "description": "Request message for\n[PredictionService.Predict][google.cloud.automl.v1beta1.PredictionService.Predict].\n\nAttributes:\n    name (str):\n        Required. Name of the model requested to\n        serve the prediction.\n    payload (google.cloud.automl_v1beta1.types.ExamplePayload):\n        Required. Payload to perform a prediction on.\n        The payload must match the problem type that the\n        model was trained to solve.\n    params (MutableMapping[str, str]):\n        Additional domain-specific parameters, any string must be up\n        to 25000 characters long.\n\n        -  For Image Classification:\n\n           ``score_threshold`` - (float) A value from 0.0 to 1.0.\n           When the model makes predictions for an image, it will\n           only produce results that have at least this confidence\n           score. The default is 0.5.\n\n        -  For Image Object Detection: ``score_threshold`` - (float)\n           When Model detects objects on the image, it will only\n           produce bounding boxes which have at ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the model requested to serve the prediction.",
            "type": "string"
          },
          "payload": {
            "description": "Required. Payload to perform a prediction on. The payload must match the problem type that the model was trained to solve.",
            "reference": "google.cloud.automl_v1beta1.types.ExamplePayload",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "image": {
                  "description": "Example image.  This field is a member of `oneof`_ ``payload``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.Image",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "Required. URL of the image with a length limit of 5 KiB.",
                        "type": "string"
                      },
                      "height": {
                        "description": "Optional. Height of the image in number of pixels.",
                        "type": "integer"
                      },
                      "width": {
                        "description": "Optional. Width of the image in number of pixels.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "uri"
                    ]
                  }
                },
                "text_snippet": {
                  "description": "Example text.  This field is a member of `oneof`_ ``payload``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.TextSnippet",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "Required. The content of the text snippet as a string. Up to 250000 characters long.",
                        "type": "string"
                      },
                      "mime_type": {
                        "description": "Optional. The format of [content][google.cloud.automl.v1.TextSnippet.content]. Currently the only two allowed values are \"text/html\" and \"text/plain\". If left blank, the format is automatically determined from the type of the uploaded [content][google.cloud.automl.v1.TextSnippet.content].",
                        "type": "string"
                      },
                      "content_uri": {
                        "description": "Output only. HTTP URI where you can download the content.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "content"
                    ]
                  }
                },
                "document": {
                  "description": "Example document.  This field is a member of `oneof`_ ``payload``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.Document",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Optional. The document resource name. The name must be empty when creating a document. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
                        "type": "string"
                      },
                      "mime_type": {
                        "description": "Required. The MIME type of this document.",
                        "type": "string"
                      },
                      "knowledge_types": {
                        "description": "Required. The knowledge type of document content.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.Document.KnowledgeType"
                        }
                      },
                      "content_uri": {
                        "description": "The URI where the file content is located.  For documents stored in Google Cloud Storage, these URIs must have the form ``gs://<bucket-name>/<object-name>``.  NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the ``gs://`` format URI described above.  This field is a member of `oneof`_ ``source``.",
                        "type": "string"
                      },
                      "raw_content": {
                        "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.  This field is a member of `oneof`_ ``source``.",
                        "type": "object",
                        "reference": "bytes"
                      },
                      "enable_auto_reload": {
                        "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document.  Currently you can only enable automatic reload for documents sourced from a public url, see ``source`` field for the source types.  Reload status can be tracked in ``latest_reload_status``. If a reload fails, we will keep the document unchanged.  If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling ``ReloadDocument`` and clear the errors.",
                        "type": "boolean"
                      },
                      "latest_reload_status": {
                        "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Document.ReloadStatus",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "time": {
                              "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            },
                            "status": {
                              "description": "The status of a reload attempt or the initial load.",
                              "type": "object",
                              "reference": "google.rpc.status_pb2.Status",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "description": "Output only. State of the metadata job.",
                                    "type": "object",
                                    "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State"
                                  },
                                  "message": {
                                    "description": "Output only. Message relating to the progression of a metadata job.",
                                    "type": "string"
                                  },
                                  "completion_percent": {
                                    "description": "Output only. Progress tracking.",
                                    "type": "integer"
                                  },
                                  "update_time": {
                                    "description": "Output only. The time when the status was updated.",
                                    "type": "object",
                                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a ``key`` or a ``value`` of the metadata is 1024 bytes.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "state": {
                        "description": "Output only. The current state of the document.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Document.State"
                      }
                    },
                    "required": [
                      "display_name",
                      "mime_type",
                      "knowledge_types"
                    ]
                  }
                }
              }
            }
          },
          "params": {
            "description": "Additional domain-specific parameters, any string must be up to 25000 characters long.  -  For Image Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Object Detection: ``score_threshold`` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be returned in the response. Default is 100, the requested value may be limited by server.  -  For Tables: feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotation. The default is false.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "payload"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchPredictRequest",
      "description": "Request message for\n[PredictionService.BatchPredict][google.cloud.automl.v1beta1.PredictionService.BatchPredict].\n\nAttributes:\n    name (str):\n        Required. Name of the model requested to\n        serve the batch prediction.\n    input_config (google.cloud.automl_v1beta1.types.BatchPredictInputConfig):\n        Required. The input configuration for batch\n        prediction.\n    output_config (google.cloud.automl_v1beta1.types.BatchPredictOutputConfig):\n        Required. The Configuration specifying where\n        output predictions should be written.\n    params (MutableMapping[str, str]):\n        Required. Additional domain-specific parameters for the\n        predictions, any string must be up to 25000 characters long.\n\n        -  For Text Classification:\n\n           ``score_threshold`` - (float) A value from 0.0 to 1.0.\n           When the model makes predictions for a text snippet, it\n           will only produce results that have at least this\n           confidence score. The default is 0.5.\n\n        -  Fo",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the model requested to serve the batch prediction.",
            "type": "string"
          },
          "input_config": {
            "description": "Required. The input configuration for batch prediction.",
            "reference": "google.cloud.automl_v1beta1.types.BatchPredictInputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_source": {
                  "description": "Required. The Google Cloud Storage location for the input content.  This field is a member of `oneof`_ ``source``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.GcsSource",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "input_uris": {
                        "description": "Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, ``gs://bucket/directory/object.json``) or a pattern matching one or more files, such as ``gs://bucket/directory/*.json``. A request can contain at most 100 files, and each file can be up to 2 GB. See `Importing catalog information </recommendations-ai/docs/upload-catalog>`__ for the expected file format and setup instructions.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "input_uris"
                    ]
                  }
                }
              },
              "required": [
                "gcs_source"
              ]
            }
          },
          "output_config": {
            "description": "Required. The Configuration specifying where output predictions should be written.",
            "reference": "google.cloud.automl_v1beta1.types.BatchPredictOutputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_destination": {
                  "description": "Required. The Google Cloud Storage location of the directory where the output is to be written to.  This field is a member of `oneof`_ ``destination``.",
                  "type": "object",
                  "reference": "google.cloud.automl_v1.types.GcsDestination",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "The URI of the Cloud Storage object. It's the same URI that is used by gsutil. For example: \"gs://bucket_name/object_name\". See `Viewing and Editing Object Metadata <https://cloud.google.com/storage/docs/viewing-editing-metadata>`__ for more information.  This field is a member of `oneof`_ ``object_uri``.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "gcs_destination"
              ]
            }
          },
          "params": {
            "description": "Required. Additional domain-specific parameters for the predictions, any string must be up to 25000 characters long.  -  For Text Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for a text snippet, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Object Detection:  ``score_threshold`` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be produced per image. Default is 100, the requested value may be limited by server.  -  For Video Classification :  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for a video, it will only produce results that have at least this confidence score. The default is 0.5. ``segment_classification`` - (boolean) Set to true to request segment-level classification. AutoML Video Intelligence returns labels and their confidence scores for the entire segment of the video that user specified in the request configuration. The default is \"true\". ``shot_classification`` - (boolean) Set to true to request shot-level classification. AutoML Video Intelligence determines the boundaries for each camera shot in the entire segment of the video that user specified in the request configuration. AutoML Video Intelligence then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\". ``1s_interval_classification`` - (boolean) Set to true to request classification for a video at one-second intervals. AutoML Video Intelligence returns labels and their confidence scores for each second of the entire segment of the video that user specified in the request configuration. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\".  -  For Tables:  feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotations. The default is false.  -  For Video Object Tracking:  ``score_threshold`` - (float) When Model detects objects on video frames, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be returned per frame. Default is 100, the requested value may be limited by server. ``min_bounding_box_size`` - (float) Only bounding boxes with shortest edge at least that long as a relative value of video frame size will be returned. Value in 0 to 1 range. Default is 0.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "input_config",
          "output_config",
          "params"
        ]
      }
    }
  ]
}