{
  "AutoMl": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_dataset",
          "description": "Creates a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_create_dataset():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        dataset = automl_v1beta1.Dataset()\n        dataset.translation_dataset_metadata.source_language_code = \"source_language_code_value\"\n        dataset.translation_dataset_metadata.target_language_code = \"target_language_code_value\"\n\n        request = automl_v1beta1.CreateDatasetRequest(\n            parent=\"parent_value\",\n            dataset=dataset,\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project to create the dataset for.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "dataset": {
                "type": "google.cloud.automl_v1beta1.types.Dataset",
                "description": "Required. The dataset to create. This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.Dataset: A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dataset",
          "description": "Gets a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_dataset():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetDatasetRequest, dict]]):\n        The request object. Reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.Dataset: A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_datasets",
          "description": "Lists datasets in a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_list_datasets():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ListDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_datasets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project from which to list datasets.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.services.auto_ml.pagers.ListDatasetsAsyncPager: Response message for [AutoMl.ListDatasets][google.cloud.automl.v1beta1.AutoMl.ListDatasets].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListDatasetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_dataset",
          "description": "Updates a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_update_dataset():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        dataset = automl_v1beta1.Dataset()\n        dataset.translation_dataset_metadata.source_language_code = \"source_language_code_value\"\n        dataset.translation_dataset_metadata.target_language_code = \"target_language_code_value\"\n\n        request = automl_v1beta1.UpdateDatasetRequest(\n            dataset=dataset,\n        )\n\n        # Make the request\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "google.cloud.automl_v1beta1.types.Dataset",
                "description": "Required. The dataset which replaces the resource on the server.  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.Dataset: A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_dataset",
          "description": "Deletes a dataset and all of its contents. Returns empty\nresponse in the\n[response][google.longrunning.Operation.response] field when it\ncompletes, and ``delete_details`` in the\n[metadata][google.longrunning.Operation.metadata] field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_delete_dataset():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.DeleteDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_data",
          "description": "Imports data into a dataset. For Tables this method can only be\ncalled on an empty Dataset.\n\nFor Tables:\n\n-  A\n   [schema_inference_version][google.cloud.automl.v1beta1.InputConfig.params]\n   parameter must be explicitly set. Returns an empty response\n   in the [response][google.longrunning.Operation.response]\n   field when it completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_import_data():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ImportDataR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset name. Dataset must already exist. All imported annotations and examples will be added.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.automl_v1beta1.types.InputConfig",
                "description": "Required. The desired input location and its domain specific semantics, if any.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ImportDataRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_data",
          "description": "Exports dataset's data to the provided output location. Returns\nan empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_export_data():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ExportDataRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.export_data(request=request)\n\n        print(\"Waiting for operation to co",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1beta1.types.OutputConfig",
                "description": "Required. The desired output location.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ExportDataRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_annotation_spec",
          "description": "Gets an annotation spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_annotation_spec():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetAnnotationSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_annotation_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetAnnotationSpecRequest, dict",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the annotation spec to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.AnnotationSpec: A definition of an annotation spec."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetAnnotationSpecRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_table_spec",
          "description": "Gets a table spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_table_spec():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetTableSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_table_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetTableSpecRequest, dict]]):\n        The request o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the table spec to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.TableSpec: A specification of a relational table. The table's schema is represented via its child column specs. It is pre-populated as part of ImportData by schema inference algorithm, the version of which is a required parameter of ImportData InputConfig. Note: While working with a table, at times the schema may be inconsistent with the data in the table (e.g. string in a FLOAT64 column). The consistency validation is done upon creation of a model. Used by: \\* Tables"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetTableSpecRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_table_specs",
          "description": "Lists table specs in a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_list_table_specs():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ListTableSpecsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_table_specs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.autom",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the dataset to list table specs from.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.services.auto_ml.pagers.ListTableSpecsAsyncPager: Response message for [AutoMl.ListTableSpecs][google.cloud.automl.v1beta1.AutoMl.ListTableSpecs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListTableSpecsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_table_spec",
          "description": "Updates a table spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_update_table_spec():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.UpdateTableSpecRequest(\n        )\n\n        # Make the request\n        response = await client.update_table_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.UpdateTableSpecRequest, dict]]):\n        The request object. Request m",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "table_spec": {
                "type": "google.cloud.automl_v1beta1.types.TableSpec",
                "description": "Required. The table spec which replaces the resource on the server.  This corresponds to the ``table_spec`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.TableSpec: A specification of a relational table. The table's schema is represented via its child column specs. It is pre-populated as part of ImportData by schema inference algorithm, the version of which is a required parameter of ImportData InputConfig. Note: While working with a table, at times the schema may be inconsistent with the data in the table (e.g. string in a FLOAT64 column). The consistency validation is done upon creation of a model. Used by: \\* Tables"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "table_spec",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateTableSpecRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_column_spec",
          "description": "Gets a column spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_column_spec():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetColumnSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_column_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetColumnSpecRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the column spec to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.ColumnSpec: A representation of a column in a relational table. When listing them, column specs are returned in the same order in which they were given on import . Used by: \\* Tables"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetColumnSpecRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_column_specs",
          "description": "Lists column specs in a table spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_list_column_specs():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ListColumnSpecsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_column_specs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the table spec to list column specs from.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.services.auto_ml.pagers.ListColumnSpecsAsyncPager: Response message for [AutoMl.ListColumnSpecs][google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListColumnSpecsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_column_spec",
          "description": "Updates a column spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_update_column_spec():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.UpdateColumnSpecRequest(\n        )\n\n        # Make the request\n        response = await client.update_column_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.UpdateColumnSpecRequest, dict]]):\n        The request object. Requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "column_spec": {
                "type": "google.cloud.automl_v1beta1.types.ColumnSpec",
                "description": "Required. The column spec which replaces the resource on the server.  This corresponds to the ``column_spec`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.ColumnSpec: A representation of a column in a relational table. When listing them, column specs are returned in the same order in which they were given on import . Used by: \\* Tables"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "column_spec",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateColumnSpecRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_model",
          "description": "Creates a model. Returns a Model in the\n[response][google.longrunning.Operation.response] field when it\ncompletes. When you create a model, several model evaluations\nare created for it: a global evaluation, and one evaluation for\neach annotation spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_create_model():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.CreateModelRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent project where the model is being created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "google.cloud.automl_v1beta1.types.Model",
                "description": "Required. The model to create. This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.automl_v1beta1.types.Model` API proto representing a trained machine learning model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_model",
          "description": "Gets a model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_model():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetModelRequest, dict]]):\n        The request object. Request message ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.Model: API proto representing a trained machine learning model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_models",
          "description": "Lists models.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_list_models():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ListModelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_models(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.ListModelsReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project, from which to list the models.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.services.auto_ml.pagers.ListModelsAsyncPager: Response message for [AutoMl.ListModels][google.cloud.automl.v1beta1.AutoMl.ListModels].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListModelsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_model",
          "description": "Deletes a model. Returns ``google.protobuf.Empty`` in the\n[response][google.longrunning.Operation.response] field when it\ncompletes, and ``delete_details`` in the\n[metadata][google.longrunning.Operation.metadata] field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_delete_model():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.DeleteModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_model(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model being deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_model",
          "description": "Deploys a model. If a model is already deployed, deploying it\nwith the same parameters has no effect. Deploying with different\nparametrs (as e.g. changing\n\n[node_number][google.cloud.automl.v1beta1.ImageObjectDetectionModelDeploymentMetadata.node_number])\nwill reset the deployment state without pausing the model's\navailability.\n\nOnly applicable for Text Classification, Image Object Detection\n, Tables, and Image Segmentation; all other domains manage\ndeployment automatically.\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.h",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model to deploy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeployModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undeploy_model",
          "description": "Undeploys a model. If the model is not deployed this method has\nno effect.\n\nOnly applicable for Text Classification, Image Object Detection\nand Tables; all other domains manage deployment automatically.\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_undeploy_model():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.UndeployModelRequest(\n            na",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model to undeploy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UndeployModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_model",
          "description": "Exports a trained, \"export-able\", model to a user specified\nGoogle Cloud Storage location. A model is considered export-able\nif and only if it has an export format defined for it in\n\n[ModelExportOutputConfig][google.cloud.automl.v1beta1.ModelExportOutputConfig].\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_export_model():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the model to export.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1beta1.types.ModelExportOutputConfig",
                "description": "Required. The desired output location and configuration.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ExportModelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_evaluated_examples",
          "description": "Exports examples on which the model was evaluated (i.e. which\nwere in the TEST set of the dataset the model was created from),\ntogether with their ground truth annotations and the annotations\ncreated (predicted) by the model. The examples, ground truth and\npredictions are exported in the state they were at the moment\nthe model was evaluated.\n\nThis export is available only for 30 days since the model\nevaluation is created.\n\nCurrently only available for Tables.\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the model whose evaluated examples are to be exported.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1beta1.types.ExportEvaluatedExamplesOutputConfig",
                "description": "Required. The desired output location and configuration.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ExportEvaluatedExamplesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_model_evaluation",
          "description": "Gets a model evaluation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_get_model_evaluation():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.GetModelEvaluationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_model_evaluation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1beta1.types.GetModelEvaluationRequest, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name for the model evaluation.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.ModelEvaluation: Evaluation results of a model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetModelEvaluationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_model_evaluations",
          "description": "Lists model evaluations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1beta1\n\n    async def sample_list_model_evaluations():\n        # Create a client\n        client = automl_v1beta1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1beta1.ListModelEvaluationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_model_evaluations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the model to list the model evaluations for. If modelId is set as \"-\", this will list model evaluations from across all models of the parent location.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.services.auto_ml.pagers.ListModelEvaluationsAsyncPager: Response message for [AutoMl.ListModelEvaluations][google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListModelEvaluationsRequest"
          ]
        }
      }
    ]
  },
  "PredictionService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "predict",
          "description": "Perform an online prediction. The prediction result will be\ndirectly returned in the response. Available for following ML\nproblems, and their expected request payloads:\n\n-  Image Classification - Image in .JPEG, .GIF or .PNG format,\n   image_bytes up to 30MB.\n-  Image Object Detection - Image in .JPEG, .GIF or .PNG format,\n   image_bytes up to 30MB.\n-  Text Classification - TextSnippet, content up to 60,000\n   characters, UTF-8 encoded.\n-  Text Extraction - TextSnippet, content up to 30,000\n   characters, UTF-8 NFC encoded.\n-  Translation - TextSnippet, content up to 25,000 characters,\n   UTF-8 encoded.\n-  Tables - Row, with column values matching the columns of the\n   model, up to 5MB. Not available for FORECASTING\n\n[prediction_type][google.cloud.automl.v1beta1.TablesModelMetadata.prediction_type].\n\n-  Text Sentiment - TextSnippet, content up 500 characters,\n   UTF-8 encoded.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the model requested to serve the prediction.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "payload": {
                "type": "google.cloud.automl_v1beta1.types.ExamplePayload",
                "description": "Required. Payload to perform a prediction on. The payload must match the problem type that the model was trained to solve.  This corresponds to the ``payload`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "params": {
                "type": "MutableMapping[str, str]",
                "description": "Additional domain-specific parameters, any string must be up to 25000 characters long.  -  For Image Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Object Detection: ``score_threshold`` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be returned in the response. Default is 100, the requested value may be limited by server.  -  For Tables: feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotation. The default is false.  This corresponds to the ``params`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1beta1.types.PredictResponse: Response message for [PredictionService.Predict][google.cloud.automl.v1beta1.PredictionService.Predict]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "payload",
              "params",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "prediction_service.PredictRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_predict",
          "description": "Perform a batch prediction. Unlike the online\n[Predict][google.cloud.automl.v1beta1.PredictionService.Predict],\nbatch prediction result won't be immediately available in the\nresponse. Instead, a long running operation object is returned.\nUser can poll the operation result via\n[GetOperation][google.longrunning.Operations.GetOperation]\nmethod. Once the operation is done,\n[BatchPredictResult][google.cloud.automl.v1beta1.BatchPredictResult]\nis returned in the\n[response][google.longrunning.Operation.response] field.\nAvailable for following ML problems:\n\n-  Image Classification\n-  Image Object Detection\n-  Video Classification\n-  Video Object Tracking \\* Text Extraction\n-  Tables\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the model requested to serve the batch prediction.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.automl_v1beta1.types.BatchPredictInputConfig",
                "description": "Required. The input configuration for batch prediction.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1beta1.types.BatchPredictOutputConfig",
                "description": "Required. The Configuration specifying where output predictions should be written.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "params": {
                "type": "MutableMapping[str, str]",
                "description": "Required. Additional domain-specific parameters for the predictions, any string must be up to 25000 characters long.  -  For Text Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for a text snippet, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Classification:  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  -  For Image Object Detection:  ``score_threshold`` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be produced per image. Default is 100, the requested value may be limited by server.  -  For Video Classification :  ``score_threshold`` - (float) A value from 0.0 to 1.0. When the model makes predictions for a video, it will only produce results that have at least this confidence score. The default is 0.5. ``segment_classification`` - (boolean) Set to true to request segment-level classification. AutoML Video Intelligence returns labels and their confidence scores for the entire segment of the video that user specified in the request configuration. The default is \"true\". ``shot_classification`` - (boolean) Set to true to request shot-level classification. AutoML Video Intelligence determines the boundaries for each camera shot in the entire segment of the video that user specified in the request configuration. AutoML Video Intelligence then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\". ``1s_interval_classification`` - (boolean) Set to true to request classification for a video at one-second intervals. AutoML Video Intelligence returns labels and their confidence scores for each second of the entire segment of the video that user specified in the request configuration. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\".  -  For Tables:  feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotations. The default is false.  -  For Video Object Tracking:  ``score_threshold`` - (float) When Model detects objects on video frames, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. ``max_bounding_box_count`` - (int64) No more than this number of bounding boxes will be returned per frame. Default is 100, the requested value may be limited by server. ``min_bounding_box_size`` - (float) Only bounding boxes with shortest edge at least that long as a relative value of video frame size will be returned. Value in 0 to 1 range. Default is 0.  This corresponds to the ``params`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.automl_v1beta1.types.BatchPredictResult` Result of the Batch Predict. This message is returned in [response][google.longrunning.Operation.response] of the operation returned by the [PredictionService.BatchPredict][google.cloud.automl.v1beta1.PredictionService.BatchPredict]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "output_config",
              "params",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "prediction_service.BatchPredictRequest"
          ]
        }
      }
    ]
  }
}