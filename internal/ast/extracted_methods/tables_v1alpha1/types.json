{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-area120-tables\\google\\area120\\tables_v1alpha1\\types\\tables.py": [
    {
      "type": "request_class",
      "name": "GetTableRequest",
      "docstring": "Request message for TablesService.GetTable.\n\nAttributes:\n    name (str):\n        Required. The name of the table to retrieve.\n        Format: tables/{table}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the table to retrieve. Format: tables/{table}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListTablesRequest",
      "docstring": "Request message for TablesService.ListTables.\n\nAttributes:\n    page_size (int):\n        The maximum number of tables to return. The\n        service may return fewer than this value.\n\n        If unspecified, at most 20 tables are returned.\n        The maximum value is 100; values above 100 are\n        coerced to 100.\n    page_token (str):\n        A page token, received from a previous ``ListTables`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListTables`` must match the call that provided the page\n        token.",
      "attributes": {
        "page_size": {
          "type": "int",
          "description": "The maximum number of tables to return. The service may return fewer than this value.  If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListTables`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTables`` must match the call that provided the page token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListTablesResponse",
      "docstring": "Response message for TablesService.ListTables.\n\nAttributes:\n    tables (MutableSequence[google.area120.tables_v1alpha1.types.Table]):\n        The list of tables.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is empty, there are no subsequent\n        pages.",
      "attributes": {
        "tables": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Table]",
          "description": "The list of tables."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetWorkspaceRequest",
      "docstring": "Request message for TablesService.GetWorkspace.\n\nAttributes:\n    name (str):\n        Required. The name of the workspace to\n        retrieve. Format: workspaces/{workspace}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListWorkspacesRequest",
      "docstring": "Request message for TablesService.ListWorkspaces.\n\nAttributes:\n    page_size (int):\n        The maximum number of workspaces to return.\n        The service may return fewer than this value.\n\n        If unspecified, at most 10 workspaces are\n        returned. The maximum value is 25; values above\n        25 are coerced to 25.\n    page_token (str):\n        A page token, received from a previous ``ListWorkspaces``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListWorkspaces`` must match the call that provided the\n        page token.",
      "attributes": {
        "page_size": {
          "type": "int",
          "description": "The maximum number of workspaces to return. The service may return fewer than this value.  If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are coerced to 25."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListWorkspaces`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListWorkspaces`` must match the call that provided the page token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListWorkspacesResponse",
      "docstring": "Response message for TablesService.ListWorkspaces.\n\nAttributes:\n    workspaces (MutableSequence[google.area120.tables_v1alpha1.types.Workspace]):\n        The list of workspaces.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is empty, there are no subsequent\n        pages.",
      "attributes": {
        "workspaces": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Workspace]",
          "description": "The list of workspaces."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetRowRequest",
      "docstring": "Request message for TablesService.GetRow.\n\nAttributes:\n    name (str):\n        Required. The name of the row to retrieve.\n        Format: tables/{table}/rows/{row}\n    view (google.area120.tables_v1alpha1.types.View):\n        Optional. Column key to use for values in the\n        row. Defaults to user entered name.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}"
        },
        "view": {
          "type": "google.area120.tables_v1alpha1.types.View",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRowsRequest",
      "docstring": "Request message for TablesService.ListRows.\n\nAttributes:\n    parent (str):\n        Required. The parent table.\n        Format: tables/{table}\n    page_size (int):\n        The maximum number of rows to return. The\n        service may return fewer than this value.\n\n        If unspecified, at most 50 rows are returned.\n        The maximum value is 1,000; values above 1,000\n        are coerced to 1,000.\n    page_token (str):\n        A page token, received from a previous ``ListRows`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListRows`` must match the call that provided the page\n        token.\n    view (google.area120.tables_v1alpha1.types.View):\n        Optional. Column key to use for values in the\n        row. Defaults to user entered name.\n    filter (str):\n        Optional. Raw text query to search for in\n        rows of the table. Special characters must be\n        escaped. Logical operators and field specific\n        filte",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent table. Format: tables/{table}"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of rows to return. The service may return fewer than this value.  If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListRows`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListRows`` must match the call that provided the page token."
        },
        "view": {
          "type": "google.area120.tables_v1alpha1.types.View",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
        },
        "filter": {
          "type": "str",
          "description": "Optional. Raw text query to search for in rows of the table. Special characters must be escaped. Logical operators and field specific filtering not supported."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRowsResponse",
      "docstring": "Response message for TablesService.ListRows.\n\nAttributes:\n    rows (MutableSequence[google.area120.tables_v1alpha1.types.Row]):\n        The rows from the specified table.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is empty, there are no subsequent\n        pages.",
      "attributes": {
        "rows": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Row]",
          "description": "The rows from the specified table."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateRowRequest",
      "docstring": "Request message for TablesService.CreateRow.\n\nAttributes:\n    parent (str):\n        Required. The parent table where this row\n        will be created. Format: tables/{table}\n    row (google.area120.tables_v1alpha1.types.Row):\n        Required. The row to create.\n    view (google.area120.tables_v1alpha1.types.View):\n        Optional. Column key to use for values in the\n        row. Defaults to user entered name.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent table where this row will be created. Format: tables/{table}"
        },
        "row": {
          "type": "google.area120.tables_v1alpha1.types.Row",
          "description": "Required. The row to create."
        },
        "view": {
          "type": "google.area120.tables_v1alpha1.types.View",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchCreateRowsRequest",
      "docstring": "Request message for TablesService.BatchCreateRows.\n\nAttributes:\n    parent (str):\n        Required. The parent table where the rows\n        will be created. Format: tables/{table}\n    requests (MutableSequence[google.area120.tables_v1alpha1.types.CreateRowRequest]):\n        Required. The request message specifying the\n        rows to create.\n        A maximum of 500 rows can be created in a single\n        batch.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent table where the rows will be created. Format: tables/{table}"
        },
        "requests": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.CreateRowRequest]",
          "description": "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchCreateRowsResponse",
      "docstring": "Response message for TablesService.BatchCreateRows.\n\nAttributes:\n    rows (MutableSequence[google.area120.tables_v1alpha1.types.Row]):\n        The created rows.",
      "attributes": {
        "rows": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Row]",
          "description": "The created rows."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateRowRequest",
      "docstring": "Request message for TablesService.UpdateRow.\n\nAttributes:\n    row (google.area120.tables_v1alpha1.types.Row):\n        Required. The row to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n    view (google.area120.tables_v1alpha1.types.View):\n        Optional. Column key to use for values in the\n        row. Defaults to user entered name.",
      "attributes": {
        "row": {
          "type": "google.area120.tables_v1alpha1.types.Row",
          "description": "Required. The row to update."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to update."
        },
        "view": {
          "type": "google.area120.tables_v1alpha1.types.View",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchUpdateRowsRequest",
      "docstring": "Request message for TablesService.BatchUpdateRows.\n\nAttributes:\n    parent (str):\n        Required. The parent table shared by all rows\n        being updated. Format: tables/{table}\n    requests (MutableSequence[google.area120.tables_v1alpha1.types.UpdateRowRequest]):\n        Required. The request messages specifying the\n        rows to update.\n        A maximum of 500 rows can be modified in a\n        single batch.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent table shared by all rows being updated. Format: tables/{table}"
        },
        "requests": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.UpdateRowRequest]",
          "description": "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchUpdateRowsResponse",
      "docstring": "Response message for TablesService.BatchUpdateRows.\n\nAttributes:\n    rows (MutableSequence[google.area120.tables_v1alpha1.types.Row]):\n        The updated rows.",
      "attributes": {
        "rows": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Row]",
          "description": "The updated rows."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteRowRequest",
      "docstring": "Request message for TablesService.DeleteRow\n\nAttributes:\n    name (str):\n        Required. The name of the row to delete.\n        Format: tables/{table}/rows/{row}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the row to delete. Format: tables/{table}/rows/{row}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchDeleteRowsRequest",
      "docstring": "Request message for TablesService.BatchDeleteRows\n\nAttributes:\n    parent (str):\n        Required. The parent table shared by all rows\n        being deleted. Format: tables/{table}\n    names (MutableSequence[str]):\n        Required. The names of the rows to delete.\n        All rows must belong to the parent table or else\n        the entire batch will fail. A maximum of 500\n        rows can be deleted in a batch.\n        Format: tables/{table}/rows/{row}",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent table shared by all rows being deleted. Format: tables/{table}"
        },
        "names": {
          "type": "MutableSequence[str]",
          "description": "Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Table",
      "docstring": "A single table.\n\nAttributes:\n    name (str):\n        The resource name of the table. Table names have the form\n        ``tables/{table}``.\n    display_name (str):\n        The human readable title of the table.\n    columns (MutableSequence[google.area120.tables_v1alpha1.types.ColumnDescription]):\n        List of columns in this table.\n        Order of columns matches the display order.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The resource name of the table. Table names have the form ``tables/{table}``."
        },
        "display_name": {
          "type": "str",
          "description": "The human readable title of the table."
        },
        "columns": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.ColumnDescription]",
          "description": "List of columns in this table. Order of columns matches the display order."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ColumnDescription",
      "docstring": "Details on a column in the table.\n\nAttributes:\n    name (str):\n        column name\n    data_type (str):\n        Data type of the column Supported types are auto_id,\n        boolean, boolean_list, creator, create_timestamp, date,\n        dropdown, location, integer, integer_list, number,\n        number_list, person, person_list, tags, check_list, text,\n        text_list, update_timestamp, updater, relationship,\n        file_attachment_list. These types directly map to the column\n        types supported on Tables website.\n    id (str):\n        Internal id for a column.\n    labels (MutableSequence[google.area120.tables_v1alpha1.types.LabeledItem]):\n        Optional. Range of labeled values for the\n        column. Some columns like tags and drop-downs\n        limit the values to a set of possible values. We\n        return the range of values in such cases to help\n        clients implement better user data validation.\n    relationship_details (google.area120.tables_v1alpha1.types.RelationshipDetails):\n        Opti",
      "attributes": {
        "name": {
          "type": "str",
          "description": "column name"
        },
        "data_type": {
          "type": "str",
          "description": "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website."
        },
        "id": {
          "type": "str",
          "description": "Internal id for a column."
        },
        "labels": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.LabeledItem]",
          "description": "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation."
        },
        "relationship_details": {
          "type": "google.area120.tables_v1alpha1.types.RelationshipDetails",
          "description": "Optional. Additional details about a relationship column. Specified when data_type is relationship."
        },
        "lookup_details": {
          "type": "google.area120.tables_v1alpha1.types.LookupDetails",
          "description": "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LabeledItem",
      "docstring": "A single item in a labeled column.\n\nAttributes:\n    name (str):\n        Display string as entered by user.\n    id (str):\n        Internal id associated with the item.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Display string as entered by user."
        },
        "id": {
          "type": "str",
          "description": "Internal id associated with the item."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RelationshipDetails",
      "docstring": "Details about a relationship column.\n\nAttributes:\n    linked_table (str):\n        The name of the table this relationship is\n        linked to.",
      "attributes": {
        "linked_table": {
          "type": "str",
          "description": "The name of the table this relationship is linked to."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LookupDetails",
      "docstring": "Details about a lookup column whose value comes from the\nassociated relationship.\n\nAttributes:\n    relationship_column (str):\n        The name of the relationship column\n        associated with the lookup.\n    relationship_column_id (str):\n        The id of the relationship column.",
      "attributes": {
        "relationship_column": {
          "type": "str",
          "description": "The name of the relationship column associated with the lookup."
        },
        "relationship_column_id": {
          "type": "str",
          "description": "The id of the relationship column."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Row",
      "docstring": "A single row in a table.\n\nAttributes:\n    name (str):\n        The resource name of the row. Row names have the form\n        ``tables/{table}/rows/{row}``. The name is ignored when\n        creating a row.\n    values (MutableMapping[str, google.protobuf.struct_pb2.Value]):\n        The values of the row. This is a map of\n        column key to value. Key is user entered\n        name(default) or the internal column id based on\n        the view in the request.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The resource name of the row. Row names have the form ``tables/{table}/rows/{row}``. The name is ignored when creating a row."
        },
        "values": {
          "type": "MutableMapping[str, google.protobuf.struct_pb2.Value]",
          "description": "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Workspace",
      "docstring": "A single workspace.\n\nAttributes:\n    name (str):\n        The resource name of the workspace. Workspace names have the\n        form ``workspaces/{workspace}``.\n    display_name (str):\n        The human readable title of the workspace.\n    tables (MutableSequence[google.area120.tables_v1alpha1.types.Table]):\n        The list of tables in the workspace.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The resource name of the workspace. Workspace names have the form ``workspaces/{workspace}``."
        },
        "display_name": {
          "type": "str",
          "description": "The human readable title of the workspace."
        },
        "tables": {
          "type": "MutableSequence[google.area120.tables_v1alpha1.types.Table]",
          "description": "The list of tables in the workspace."
        }
      }
    }
  ]
}