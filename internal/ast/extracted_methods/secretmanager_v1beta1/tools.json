{
  "SecretManagerService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_secrets",
          "description": "Lists [Secrets][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_list_secrets():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.ListSecretsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_secrets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project associated with the [Secrets][google.cloud.secrets.v1beta1.Secret], in the format ``projects/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.services.secret_manager_service.pagers.ListSecretsAsyncPager: Response message for [SecretManagerService.ListSecrets][google.cloud.secrets.v1beta1.SecretManagerService.ListSecrets].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListSecretsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_secret",
          "description": "Creates a new [Secret][google.cloud.secrets.v1beta1.Secret]\ncontaining no\n[SecretVersions][google.cloud.secrets.v1beta1.SecretVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_create_secret():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.CreateSecretRequest(\n            parent=\"parent_value\",\n            secret_id=\"secret_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_secr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project to associate with the [Secret][google.cloud.secrets.v1beta1.Secret], in the format ``projects/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "secret_id": {
                "type": "str",
                "description": "Required. This must be unique within the project.  A secret ID is a string with a maximum length of 255 characters and can contain uppercase and lowercase letters, numerals, and the hyphen (``-``) and underscore (``_``) characters.  This corresponds to the ``secret_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "secret": {
                "type": "google.cloud.secretmanager_v1beta1.types.Secret",
                "description": "Required. A [Secret][google.cloud.secrets.v1beta1.Secret] with initial field values.  This corresponds to the ``secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.Secret: A [Secret][google.cloud.secrets.v1beta1.Secret] is a logical secret whose value and versions can be accessed.  A [Secret][google.cloud.secrets.v1beta1.Secret] is made up of zero or more [SecretVersions][google.cloud.secrets.v1beta1.SecretVersion] that represent the secret data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "secret_id",
              "secret",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "add_secret_version",
          "description": "Creates a new\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion]\ncontaining secret data and attaches it to an existing\n[Secret][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_add_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.AddSecretVersionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.add_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [Secret][google.cloud.secrets.v1beta1.Secret] to associate with the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] in the format ``projects/*/secrets/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "payload": {
                "type": "google.cloud.secretmanager_v1beta1.types.SecretPayload",
                "description": "Required. The secret payload of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].  This corresponds to the ``payload`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.SecretVersion: A secret version resource in the Secret Manager API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "payload",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.AddSecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_secret",
          "description": "Gets metadata for a given\n[Secret][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_get_secret():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.GetSecretRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_secret(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [Secret][google.cloud.secrets.v1beta1.Secret], in the format ``projects/*/secrets/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.Secret: A [Secret][google.cloud.secrets.v1beta1.Secret] is a logical secret whose value and versions can be accessed.  A [Secret][google.cloud.secrets.v1beta1.Secret] is made up of zero or more [SecretVersions][google.cloud.secrets.v1beta1.SecretVersion] that represent the secret data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_secret",
          "description": "Updates metadata of an existing\n[Secret][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_update_secret():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.UpdateSecretRequest(\n        )\n\n        # Make the request\n        response = await client.update_secret(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.secretmana",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "secret": {
                "type": "google.cloud.secretmanager_v1beta1.types.Secret",
                "description": "Required. [Secret][google.cloud.secrets.v1beta1.Secret] with updated field values.  This corresponds to the ``secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Specifies the fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.Secret: A [Secret][google.cloud.secrets.v1beta1.Secret] is a logical secret whose value and versions can be accessed.  A [Secret][google.cloud.secrets.v1beta1.Secret] is made up of zero or more [SecretVersions][google.cloud.secrets.v1beta1.SecretVersion] that represent the secret data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "secret",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_secret",
          "description": "Deletes a [Secret][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_delete_secret():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.DeleteSecretRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_secret(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.secretmanager_v1beta1.types.DeleteSecretRequest, dict]]):\n        T",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [Secret][google.cloud.secrets.v1beta1.Secret] to delete in the format ``projects/*/secrets/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_secret_versions",
          "description": "Lists\n[SecretVersions][google.cloud.secrets.v1beta1.SecretVersion].\nThis call does not return secret data.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_list_secret_versions():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.ListSecretVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_secret_versions(request=request)\n\n        # Handle the response\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [Secret][google.cloud.secrets.v1beta1.Secret] associated with the [SecretVersions][google.cloud.secrets.v1beta1.SecretVersion] to list, in the format ``projects/*/secrets/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.services.secret_manager_service.pagers.ListSecretVersionsAsyncPager: Response message for [SecretManagerService.ListSecretVersions][google.cloud.secrets.v1beta1.SecretManagerService.ListSecretVersions].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListSecretVersionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_secret_version",
          "description": "Gets metadata for a\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\n``projects/*/secrets/*/versions/latest`` is an alias to the\n``latest``\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_get_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.GetSecretVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] in the format ``projects/*/secrets/*/versions/*``. ``projects/*/secrets/*/versions/latest`` is an alias to the ``latest`` [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.SecretVersion: A secret version resource in the Secret Manager API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetSecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "access_secret_version",
          "description": "Accesses a\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\nThis call returns the secret data.\n\n``projects/*/secrets/*/versions/latest`` is an alias to the\n``latest``\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_access_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.AccessSecretVersionRequest(\n            name=\"name_value\",\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] in the format ``projects/*/secrets/*/versions/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.AccessSecretVersionResponse: Response message for [SecretManagerService.AccessSecretVersion][google.cloud.secrets.v1beta1.SecretManagerService.AccessSecretVersion]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.AccessSecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_secret_version",
          "description": "Disables a\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\nSets the\n[state][google.cloud.secrets.v1beta1.SecretVersion.state] of the\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to\n[DISABLED][google.cloud.secrets.v1beta1.SecretVersion.State.DISABLED].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_disable_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.DisableSecretVersionRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to disable in the format ``projects/*/secrets/*/versions/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.SecretVersion: A secret version resource in the Secret Manager API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DisableSecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_secret_version",
          "description": "Enables a\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\nSets the\n[state][google.cloud.secrets.v1beta1.SecretVersion.state] of the\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to\n[ENABLED][google.cloud.secrets.v1beta1.SecretVersion.State.ENABLED].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_enable_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = secretmanager_v1beta1.EnableSecretVersionRequest(\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to enable in the format ``projects/*/secrets/*/versions/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.SecretVersion: A secret version resource in the Secret Manager API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.EnableSecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "destroy_secret_version",
          "description": "Destroys a\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion].\n\nSets the\n[state][google.cloud.secrets.v1beta1.SecretVersion.state] of the\n[SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to\n[DESTROYED][google.cloud.secrets.v1beta1.SecretVersion.State.DESTROYED]\nand irrevocably destroys the secret data.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n\n    async def sample_destroy_secret_version():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = sec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [SecretVersion][google.cloud.secrets.v1beta1.SecretVersion] to destroy in the format ``projects/*/secrets/*/versions/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.secretmanager_v1beta1.types.SecretVersion: A secret version resource in the Secret Manager API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DestroySecretVersionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the access control policy on the specified secret. Replaces\nany existing policy.\n\nPermissions on\n[SecretVersions][google.cloud.secrets.v1beta1.SecretVersion] are\nenforced according to the policy set on the associated\n[Secret][google.cloud.secrets.v1beta1.Secret].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.SetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the access control policy for a secret.\nReturns empty policy if the secret exists and does not\nhave a policy set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.get_iam_po",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.GetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns permissions that a caller has for the specified secret.\nIf the secret does not exist, this call returns an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building\npermission-aware UIs and command-line tools, not for\nauthorization checking. This operation may \"fail open\" without\nwarning.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import secretmanager_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = secretmanager_v1beta1.SecretManagerSe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.TestIamPermissionsRequest"
          ]
        }
      }
    ]
  }
}