{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-bigquery-biglake\\google\\cloud\\bigquery_biglake_v1alpha1\\types\\metastore.py": [
    {
      "type": "function",
      "name": "CreateCatalogRequest",
      "description": "Request message for the CreateCatalog method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this catalog will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    catalog (google.cloud.bigquery_biglake_v1alpha1.types.Catalog):\n        Required. The catalog to create. The ``name`` field does not\n        need to be provided.\n    catalog_id (str):\n        Required. The ID to use for the catalog,\n        which will become the final component of the\n        catalog's resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this catalog will be created. Format: projects/{project_id_or_number}/locations/{location_id}",
            "type": "string"
          },
          "catalog": {
            "description": "Required. The catalog to create. The ``name`` field does not need to be provided.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Required. Immutable. The fully qualified resource name of the catalog.",
                "type": "string"
              },
              "display_name": {
                "description": "Required. Immutable. The catalog display name.  This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
                "type": "string"
              },
              "product_level_config": {
                "type": "object",
                "properties": {
                  "ingestion_product_type": {
                    "description": "The type of [Product][google.cloud.retail.v2beta.Product]s allowed to be ingested into the catalog. Acceptable values are:  -  ``primary`` (default): You can ingest [Product][google.cloud.retail.v2beta.Product]s of all types. When ingesting a [Product][google.cloud.retail.v2beta.Product], its type will default to [Product.Type.PRIMARY][google.cloud.retail.v2beta.Product.Type.PRIMARY] if unset. -  ``variant`` (incompatible with Retail Search): You can only ingest [Product.Type.VARIANT][google.cloud.retail.v2beta.Product.Type.VARIANT] [Product][google.cloud.retail.v2beta.Product]s. This means [Product.primary_product_id][google.cloud.retail.v2beta.Product.primary_product_id] cannot be empty.  If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.  If this field is ``variant`` and [merchant_center_product_id_field][google.cloud.retail.v2beta.ProductLevelConfig.merchant_center_product_id_field] is ``itemGroupId``, an INVALID_ARGUMENT error is returned.  See `Product levels <https://cloud.google.com/retail/docs/catalog#product-levels>`__ for more details.",
                    "type": "string"
                  },
                  "merchant_center_product_id_field": {
                    "description": "Which field of `Merchant Center Product </bigquery-transfer/docs/merchant-center-products-schema>`__ should be imported as [Product.id][google.cloud.retail.v2beta.Product.id]. Acceptable values are:  -  ``offerId`` (default): Import ``offerId`` as the product ID. -  ``itemGroupId``: Import ``itemGroupId`` as the product ID. Notice that Retail API will choose one item from the ones with the same ``itemGroupId``, and use it to represent the item group.  If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.  If this field is ``itemGroupId`` and [ingestion_product_type][google.cloud.retail.v2beta.ProductLevelConfig.ingestion_product_type] is ``variant``, an INVALID_ARGUMENT error is returned.  See `Product levels <https://cloud.google.com/retail/docs/catalog#product-levels>`__ for more details.",
                    "type": "string"
                  }
                }
              },
              "merchant_center_linking_config": {
                "type": "object",
                "properties": {
                  "links": {
                    "description": "Links between Merchant Center accounts and branches.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "merchant_center_account_id": {
                          "description": "Required. The linked `Merchant Center account ID <https://developers.google.com/shopping-content/guides/accountstatuses>`__. The account must be a standalone account or a sub-account of a MCA.",
                          "type": "integer"
                        },
                        "branch_id": {
                          "description": "The branch ID (e.g. 0/1/2) within this catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won't change the linked branch here.  A single branch ID can only have one linked Merchant Center account ID.",
                          "type": "string"
                        },
                        "destinations": {
                          "description": "String representing the destination to import for, all if left empty. List of possible values is given in `Included destination <https://support.google.com/merchants/answer/7501026>`__. List of allowed string values: \"Shopping_ads\", \"Buy_on_google_listings\", \"Display_ads\", \"Local_inventory \\_ads\", \"Free_listings\", \"Free_local_listings\" NOTE: The string values are case sensitive.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "region_code": {
                          "description": "Region code of offers to accept. 2-letter Uppercase ISO 3166-1 alpha-2 code. List of values can be found `here <https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry>`__ under the ``region`` tag. If left blank no region filtering will be performed.  Example value: ``US``.",
                          "type": "string"
                        },
                        "language_code": {
                          "description": "Language of the title/description and other string attributes. Use language tags defined by `BCP 47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__. ISO 639-1.  This specifies the language of offers in Merchant Center that will be accepted. If empty no language filtering will be performed.  Example value: ``en``.",
                          "type": "string"
                        },
                        "feeds": {
                          "description": "Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "primary_feed_id": {
                                "description": "Merchant Center primary feed ID.",
                                "type": "integer"
                              },
                              "primary_feed_name": {
                                "description": "Merchant Center primary feed name. The name is used for the display purposes only.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "merchant_center_account_id"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "name",
              "display_name",
              "product_level_config"
            ]
          },
          "catalog_id": {
            "description": "Required. The ID to use for the catalog, which will become the final component of the catalog's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "catalog",
          "catalog_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteCatalogRequest",
      "description": "Request message for the DeleteCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the catalog to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetCatalogRequest",
      "description": "Request message for the GetCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the catalog to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListCatalogsRequest",
      "description": "Request message for the ListCatalogs method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        catalogs. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    page_size (int):\n        The maximum number of catalogs to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 catalogs will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListCatalogs``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListCatalogs`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of catalogs. Format: projects/{project_id_or_number}/locations/{location_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of catalogs to return. The service may return fewer than this value. If unspecified, at most 50 catalogs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListCatalogs`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListCatalogs`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateDatabaseRequest",
      "description": "Request message for the CreateDatabase method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this database will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    database (google.cloud.bigquery_biglake_v1alpha1.types.Database):\n        Required. The database to create. The ``name`` field does\n        not need to be provided.\n    database_id (str):\n        Required. The ID to use for the database,\n        which will become the final component of the\n        database's resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this database will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          },
          "database": {
            "description": "Required. The database to create. The ``name`` field does not need to be provided.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Some database resources may not have the `full resource name <https://google.aip.dev/122#full-resource-names>`__ populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The `full resource name <https://google.aip.dev/122#full-resource-names>`__ of the database that the user connected to, if it is supported by Cloud Asset Inventory.",
                "type": "string"
              },
              "display_name": {
                "description": "The human-readable name of the database that the user connected to.",
                "type": "string"
              },
              "user_name": {
                "description": "The username used to connect to the database. The username might not be an IAM principal and does not have a set format.",
                "type": "string"
              },
              "query": {
                "description": "The SQL statement that is associated with the database access.",
                "type": "string"
              },
              "grantees": {
                "description": "The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "version": {
                "description": "The version of the database, for example, POSTGRES_14. See `the complete list <https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion>`__.",
                "type": "string"
              }
            }
          },
          "database_id": {
            "description": "Required. The ID to use for the database, which will become the final component of the database's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "database",
          "database_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDatabaseRequest",
      "description": "Request message for the DeleteDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the database to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDatabaseRequest",
      "description": "Request message for the UpdateDatabase method.\n\nAttributes:\n    database (google.cloud.bigquery_biglake_v1alpha1.types.Database):\n        Required. The database to update.\n\n        The database's ``name`` field is used to identify the\n        database to update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "database": {
            "description": "Required. The database to update.  The database's ``name`` field is used to identify the database to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "object",
            "properties": {
              "name": {
                "description": "Some database resources may not have the `full resource name <https://google.aip.dev/122#full-resource-names>`__ populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The `full resource name <https://google.aip.dev/122#full-resource-names>`__ of the database that the user connected to, if it is supported by Cloud Asset Inventory.",
                "type": "string"
              },
              "display_name": {
                "description": "The human-readable name of the database that the user connected to.",
                "type": "string"
              },
              "user_name": {
                "description": "The username used to connect to the database. The username might not be an IAM principal and does not have a set format.",
                "type": "string"
              },
              "query": {
                "description": "The SQL statement that is associated with the database access.",
                "type": "string"
              },
              "grantees": {
                "description": "The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "version": {
                "description": "The version of the database, for example, POSTGRES_14. See `the complete list <https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion>`__.",
                "type": "string"
              }
            }
          },
          "update_mask": {
            "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "database"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDatabaseRequest",
      "description": "Request message for the GetDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the database to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDatabasesRequest",
      "description": "Request message for the ListDatabases method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        databases. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    page_size (int):\n        The maximum number of databases to return.\n        The service may return fewer than this value. If\n        unspecified, at most 50 databases will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListDatabases``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListDatabases`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of databases. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of databases to return. The service may return fewer than this value. If unspecified, at most 50 databases will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListDatabases`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListDatabases`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTableRequest",
      "description": "Request message for the CreateTable method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this table will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    table (google.cloud.bigquery_biglake_v1alpha1.types.Table):\n        Required. The table to create. The ``name`` field does not\n        need to be provided for the table creation.\n    table_id (str):\n        Required. The ID to use for the table, which\n        will become the final component of the table's\n        resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "table": {
            "description": "Required. The table to create. The ``name`` field does not need to be provided for the table creation.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                "type": "string"
              },
              "row_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "type": "enum",
                          "name": "WeightUnit",
                          "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                          "values": {
                            "WEIGHT_UNIT_UNSPECIFIED": {
                              "value": 0
                            },
                            "POUND": {
                              "value": 1
                            },
                            "KILOGRAM": {
                              "value": 2
                            }
                          }
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "column_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "type": "enum",
                          "name": "WeightUnit",
                          "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                          "values": {
                            "WEIGHT_UNIT_UNSPECIFIED": {
                              "value": 0
                            },
                            "POUND": {
                              "value": 1
                            },
                            "KILOGRAM": {
                              "value": 2
                            }
                          }
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "rows": {
                "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cells": {
                      "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "no_shipping": {
                            "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                            "type": "boolean"
                          },
                          "flat_rate": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          },
                          "price_percentage": {
                            "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                            "type": "string"
                          },
                          "carrier_rate": {
                            "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                            "type": "string"
                          },
                          "subtable": {
                            "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "cells"
                  ]
                }
              }
            },
            "required": [
              "row_headers",
              "rows"
            ]
          },
          "table_id": {
            "description": "Required. The ID to use for the table, which will become the final component of the table's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "table",
          "table_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTableRequest",
      "description": "Request message for the DeleteTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the table to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTableRequest",
      "description": "Request message for the UpdateTable method.\n\nAttributes:\n    table (google.cloud.bigquery_biglake_v1alpha1.types.Table):\n        Required. The table to update.\n\n        The table's ``name`` field is used to identify the table to\n        update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "table": {
            "description": "Required. The table to update.  The table's ``name`` field is used to identify the table to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                "type": "string"
              },
              "row_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "type": "enum",
                          "name": "WeightUnit",
                          "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                          "values": {
                            "WEIGHT_UNIT_UNSPECIFIED": {
                              "value": 0
                            },
                            "POUND": {
                              "value": 1
                            },
                            "KILOGRAM": {
                              "value": 2
                            }
                          }
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "column_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "type": "enum",
                          "name": "WeightUnit",
                          "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                          "values": {
                            "WEIGHT_UNIT_UNSPECIFIED": {
                              "value": 0
                            },
                            "POUND": {
                              "value": 1
                            },
                            "KILOGRAM": {
                              "value": 2
                            }
                          }
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "rows": {
                "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cells": {
                      "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "no_shipping": {
                            "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                            "type": "boolean"
                          },
                          "flat_rate": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          },
                          "price_percentage": {
                            "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                            "type": "string"
                          },
                          "carrier_rate": {
                            "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                            "type": "string"
                          },
                          "subtable": {
                            "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "cells"
                  ]
                }
              }
            },
            "required": [
              "row_headers",
              "rows"
            ]
          },
          "update_mask": {
            "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "table"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTableRequest",
      "description": "Request message for the RenameTable method in\nMetastoreService\n\nAttributes:\n    name (str):\n        Required. The table's ``name`` field is used to identify the\n        table to rename. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    new_name (str):\n        Required. The new ``name`` for the specified table, must be\n        in the same database. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The table's ``name`` field is used to identify the table to rename. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          },
          "new_name": {
            "description": "Required. The new ``name`` for the specified table, must be in the same database. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTableRequest",
      "description": "Request message for the GetTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the table to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTablesRequest",
      "description": "Request message for the ListTables method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of tables.\n        Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    page_size (int):\n        The maximum number of tables to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 tables will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListTables`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListTables`` must match the call that provided the page\n        token.\n    view (google.cloud.bigquery_biglake_v1alpha1.types.TableView):\n        The view for the returned tables.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of tables. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 50 tables will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListTables`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTables`` must match the call that provided the page token.",
            "type": "string"
          },
          "view": {
            "description": "View on Table. Represents which fields will be populated for\ncalls that return Table objects.\n\nValues:\n    TABLE_VIEW_UNSPECIFIED (0):\n        Default value. The API will default to the\n        BASIC view.\n    BASIC (1):\n        Include only table names.\n        This is the default value.\n    FULL (2):\n        Include everything.",
            "type": "enum",
            "name": "TableView",
            "values": {
              "TABLE_VIEW_UNSPECIFIED": {
                "value": 0
              },
              "BASIC": {
                "value": 1
              },
              "FULL": {
                "value": 2
              }
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateLockRequest",
      "description": "Request message for the CreateLock method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this lock will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    lock (google.cloud.bigquery_biglake_v1alpha1.types.Lock):\n        Required. The lock to create. The ``name`` field does not\n        need to be provided for the lock creation.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this lock will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "lock": {
            "description": "Required. The lock to create. The ``name`` field does not need to be provided for the lock creation.",
            "type": "object",
            "properties": {
              "table_id": {
                "description": "The table ID (not fully qualified name) in the same database that the lock will be created on. The table must exist.  This field is a member of `oneof`_ ``resources``.",
                "type": "string"
              },
              "name": {
                "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The creation time of the lock.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "type_": {
                "type": "enum",
                "name": "Type",
                "description": "Return policy types.\n\nValues:\n    TYPE_UNSPECIFIED (0):\n        Default value. This value is unused.\n    NUMBER_OF_DAYS_AFTER_DELIVERY (1):\n        The number of days within which a return is\n        valid after delivery.\n    NO_RETURNS (2):\n        No returns.\n    LIFETIME_RETURNS (3):\n        Life time returns.",
                "values": {
                  "TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "NUMBER_OF_DAYS_AFTER_DELIVERY": {
                    "value": 1
                  },
                  "NO_RETURNS": {
                    "value": 2
                  },
                  "LIFETIME_RETURNS": {
                    "value": 3
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "lock"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteLockRequest",
      "description": "Request message for the DeleteLock method.\n\nAttributes:\n    name (str):\n        Required. The name of the lock to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the lock to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CheckLockRequest",
      "description": "Request message for the CheckLock method.\n\nAttributes:\n    name (str):\n        Required. The name of the lock to check. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the lock to check. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListLocksRequest",
      "description": "Request message for the ListLocks method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of locks.\n        Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    page_size (int):\n        The maximum number of locks to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 locks will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListLocks`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListLocks`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of locks. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of locks to return. The service may return fewer than this value. If unspecified, at most 50 locks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListLocks`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListLocks`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ]
}