{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-bigquery-biglake\\google\\cloud\\bigquery_biglake_v1alpha1\\types\\metastore.py": [
    {
      "type": "request_class",
      "name": "Catalog",
      "docstring": "Catalog is the container of databases.\n\nAttributes:\n    name (str):\n        Output only. The resource name. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The creation time of the\n        catalog.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The last modification time of\n        the catalog.\n    delete_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The deletion time of the\n        catalog. Only set after the catalog is deleted.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time when this catalog is\n        considered expired. Only set after the catalog\n        is deleted.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The creation time of the catalog."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The last modification time of the catalog."
        },
        "delete_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The deletion time of the catalog. Only set after the catalog is deleted."
        },
        "expire_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time when this catalog is considered expired. Only set after the catalog is deleted."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Database",
      "docstring": "Database is the container of tables.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    hive_options (google.cloud.bigquery_biglake_v1alpha1.types.HiveDatabaseOptions):\n        Options of a Hive database.\n\n        This field is a member of `oneof`_ ``options``.\n    name (str):\n        Output only. The resource name. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The creation time of the\n        database.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The last modification time of\n        the database.\n    delete_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The deletion time of the\n        database. Only set after the database is\n        deleted.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time",
      "attributes": {
        "hive_options": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.HiveDatabaseOptions",
          "description": "Options of a Hive database.  This field is a member of `oneof`_ ``options``."
        },
        "name": {
          "type": "str",
          "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The creation time of the database."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The last modification time of the database."
        },
        "delete_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The deletion time of the database. Only set after the database is deleted."
        },
        "expire_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time when this database is considered expired. Only set after the database is deleted."
        },
        "type_": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Database.Type",
          "description": "The database type."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Table",
      "docstring": "Represents a table.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    hive_options (google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions):\n        Options of a Hive table.\n\n        This field is a member of `oneof`_ ``options``.\n    name (str):\n        Output only. The resource name. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The creation time of the table.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The last modification time of\n        the table.\n    delete_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The deletion time of the table.\n        Only set after the table is deleted.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time when this table is\n        consi",
      "attributes": {
        "hive_options": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions",
          "description": "Options of a Hive table.  This field is a member of `oneof`_ ``options``."
        },
        "name": {
          "type": "str",
          "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The creation time of the table."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The last modification time of the table."
        },
        "delete_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The deletion time of the table. Only set after the table is deleted."
        },
        "expire_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time when this table is considered expired. Only set after the table is deleted."
        },
        "type_": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Table.Type",
          "description": "The table type."
        },
        "etag": {
          "type": "str",
          "description": "The checksum of a table object computed by the server based on the value of other fields. It may be sent on update requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Lock",
      "docstring": "Represents a lock.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    table_id (str):\n        The table ID (not fully qualified name) in\n        the same database that the lock will be created\n        on. The table must exist.\n\n        This field is a member of `oneof`_ ``resources``.\n    name (str):\n        Output only. The resource name. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The creation time of the lock.\n    type_ (google.cloud.bigquery_biglake_v1alpha1.types.Lock.Type):\n        The lock type.\n    state (google.cloud.bigquery_biglake_v1alpha1.types.Lock.State):\n        Output only. The lock state.",
      "attributes": {
        "table_id": {
          "type": "str",
          "description": "The table ID (not fully qualified name) in the same database that the lock will be created on. The table must exist.  This field is a member of `oneof`_ ``resources``."
        },
        "name": {
          "type": "str",
          "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The creation time of the lock."
        },
        "type_": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Lock.Type",
          "description": "The lock type."
        },
        "state": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Lock.State",
          "description": "Output only. The lock state."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateCatalogRequest",
      "docstring": "Request message for the CreateCatalog method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this catalog will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    catalog (google.cloud.bigquery_biglake_v1alpha1.types.Catalog):\n        Required. The catalog to create. The ``name`` field does not\n        need to be provided.\n    catalog_id (str):\n        Required. The ID to use for the catalog,\n        which will become the final component of the\n        catalog's resource name.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent resource where this catalog will be created. Format: projects/{project_id_or_number}/locations/{location_id}"
        },
        "catalog": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Catalog",
          "description": "Required. The catalog to create. The ``name`` field does not need to be provided."
        },
        "catalog_id": {
          "type": "str",
          "description": "Required. The ID to use for the catalog, which will become the final component of the catalog's resource name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteCatalogRequest",
      "docstring": "Request message for the DeleteCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the catalog to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetCatalogRequest",
      "docstring": "Request message for the GetCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the catalog to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListCatalogsRequest",
      "docstring": "Request message for the ListCatalogs method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        catalogs. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    page_size (int):\n        The maximum number of catalogs to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 catalogs will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListCatalogs``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListCatalogs`` must match the call that provided the page\n        token.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of catalogs. Format: projects/{project_id_or_number}/locations/{location_id}"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of catalogs to return. The service may return fewer than this value. If unspecified, at most 50 catalogs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListCatalogs`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListCatalogs`` must match the call that provided the page token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListCatalogsResponse",
      "docstring": "Response message for the ListCatalogs method.\n\nAttributes:\n    catalogs (MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Catalog]):\n        The catalogs from the specified project.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is omitted, there are no subsequent\n        pages.",
      "attributes": {
        "catalogs": {
          "type": "MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Catalog]",
          "description": "The catalogs from the specified project."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateDatabaseRequest",
      "docstring": "Request message for the CreateDatabase method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this database will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    database (google.cloud.bigquery_biglake_v1alpha1.types.Database):\n        Required. The database to create. The ``name`` field does\n        not need to be provided.\n    database_id (str):\n        Required. The ID to use for the database,\n        which will become the final component of the\n        database's resource name.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent resource where this database will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}"
        },
        "database": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Database",
          "description": "Required. The database to create. The ``name`` field does not need to be provided."
        },
        "database_id": {
          "type": "str",
          "description": "Required. The ID to use for the database, which will become the final component of the database's resource name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteDatabaseRequest",
      "docstring": "Request message for the DeleteDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the database to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateDatabaseRequest",
      "docstring": "Request message for the UpdateDatabase method.\n\nAttributes:\n    database (google.cloud.bigquery_biglake_v1alpha1.types.Database):\n        Required. The database to update.\n\n        The database's ``name`` field is used to identify the\n        database to update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "attributes": {
        "database": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Database",
          "description": "Required. The database to update.  The database's ``name`` field is used to identify the database to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetDatabaseRequest",
      "docstring": "Request message for the GetDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the database to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListDatabasesRequest",
      "docstring": "Request message for the ListDatabases method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        databases. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    page_size (int):\n        The maximum number of databases to return.\n        The service may return fewer than this value. If\n        unspecified, at most 50 databases will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListDatabases``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListDatabases`` must match the call that provided the page\n        token.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of databases. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of databases to return. The service may return fewer than this value. If unspecified, at most 50 databases will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListDatabases`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListDatabases`` must match the call that provided the page token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListDatabasesResponse",
      "docstring": "Response message for the ListDatabases method.\n\nAttributes:\n    databases (MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Database]):\n        The databases from the specified catalog.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is omitted, there are no subsequent\n        pages.",
      "attributes": {
        "databases": {
          "type": "MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Database]",
          "description": "The databases from the specified catalog."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateTableRequest",
      "docstring": "Request message for the CreateTable method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this table will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    table (google.cloud.bigquery_biglake_v1alpha1.types.Table):\n        Required. The table to create. The ``name`` field does not\n        need to be provided for the table creation.\n    table_id (str):\n        Required. The ID to use for the table, which\n        will become the final component of the table's\n        resource name.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "table": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Table",
          "description": "Required. The table to create. The ``name`` field does not need to be provided for the table creation."
        },
        "table_id": {
          "type": "str",
          "description": "Required. The ID to use for the table, which will become the final component of the table's resource name."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteTableRequest",
      "docstring": "Request message for the DeleteTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the table to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateTableRequest",
      "docstring": "Request message for the UpdateTable method.\n\nAttributes:\n    table (google.cloud.bigquery_biglake_v1alpha1.types.Table):\n        Required. The table to update.\n\n        The table's ``name`` field is used to identify the table to\n        update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "attributes": {
        "table": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Table",
          "description": "Required. The table to update.  The table's ``name`` field is used to identify the table to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RenameTableRequest",
      "docstring": "Request message for the RenameTable method in\nMetastoreService\n\nAttributes:\n    name (str):\n        Required. The table's ``name`` field is used to identify the\n        table to rename. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    new_name (str):\n        Required. The new ``name`` for the specified table, must be\n        in the same database. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The table's ``name`` field is used to identify the table to rename. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        },
        "new_name": {
          "type": "str",
          "description": "Required. The new ``name`` for the specified table, must be in the same database. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetTableRequest",
      "docstring": "Request message for the GetTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the table to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListTablesRequest",
      "docstring": "Request message for the ListTables method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of tables.\n        Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    page_size (int):\n        The maximum number of tables to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 tables will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListTables`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListTables`` must match the call that provided the page\n        token.\n    view (google.cloud.bigquery_biglake_v1alpha1.types.TableView):\n        The view for the returned tables.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of tables. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 50 tables will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListTables`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTables`` must match the call that provided the page token."
        },
        "view": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.TableView",
          "description": "The view for the returned tables."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListTablesResponse",
      "docstring": "Response message for the ListTables method.\n\nAttributes:\n    tables (MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Table]):\n        The tables from the specified database.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is omitted, there are no subsequent\n        pages.",
      "attributes": {
        "tables": {
          "type": "MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Table]",
          "description": "The tables from the specified database."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateLockRequest",
      "docstring": "Request message for the CreateLock method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this lock will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    lock (google.cloud.bigquery_biglake_v1alpha1.types.Lock):\n        Required. The lock to create. The ``name`` field does not\n        need to be provided for the lock creation.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent resource where this lock will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "lock": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.Lock",
          "description": "Required. The lock to create. The ``name`` field does not need to be provided for the lock creation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteLockRequest",
      "docstring": "Request message for the DeleteLock method.\n\nAttributes:\n    name (str):\n        Required. The name of the lock to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the lock to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CheckLockRequest",
      "docstring": "Request message for the CheckLock method.\n\nAttributes:\n    name (str):\n        Required. The name of the lock to check. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the lock to check. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/locks/{lock_id}"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLocksRequest",
      "docstring": "Request message for the ListLocks method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of locks.\n        Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    page_size (int):\n        The maximum number of locks to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 locks will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListLocks`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListLocks`` must match the call that provided the page\n        token.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of locks. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of locks to return. The service may return fewer than this value. If unspecified, at most 50 locks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
        },
        "page_token": {
          "type": "str",
          "description": "A page token, received from a previous ``ListLocks`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListLocks`` must match the call that provided the page token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLocksResponse",
      "docstring": "Response message for the ListLocks method.\n\nAttributes:\n    locks (MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Lock]):\n        The locks from the specified database.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is omitted, there are no subsequent\n        pages.",
      "attributes": {
        "locks": {
          "type": "MutableSequence[google.cloud.bigquery_biglake_v1alpha1.types.Lock]",
          "description": "The locks from the specified database."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "HiveDatabaseOptions",
      "docstring": "Options of a Hive database.\n\nAttributes:\n    location_uri (str):\n        Cloud Storage folder URI where the database\n        data is stored, starting with \"gs://\".\n    parameters (MutableMapping[str, str]):\n        Stores user supplied Hive database\n        parameters.",
      "attributes": {
        "location_uri": {
          "type": "str",
          "description": "Cloud Storage folder URI where the database data is stored, starting with \"gs://\"."
        },
        "parameters": {
          "type": "MutableMapping[str, str]",
          "description": "Stores user supplied Hive database parameters."
        }
      }
    },
    {
      "type": "request_class",
      "name": "HiveTableOptions",
      "docstring": "Options of a Hive table.\n\nAttributes:\n    parameters (MutableMapping[str, str]):\n        Stores user supplied Hive table parameters.\n    table_type (str):\n        Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.\n    storage_descriptor (google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions.StorageDescriptor):\n        Stores physical storage information of the\n        data.",
      "attributes": {
        "parameters": {
          "type": "MutableMapping[str, str]",
          "description": "Stores user supplied Hive table parameters."
        },
        "table_type": {
          "type": "str",
          "description": "Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE."
        },
        "storage_descriptor": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions.StorageDescriptor",
          "description": "Stores physical storage information of the data."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SerDeInfo",
      "docstring": "Serializer and deserializer information.\n\nAttributes:\n    serialization_lib (str):\n        The fully qualified Java class name of the\n        serialization library.",
      "attributes": {
        "serialization_lib": {
          "type": "str",
          "description": "The fully qualified Java class name of the serialization library."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StorageDescriptor",
      "docstring": "Stores physical storage information of the data.\n\nAttributes:\n    location_uri (str):\n        Cloud Storage folder URI where the table data\n        is stored, starting with \"gs://\".\n    input_format (str):\n        The fully qualified Java class name of the\n        input format.\n    output_format (str):\n        The fully qualified Java class name of the\n        output format.\n    serde_info (google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions.SerDeInfo):\n        Serializer and deserializer information.",
      "attributes": {
        "location_uri": {
          "type": "str",
          "description": "Cloud Storage folder URI where the table data is stored, starting with \"gs://\"."
        },
        "input_format": {
          "type": "str",
          "description": "The fully qualified Java class name of the input format."
        },
        "output_format": {
          "type": "str",
          "description": "The fully qualified Java class name of the output format."
        },
        "serde_info": {
          "type": "google.cloud.bigquery_biglake_v1alpha1.types.HiveTableOptions.SerDeInfo",
          "description": "Serializer and deserializer information."
        }
      }
    }
  ]
}