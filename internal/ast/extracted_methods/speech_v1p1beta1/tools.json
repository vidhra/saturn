{
  "Adaptation": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_phrase_set",
          "description": "Create a set of phrase hints. Each item in the set\ncan be a single word or a multi-word phrase. The items\nin the PhraseSet are favored by the recognition model\nwhen you send a call that includes the PhraseSet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_create_phrase_set():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.CreatePhraseSetRequest(\n            parent=\"parent_value\",\n            phrase_set_id=\"phrase_set_id_value\",\n        )\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this phrase set will be created. Format:  ``projects/{project}/locations/{location}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phrase_set": {
                "type": "google.cloud.speech_v1p1beta1.types.PhraseSet",
                "description": "Required. The phrase set to create. This corresponds to the ``phrase_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phrase_set_id": {
                "type": "str",
                "description": "Required. The ID to use for the phrase set, which will become the final component of the phrase set's resource name.  This value should restrict to letters, numbers, and hyphens, with the first character a letter, the last a letter or a number, and be 4-63 characters.  This corresponds to the ``phrase_set_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.PhraseSet: Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "phrase_set",
              "phrase_set_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_phrase_set",
          "description": "Get a phrase set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_get_phrase_set():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.GetPhraseSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_phrase_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.GetPhraseSetRequest, dict]]):\n        Th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the phrase set to retrieve. Format:  ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.PhraseSet: Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_phrase_set",
          "description": "List phrase sets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_list_phrase_set():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.ListPhraseSetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_phrase_set(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1b",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of phrase set. Format:  ``projects/{project}/locations/{location}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.services.adaptation.pagers.ListPhraseSetAsyncPager: Message returned to the client by the ListPhraseSet method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_phrase_set",
          "description": "Update a phrase set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_update_phrase_set():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.UpdatePhraseSetRequest(\n        )\n\n        # Make the request\n        response = await client.update_phrase_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.UpdatePhraseSetRequest, dict]]):\n        The request object",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "phrase_set": {
                "type": "google.cloud.speech_v1p1beta1.types.PhraseSet",
                "description": "Required. The phrase set to update.  The phrase set's ``name`` field is used to identify the set to be updated. Format:  ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``phrase_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.PhraseSet: Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "phrase_set",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_phrase_set",
          "description": "Delete a phrase set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_delete_phrase_set():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.DeletePhraseSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_phrase_set(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.DeletePhraseSetRequest, dict]]):\n        The request object. Message sent by the client for th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the phrase set to delete. Format:  ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_class",
          "description": "Create a custom class.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_create_custom_class():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.CreateCustomClassRequest(\n            parent=\"parent_value\",\n            custom_class_id=\"custom_class_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_custom_class(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this custom class will be created. Format:  ``projects/{project}/locations/{location}/customClasses``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_class": {
                "type": "google.cloud.speech_v1p1beta1.types.CustomClass",
                "description": "Required. The custom class to create. This corresponds to the ``custom_class`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_class_id": {
                "type": "str",
                "description": "Required. The ID to use for the custom class, which will become the final component of the custom class' resource name.  This value should restrict to letters, numbers, and hyphens, with the first character a letter, the last a letter or a number, and be 4-63 characters.  This corresponds to the ``custom_class_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.CustomClass: A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_class",
              "custom_class_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_class",
          "description": "Get a custom class.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_get_custom_class():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.GetCustomClassRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_custom_class(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.GetCustomClassRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the custom class to retrieve. Format:  ``projects/{project}/locations/{location}/customClasses/{custom_class}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.CustomClass: A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_classes",
          "description": "List custom classes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_list_custom_classes():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.ListCustomClassesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_custom_classes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of custom classes. Format:  ``projects/{project}/locations/{location}/customClasses``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.services.adaptation.pagers.ListCustomClassesAsyncPager: Message returned to the client by the ListCustomClasses method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_class",
          "description": "Update a custom class.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_update_custom_class():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.UpdateCustomClassRequest(\n        )\n\n        # Make the request\n        response = await client.update_custom_class(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.UpdateCustomClassRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_class": {
                "type": "google.cloud.speech_v1p1beta1.types.CustomClass",
                "description": "Required. The custom class to update.  The custom class's ``name`` field is used to identify the custom class to be updated. Format:  ``projects/{project}/locations/{location}/customClasses/{custom_class}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``custom_class`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.CustomClass: A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_class",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_custom_class",
          "description": "Delete a custom class.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_delete_custom_class():\n        # Create a client\n        client = speech_v1p1beta1.AdaptationAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v1p1beta1.DeleteCustomClassRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_custom_class(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v1p1beta1.types.DeleteCustomClassRequest, dict]]):\n        The request object. Message sent by the cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the custom class to delete. Format:  ``projects/{project}/locations/{location}/customClasses/{custom_class}``  Speech-to-Text supports three locations: ``global``, ``us`` (US North America), and ``eu`` (Europe). If you are calling the ``speech.googleapis.com`` endpoint, use the ``global`` location. To specify a region, use a `regional endpoint <https://cloud.google.com/speech-to-text/docs/endpoints>`__ with matching ``us`` or ``eu`` location value.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Speech": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "recognize",
          "description": "Performs synchronous speech recognition: receive\nresults after all audio has been sent and processed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_recognize():\n        # Create a client\n        client = speech_v1p1beta1.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        config = speech_v1p1beta1.RecognitionConfig()\n        config.language_code = \"language_code_value\"\n\n        audio = speech_v1p1beta1.RecognitionAudio()\n        audio.content = b'content_blob'\n\n        request = speech_v1p1beta1.RecognizeRequest(\n            config=config,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "config": {
                "type": "google.cloud.speech_v1p1beta1.types.RecognitionConfig",
                "description": "Required. Provides information to the recognizer that specifies how to process the request.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "audio": {
                "type": "google.cloud.speech_v1p1beta1.types.RecognitionAudio",
                "description": "Required. The audio data to be recognized.  This corresponds to the ``audio`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v1p1beta1.types.RecognizeResponse: The only message returned to the client by the Recognize method. It contains the result as zero or more sequential SpeechRecognitionResult messages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "config",
              "audio",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "long_running_recognize",
          "description": "Performs asynchronous speech recognition: receive results via\nthe google.longrunning.Operations interface. Returns either an\n``Operation.error`` or an ``Operation.response`` which contains\na ``LongRunningRecognizeResponse`` message. For more information\non asynchronous speech recognition, see the\n`how-to <https://cloud.google.com/speech-to-text/docs/async-recognize>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_long_running_recognize():\n        # Create a client\n        client = speech_v1p1beta1.SpeechAsyncClient()\n\n        # Initialize request argument",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "config": {
                "type": "google.cloud.speech_v1p1beta1.types.RecognitionConfig",
                "description": "Required. Provides information to the recognizer that specifies how to process the request.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "audio": {
                "type": "google.cloud.speech_v1p1beta1.types.RecognitionAudio",
                "description": "Required. The audio data to be recognized.  This corresponds to the ``audio`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v1p1beta1.types.LongRunningRecognizeResponse` The only message returned to the client by the LongRunningRecognize method. It contains the result as zero or more sequential SpeechRecognitionResult messages. It is included in the result.response field of the Operation returned by the GetOperation call of the google::longrunning::Operations service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "config",
              "audio",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_recognize",
          "description": "Performs bidirectional streaming speech recognition:\nreceive results while sending audio. This method is only\navailable via the gRPC API (not REST).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v1p1beta1\n\n    async def sample_streaming_recognize():\n        # Create a client\n        client = speech_v1p1beta1.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        streaming_config = speech_v1p1beta1.StreamingRecognitionConfig()\n        streaming_config.config.language_code = \"language_code_value\"\n\n        request = speech_v1p1beta1.StreamingRecognizeRequest(\n            strea",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}