{
  "AutoMl": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_dataset",
          "description": "Creates a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_create_dataset():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        dataset = automl_v1.Dataset()\n        dataset.translation_dataset_metadata.source_language_code = \"source_language_code_value\"\n        dataset.translation_dataset_metadata.target_language_code = \"target_language_code_value\"\n\n        request = automl_v1.CreateDatasetRequest(\n            parent=\"parent_value\",\n            dataset=dataset,\n        )\n\n        # Make",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project to create the dataset for.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "dataset": {
                "type": "google.cloud.automl_v1.types.Dataset",
                "description": "Required. The dataset to create. This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.automl_v1.types.Dataset` A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dataset",
          "description": "Gets a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_get_dataset():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.GetDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.GetDatasetRequest, dict]]):\n        The request object. Request message for\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.Dataset: A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.Dataset"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_datasets",
          "description": "Lists datasets in a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_list_datasets():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.ListDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_datasets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.ListDatasetsReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project from which to list datasets.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.services.auto_ml.pagers.ListDatasetsAsyncPager: Response message for [AutoMl.ListDatasets][google.cloud.automl.v1.AutoMl.ListDatasets].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.services.auto_ml.pagers.ListDatasetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_dataset",
          "description": "Updates a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_update_dataset():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        dataset = automl_v1.Dataset()\n        dataset.translation_dataset_metadata.source_language_code = \"source_language_code_value\"\n        dataset.translation_dataset_metadata.target_language_code = \"target_language_code_value\"\n\n        request = automl_v1.UpdateDatasetRequest(\n            dataset=dataset,\n        )\n\n        # Make the request\n        response = awa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "google.cloud.automl_v1.types.Dataset",
                "description": "Required. The dataset which replaces the resource on the server.  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The update mask applies to the resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.Dataset: A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.Dataset"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_dataset",
          "description": "Deletes a dataset and all of its contents. Returns empty\nresponse in the\n[response][google.longrunning.Operation.response] field when it\ncompletes, and ``delete_details`` in the\n[metadata][google.longrunning.Operation.metadata] field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_delete_dataset():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.DeleteDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_dat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_data",
          "description": "Imports data into a dataset. For Tables this method can only be\ncalled on an empty Dataset.\n\nFor Tables:\n\n-  A\n   [schema_inference_version][google.cloud.automl.v1.InputConfig.params]\n   parameter must be explicitly set. Returns an empty response\n   in the [response][google.longrunning.Operation.response]\n   field when it completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_import_data():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        input_config = automl_v1.InputConfig()\n        inpu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset name. Dataset must already exist. All imported annotations and examples will be added.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.automl_v1.types.InputConfig",
                "description": "Required. The desired input location and its domain specific semantics, if any.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_data",
          "description": "Exports dataset's data to the provided output location. Returns\nan empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_export_data():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        output_config = automl_v1.OutputConfig()\n        output_config.gcs_destination.output_uri_prefix = \"output_uri_prefix_value\"\n\n        request = automl_v1.ExportDataRequest(\n            name=\"name_value\",\n            output",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1.types.OutputConfig",
                "description": "Required. The desired output location.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_annotation_spec",
          "description": "Gets an annotation spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_get_annotation_spec():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.GetAnnotationSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_annotation_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.GetAnnotationSpecRequest, dict]]):\n        The req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the annotation spec to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.AnnotationSpec: A definition of an annotation spec."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.AnnotationSpec"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_model",
          "description": "Creates a model. Returns a Model in the\n[response][google.longrunning.Operation.response] field when it\ncompletes. When you create a model, several model evaluations\nare created for it: a global evaluation, and one evaluation for\neach annotation spec.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_create_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.CreateModelRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent project where the model is being created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "google.cloud.automl_v1.types.Model",
                "description": "Required. The model to create. This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.automl_v1.types.Model` API proto representing a trained machine learning model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_model",
          "description": "Gets a model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_get_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.GetModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.GetModelRequest, dict]]):\n        The request object. Request message for\n        [AutoMl.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.Model: API proto representing a trained machine learning model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.Model"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_models",
          "description": "Lists models.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_list_models():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.ListModelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_models(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.ListModelsRequest, dict]]):\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project, from which to list the models.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.services.auto_ml.pagers.ListModelsAsyncPager: Response message for [AutoMl.ListModels][google.cloud.automl.v1.AutoMl.ListModels].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.services.auto_ml.pagers.ListModelsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_model",
          "description": "Deletes a model. Returns ``google.protobuf.Empty`` in the\n[response][google.longrunning.Operation.response] field when it\ncompletes, and ``delete_details`` in the\n[metadata][google.longrunning.Operation.metadata] field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_delete_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.DeleteModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_model(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model being deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_model",
          "description": "Updates a model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_update_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.UpdateModelRequest(\n        )\n\n        # Make the request\n        response = await client.update_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.UpdateModelRequest, dict]]):\n        The request object. Request message for\n        [AutoMl.UpdateModel][goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "model": {
                "type": "google.cloud.automl_v1.types.Model",
                "description": "Required. The model which replaces the resource on the server.  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The update mask applies to the resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.Model: API proto representing a trained machine learning model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "model",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.Model"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_model",
          "description": "Deploys a model. If a model is already deployed, deploying it\nwith the same parameters has no effect. Deploying with different\nparametrs (as e.g. changing\n[node_number][google.cloud.automl.v1p1beta.ImageObjectDetectionModelDeploymentMetadata.node_number])\nwill reset the deployment state without pausing the model's\navailability.\n\nOnly applicable for Text Classification, Image Object Detection\n, Tables, and Image Segmentation; all other domains manage\ndeployment automatically.\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.h",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model to deploy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undeploy_model",
          "description": "Undeploys a model. If the model is not deployed this method has\nno effect.\n\nOnly applicable for Text Classification, Image Object Detection\nand Tables; all other domains manage deployment automatically.\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_undeploy_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.UndeployModelRequest(\n            name=\"name_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the model to undeploy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_model",
          "description": "Exports a trained, \"export-able\", model to a user specified\nGoogle Cloud Storage location. A model is considered export-able\nif and only if it has an export format defined for it in\n[ModelExportOutputConfig][google.cloud.automl.v1.ModelExportOutputConfig].\n\nReturns an empty response in the\n[response][google.longrunning.Operation.response] field when it\ncompletes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_export_model():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        output_config = aut",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the model to export.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1.types.ModelExportOutputConfig",
                "description": "Required. The desired output location and configuration.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_model_evaluation",
          "description": "Gets a model evaluation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_get_model_evaluation():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.GetModelEvaluationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_model_evaluation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.automl_v1.types.GetModelEvaluationRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name for the model evaluation.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.ModelEvaluation: Evaluation results of a model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.ModelEvaluation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_model_evaluations",
          "description": "Lists model evaluations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import automl_v1\n\n    async def sample_list_model_evaluations():\n        # Create a client\n        client = automl_v1.AutoMlAsyncClient()\n\n        # Initialize request argument(s)\n        request = automl_v1.ListModelEvaluationsRequest(\n            parent=\"parent_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        page_result = client.list_model_evaluations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the model to list the model evaluations for. If modelId is set as \"-\", this will list model evaluations from across all models of the parent location.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. An expression for filtering the results of the request.  -  ``annotation_spec_id`` - for =, != or existence. See example below for the last.  Some examples of using the filter are:  -  ``annotation_spec_id!=4`` --> The model evaluation was done for annotation spec with ID different than 4. -  ``NOT annotation_spec_id:*`` --> The model evaluation was done for aggregate of all annotation specs.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.services.auto_ml.pagers.ListModelEvaluationsAsyncPager: Response message for [AutoMl.ListModelEvaluations][google.cloud.automl.v1.AutoMl.ListModelEvaluations].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.services.auto_ml.pagers.ListModelEvaluationsAsyncPager"
          ]
        }
      }
    ]
  },
  "PredictionService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "predict",
          "description": "Perform an online prediction. The prediction result is directly\nreturned in the response. Available for following ML scenarios,\nand their expected request payloads:\n\nAutoML Vision Classification\n\n-  An image in .JPEG, .GIF or .PNG format, image_bytes up to\n   30MB.\n\nAutoML Vision Object Detection\n\n-  An image in .JPEG, .GIF or .PNG format, image_bytes up to\n   30MB.\n\nAutoML Natural Language Classification\n\n-  A TextSnippet up to 60,000 characters, UTF-8 encoded or a\n   document in .PDF, .TIF or .TIFF format with size upto 2MB.\n\nAutoML Natural Language Entity Extraction\n\n-  A TextSnippet up to 10,000 characters, UTF-8 NFC encoded or a\n   document in .PDF, .TIF or .TIFF format with size upto 20MB.\n\nAutoML Natural Language Sentiment Analysis\n\n-  A TextSnippet up to 60,000 characters, UTF-8 encoded or a\n   document in .PDF, .TIF or .TIFF format with size upto 2MB.\n\nAutoML Translation\n\n-  A TextSnippet up to 25,000 characters, UTF-8 encoded.\n\nAutoML Tables\n\n-  A row with column values matching the columns of the m",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the model requested to serve the prediction.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "payload": {
                "type": "google.cloud.automl_v1.types.ExamplePayload",
                "description": "Required. Payload to perform a prediction on. The payload must match the problem type that the model was trained to solve.  This corresponds to the ``payload`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "params": {
                "type": "MutableMapping[str, str]",
                "description": "Additional domain-specific parameters, any string must be up to 25000 characters long.  AutoML Vision Classification  ``score_threshold`` : (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  AutoML Vision Object Detection  ``score_threshold`` : (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5.  ``max_bounding_box_count`` : (int64) The maximum number of bounding boxes returned. The default is 100. The number of returned bounding boxes might be limited by the server.  AutoML Tables  ``feature_importance`` : (boolean) Whether [feature_importance][google.cloud.automl.v1.TablesModelColumnInfo.feature_importance] is populated in the returned list of [TablesAnnotation][google.cloud.automl.v1.TablesAnnotation] objects. The default is false.  This corresponds to the ``params`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.automl_v1.types.PredictResponse: Response message for [PredictionService.Predict][google.cloud.automl.v1.PredictionService.Predict]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "payload",
              "params",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.automl_v1.types.PredictResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_predict",
          "description": "Perform a batch prediction. Unlike the online\n[Predict][google.cloud.automl.v1.PredictionService.Predict],\nbatch prediction result won't be immediately available in the\nresponse. Instead, a long running operation object is returned.\nUser can poll the operation result via\n[GetOperation][google.longrunning.Operations.GetOperation]\nmethod. Once the operation is done,\n[BatchPredictResult][google.cloud.automl.v1.BatchPredictResult]\nis returned in the\n[response][google.longrunning.Operation.response] field.\nAvailable for following ML scenarios:\n\n-  AutoML Vision Classification\n-  AutoML Vision Object Detection\n-  AutoML Video Intelligence Classification\n-  AutoML Video Intelligence Object Tracking \\* AutoML Natural\n   Language Classification\n-  AutoML Natural Language Entity Extraction\n-  AutoML Natural Language Sentiment Analysis\n-  AutoML Tables\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the model requested to serve the batch prediction.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.automl_v1.types.BatchPredictInputConfig",
                "description": "Required. The input configuration for batch prediction.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.automl_v1.types.BatchPredictOutputConfig",
                "description": "Required. The Configuration specifying where output predictions should be written.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "params": {
                "type": "MutableMapping[str, str]",
                "description": "Additional domain-specific parameters for the predictions, any string must be up to 25000 characters long.  AutoML Natural Language Classification  ``score_threshold`` : (float) A value from 0.0 to 1.0. When the model makes predictions for a text snippet, it will only produce results that have at least this confidence score. The default is 0.5.  AutoML Vision Classification  ``score_threshold`` : (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5.  AutoML Vision Object Detection  ``score_threshold`` : (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5.  ``max_bounding_box_count`` : (int64) The maximum number of bounding boxes returned per image. The default is 100, the number of bounding boxes returned might be limited by the server. AutoML Video Intelligence Classification  ``score_threshold`` : (float) A value from 0.0 to 1.0. When the model makes predictions for a video, it will only produce results that have at least this confidence score. The default is 0.5.  ``segment_classification`` : (boolean) Set to true to request segment-level classification. AutoML Video Intelligence returns labels and their confidence scores for the entire segment of the video that user specified in the request configuration. The default is true.  ``shot_classification`` : (boolean) Set to true to request shot-level classification. AutoML Video Intelligence determines the boundaries for each camera shot in the entire segment of the video that user specified in the request configuration. AutoML Video Intelligence then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. The default is false.  WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality.  ``1s_interval_classification`` : (boolean) Set to true to request classification for a video at one-second intervals. AutoML Video Intelligence returns labels and their confidence scores for each second of the entire segment of the video that user specified in the request configuration. The default is false.  WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality.  AutoML Video Intelligence Object Tracking  ``score_threshold`` : (float) When Model detects objects on video frames, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5.  ``max_bounding_box_count`` : (int64) The maximum number of bounding boxes returned per image. The default is 100, the number of bounding boxes returned might be limited by the server.  ``min_bounding_box_size`` : (float) Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Value in 0 to 1 range. Default is 0.  This corresponds to the ``params`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.automl_v1.types.BatchPredictResult` Result of the Batch Predict. This message is returned in [response][google.longrunning.Operation.response] of the operation returned by the [PredictionService.BatchPredict][google.cloud.automl.v1.PredictionService.BatchPredict]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "output_config",
              "params",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}