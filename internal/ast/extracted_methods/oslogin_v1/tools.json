{
  "OsLoginService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_ssh_public_key",
          "description": "Create an SSH public key\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_create_ssh_public_key():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.CreateSshPublicKeyRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_ssh_public_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.oslogin_v1.types.CreateSshPublicKeyRequest, di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The unique ID for the user in format ``users/{user}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ssh_public_key": {
                "type": "google.cloud.oslogin_v1.common.types.SshPublicKey",
                "description": "Required. The SSH public key and expiration time.  This corresponds to the ``ssh_public_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.oslogin_v1.common.types.SshPublicKey: The SSH public key information associated with a Google account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ssh_public_key",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_posix_account",
          "description": "Deletes a POSIX account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_delete_posix_account():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.DeletePosixAccountRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_posix_account(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.oslogin_v1.types.DeletePosixAccountRequest, dict]]):\n        The request object. A request message for deleting a\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. A reference to the POSIX account to update. POSIX accounts are identified by the project ID they are associated with. A reference to the POSIX account is in format ``users/{user}/projects/{project}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_ssh_public_key",
          "description": "Deletes an SSH public key.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_delete_ssh_public_key():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.DeleteSshPublicKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_ssh_public_key(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.oslogin_v1.types.DeleteSshPublicKeyRequest, dict]]):\n        The request object. A request message for deleting an",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format ``users/{user}/sshPublicKeys/{fingerprint}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_login_profile",
          "description": "Retrieves the profile information used for logging in\nto a virtual machine on Google Compute Engine.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_get_login_profile():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.GetLoginProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_login_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The unique ID for the user in format ``users/{user}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.oslogin_v1.types.LoginProfile: The user profile information used for logging in to a virtual machine on Google Compute Engine."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_ssh_public_key",
          "description": "Retrieves an SSH public key.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_get_ssh_public_key():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.GetSshPublicKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_ssh_public_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.oslogin_v1.types.GetSshPublicKeyRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The fingerprint of the public key to retrieve. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format ``users/{user}/sshPublicKeys/{fingerprint}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.oslogin_v1.common.types.SshPublicKey: The SSH public key information associated with a Google account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_ssh_public_key",
          "description": "Adds an SSH public key and returns the profile\ninformation. Default POSIX account information is set\nwhen no username and UID exist as part of the login\nprofile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_import_ssh_public_key():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.ImportSshPublicKeyRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.import_ssh_public_key(request=request)\n\n        # H",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The unique ID for the user in format ``users/{user}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ssh_public_key": {
                "type": "google.cloud.oslogin_v1.common.types.SshPublicKey",
                "description": "Optional. The SSH public key and expiration time.  This corresponds to the ``ssh_public_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "project_id": {
                "type": "str",
                "description": "The project ID of the Google Cloud Platform project.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.oslogin_v1.types.ImportSshPublicKeyResponse: A response message for importing an SSH public key."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ssh_public_key",
              "project_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_ssh_public_key",
          "description": "Updates an SSH public key and returns the profile\ninformation. This method supports patch semantics.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import oslogin_v1\n\n    async def sample_update_ssh_public_key():\n        # Create a client\n        client = oslogin_v1.OsLoginServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = oslogin_v1.UpdateSshPublicKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_ssh_public_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format ``users/{user}/sshPublicKeys/{fingerprint}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ssh_public_key": {
                "type": "google.cloud.oslogin_v1.common.types.SshPublicKey",
                "description": "Required. The SSH public key and expiration time.  This corresponds to the ``ssh_public_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated. Updates all if not present.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.oslogin_v1.common.types.SshPublicKey: The SSH public key information associated with a Google account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "ssh_public_key",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}