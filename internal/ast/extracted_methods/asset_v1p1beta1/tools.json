{
  "AssetService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "search_all_resources",
          "description": "Searches all the resources within a given accessible Resource\nManager scope (project/folder/organization). This RPC gives\ncallers especially administrators the ability to search all the\nresources within a scope, even if they don't have ``.get``\npermission of all the resources. Callers should have\n``cloudasset.assets.searchAllResources`` permission on the\nrequested scope, otherwise the request will be rejected.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1p1beta1\n\n    async def sample_search_all_resources():\n        # Create a client\n        client = asset_v1p1beta1.AssetServiceAsyncClie",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. The relative name of an asset. The search is limited to the resources within the ``scope``. The allowed value must be:  -  Organization number (such as \"organizations/123\") -  Folder number (such as \"folders/1234\") -  Project number (such as \"projects/12345\") -  Project ID (such as \"projects/abc\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Optional. The query statement. This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "asset_types": {
                "type": "MutableSequence[str]",
                "description": "Optional. A list of asset types that this request searches for. If empty, it will search all the supported asset types.  This corresponds to the ``asset_types`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1p1beta1.services.asset_service.pagers.SearchAllResourcesAsyncPager: Search all resources response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "query",
              "asset_types",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_all_iam_policies",
          "description": "Searches all the IAM policies within a given accessible Resource\nManager scope (project/folder/organization). This RPC gives\ncallers especially administrators the ability to search all the\nIAM policies within a scope, even if they don't have\n``.getIamPolicy`` permission of all the IAM policies. Callers\nshould have ``cloudasset.assets.searchAllIamPolicies``\npermission on the requested scope, otherwise the request will be\nrejected.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import asset_v1p1beta1\n\n    async def sample_search_all_iam_policies():\n        # Create a client\n        client = asset_v1p1beta",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "scope": {
                "type": "str",
                "description": "Required. The relative name of an asset. The search is limited to the resources within the ``scope``. The allowed value must be:  -  Organization number (such as \"organizations/123\") -  Folder number (such as \"folders/1234\") -  Project number (such as \"projects/12345\") -  Project ID (such as \"projects/abc\")  This corresponds to the ``scope`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Optional. The query statement. Examples:  -  \"policy:myuser@mydomain.com\" -  \"policy:(myuser@mydomain.com viewer)\"  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.asset_v1p1beta1.services.asset_service.pagers.SearchAllIamPoliciesAsyncPager: Search all IAM policies response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "scope",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}