{
  "WebRiskServiceV1Beta1": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "compute_threat_list_diff",
          "description": "Gets the most recent threat list diffs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import webrisk_v1beta1\n\n    async def sample_compute_threat_list_diff():\n        # Create a client\n        client = webrisk_v1beta1.WebRiskServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = webrisk_v1beta1.ComputeThreatListDiffRequest(\n            threat_type=\"UNWANTED_SOFTWARE\",\n        )\n\n        # Make the request\n        response = await client.compute_threat_list_diff(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "threat_type": {
                "type": "google.cloud.webrisk_v1beta1.types.ThreatType",
                "description": "The ThreatList to update. This corresponds to the ``threat_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "version_token": {
                "type": "bytes",
                "description": "The current version token of the client for the requested list (the client version that was received from the last successful diff).  This corresponds to the ``version_token`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "constraints": {
                "type": "google.cloud.webrisk_v1beta1.types.ComputeThreatListDiffRequest.Constraints",
                "description": "Required. The constraints associated with this request.  This corresponds to the ``constraints`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.webrisk_v1beta1.types.ComputeThreatListDiffResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "threat_type",
              "version_token",
              "constraints",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "webrisk.ComputeThreatListDiffRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_uris",
          "description": "This method is used to check whether a URI is on a\ngiven threatList.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import webrisk_v1beta1\n\n    async def sample_search_uris():\n        # Create a client\n        client = webrisk_v1beta1.WebRiskServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = webrisk_v1beta1.SearchUrisRequest(\n            uri=\"uri_value\",\n            threat_types=['UNWANTED_SOFTWARE'],\n        )\n\n        # Make the request\n        response = await client.search_uris(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "uri": {
                "type": "str",
                "description": "Required. The URI to be checked for matches.  This corresponds to the ``uri`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "threat_types": {
                "type": "MutableSequence[google.cloud.webrisk_v1beta1.types.ThreatType]",
                "description": "Required. The ThreatLists to search in.  This corresponds to the ``threat_types`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.webrisk_v1beta1.types.SearchUrisResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "uri",
              "threat_types",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "webrisk.SearchUrisRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_hashes",
          "description": "Gets the full hashes that match the requested hash\nprefix. This is used after a hash prefix is looked up in\na threatList and there is a match. The client side\nthreatList only holds partial hashes so the client must\nquery this method to determine if there is a full hash\nmatch of a threat.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import webrisk_v1beta1\n\n    async def sample_search_hashes():\n        # Create a client\n        client = webrisk_v1beta1.WebRiskServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = webrisk_v1beta1.SearchHashesRequest(\n            threat_ty",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "hash_prefix": {
                "type": "bytes",
                "description": "A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON requests, this field is base64-encoded.  This corresponds to the ``hash_prefix`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "threat_types": {
                "type": "MutableSequence[google.cloud.webrisk_v1beta1.types.ThreatType]",
                "description": "Required. The ThreatLists to search in.  This corresponds to the ``threat_types`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.webrisk_v1beta1.types.SearchHashesResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "hash_prefix",
              "threat_types",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "webrisk.SearchHashesRequest"
          ]
        }
      }
    ]
  }
}