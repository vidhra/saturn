{
  "DlpService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "inspect_content",
          "description": "Finds potentially sensitive info in content.\nThis method has limits on input size, processing time,\nand output size.\n\nWhen no InfoTypes or CustomInfoTypes are specified in\nthis request, the system will automatically choose what\ndetectors to run. By default this may be all types, but\nmay change over time as detectors are updated.\n\nFor how to guides, see\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-images\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-text,\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_inspect_content():\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.InspectContentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "redact_image",
          "description": "Redacts potentially sensitive info from an image.\nThis method has limits on input size, processing time,\nand output size. See\nhttps://cloud.google.com/sensitive-data-protection/docs/redacting-sensitive-data-images\nto learn more.\n\nWhen no InfoTypes or CustomInfoTypes are specified in\nthis request, the system will automatically choose what\ndetectors to run. By default this may be all types, but\nmay change over time as detectors are updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_redact_image():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncCli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.RedactImageRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deidentify_content",
          "description": "De-identifies potentially sensitive info from a\nContentItem. This method has limits on input size and\noutput size. See\nhttps://cloud.google.com/sensitive-data-protection/docs/deidentify-sensitive-data\nto learn more.\n\nWhen no InfoTypes or CustomInfoTypes are specified in\nthis request, the system will automatically choose what\ndetectors to run. By default this may be all types, but\nmay change over time as detectors are updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_deidentify_content():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeidentifyContentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reidentify_content",
          "description": "Re-identifies content that has been de-identified. See\nhttps://cloud.google.com/sensitive-data-protection/docs/pseudonymization#re-identification_in_free_text_code_example\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_reidentify_content():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ReidentifyContentRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.reidentify_content(request=request)\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ReidentifyContentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_info_types",
          "description": "Returns a list of the sensitive information types\nthat DLP API supports. See\nhttps://cloud.google.com/sensitive-data-protection/docs/infotypes-reference\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_info_types():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListInfoTypesRequest(\n        )\n\n        # Make the request\n        response = await client.list_info_types(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "The parent resource name.  The format of this value is as follows:  ::  `locations/{location_id}`  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.ListInfoTypesResponse: Response to the ListInfoTypes request."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListInfoTypesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_inspect_template",
          "description": "Creates an InspectTemplate for reusing frequently\nused configuration for inspecting content, images, and\nstorage. See\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_inspect_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.CreateInspectTemplateRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_inspect_t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}`` -  Organizations scope, location specified: ``organizations/{org_id}/locations/{location_id}`` -  Organizations scope, no location specified (defaults to global): ``organizations/{org_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "inspect_template": {
                "type": "google.cloud.dlp_v2.types.InspectTemplate",
                "description": "Required. The InspectTemplate to create.  This corresponds to the ``inspect_template`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.InspectTemplate: The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "inspect_template",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateInspectTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_inspect_template",
          "description": "Updates the InspectTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_inspect_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.UpdateInspectTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_inspect_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of organization and inspectTemplate to be updated, for example ``organizations/433245324/inspectTemplates/432452342`` or projects/project-id/inspectTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "inspect_template": {
                "type": "google.cloud.dlp_v2.types.InspectTemplate",
                "description": "New InspectTemplate value. This corresponds to the ``inspect_template`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.InspectTemplate: The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "inspect_template",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateInspectTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_inspect_template",
          "description": "Gets an InspectTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_inspect_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetInspectTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_inspect_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and inspectTemplate to be read, for example ``organizations/433245324/inspectTemplates/432452342`` or projects/project-id/inspectTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.InspectTemplate: The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetInspectTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_inspect_templates",
          "description": "Lists InspectTemplates.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_inspect_templates():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListInspectTemplatesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_inspect_templates(request=request)\n\n        # Handle the response\n        async for response in page_resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}`` -  Organizations scope, location specified: ``organizations/{org_id}/locations/{location_id}`` -  Organizations scope, no location specified (defaults to global): ``organizations/{org_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListInspectTemplatesAsyncPager: Response message for ListInspectTemplates. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListInspectTemplatesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_inspect_template",
          "description": "Deletes an InspectTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_inspect_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteInspectTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_inspect_template(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.DeleteInspectTe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and inspectTemplate to be deleted, for example ``organizations/433245324/inspectTemplates/432452342`` or projects/project-id/inspectTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteInspectTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_deidentify_template",
          "description": "Creates a DeidentifyTemplate for reusing frequently\nused configuration for de-identifying content, images,\nand storage. See\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates-deid\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_deidentify_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.CreateDeidentifyTemplateRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}`` -  Organizations scope, location specified: ``organizations/{org_id}/locations/{location_id}`` -  Organizations scope, no location specified (defaults to global): ``organizations/{org_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deidentify_template": {
                "type": "google.cloud.dlp_v2.types.DeidentifyTemplate",
                "description": "Required. The DeidentifyTemplate to create.  This corresponds to the ``deidentify_template`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DeidentifyTemplate: DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "deidentify_template",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateDeidentifyTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_deidentify_template",
          "description": "Updates the DeidentifyTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates-deid\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_deidentify_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.UpdateDeidentifyTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_deidentify_template(request=request)\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of organization and deidentify template to be updated, for example ``organizations/433245324/deidentifyTemplates/432452342`` or projects/project-id/deidentifyTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deidentify_template": {
                "type": "google.cloud.dlp_v2.types.DeidentifyTemplate",
                "description": "New DeidentifyTemplate value. This corresponds to the ``deidentify_template`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DeidentifyTemplate: DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "deidentify_template",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateDeidentifyTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_deidentify_template",
          "description": "Gets a DeidentifyTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates-deid\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_deidentify_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetDeidentifyTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_deidentify_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and deidentify template to be read, for example ``organizations/433245324/deidentifyTemplates/432452342`` or projects/project-id/deidentifyTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DeidentifyTemplate: DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetDeidentifyTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_deidentify_templates",
          "description": "Lists DeidentifyTemplates.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates-deid\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_deidentify_templates():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListDeidentifyTemplatesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_deidentify_templates(request=request)\n\n        # Handle the response\n        async for respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}`` -  Organizations scope, location specified: ``organizations/{org_id}/locations/{location_id}`` -  Organizations scope, no location specified (defaults to global): ``organizations/{org_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListDeidentifyTemplatesAsyncPager: Response message for ListDeidentifyTemplates. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListDeidentifyTemplatesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_deidentify_template",
          "description": "Deletes a DeidentifyTemplate.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-templates-deid\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_deidentify_template():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteDeidentifyTemplateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_deidentify_template(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and deidentify template to be deleted, for example ``organizations/433245324/deidentifyTemplates/432452342`` or projects/project-id/deidentifyTemplates/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteDeidentifyTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_job_trigger",
          "description": "Creates a job trigger to run DLP actions such as\nscanning storage for sensitive information on a set\nschedule. See\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-job-triggers\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        job_trigger = dlp_v2.JobTrigger()\n        job_trigger.status = \"CANCELLED\"\n\n        request = dlp_v2.CreateJobTriggerRequest(\n            parent=\"parent_value\",\n            ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job_trigger": {
                "type": "google.cloud.dlp_v2.types.JobTrigger",
                "description": "Required. The JobTrigger to create. This corresponds to the ``job_trigger`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.JobTrigger: Contains a configuration to make API calls on a repeating basis. See https://cloud.google.com/sensitive-data-protection/docs/concepts-job-triggers to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "job_trigger",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_job_trigger",
          "description": "Updates a job trigger.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-job-triggers\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.UpdateJobTriggerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_job_trigger(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the triggeredJob, for example ``projects/dlp-test-project/jobTriggers/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job_trigger": {
                "type": "google.cloud.dlp_v2.types.JobTrigger",
                "description": "New JobTrigger value. This corresponds to the ``job_trigger`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.JobTrigger: Contains a configuration to make API calls on a repeating basis. See https://cloud.google.com/sensitive-data-protection/docs/concepts-job-triggers to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "job_trigger",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "hybrid_inspect_job_trigger",
          "description": "Inspect hybrid content and store findings to a\ntrigger. The inspection will be processed\nasynchronously. To review the findings monitor the jobs\nwithin the trigger.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_hybrid_inspect_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.HybridInspectJobTriggerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.hybrid_inspect_job_trigger(request=request)\n\n        # Han",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the trigger to execute a hybrid inspect on, for example ``projects/dlp-test-project/jobTriggers/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.HybridInspectResponse: Quota exceeded errors will be thrown once quota has been met."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.HybridInspectJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job_trigger",
          "description": "Gets a job trigger.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-job-triggers\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetJobTriggerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_job_trigger(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the triggeredJob, for example ``projects/dlp-test-project/jobTriggers/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.JobTrigger: Contains a configuration to make API calls on a repeating basis. See https://cloud.google.com/sensitive-data-protection/docs/concepts-job-triggers to learn more."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_job_triggers",
          "description": "Lists job triggers.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-job-triggers\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_job_triggers():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListJobTriggersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_job_triggers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListJobTriggersAsyncPager: Response message for ListJobTriggers.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListJobTriggersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_job_trigger",
          "description": "Deletes a job trigger.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-job-triggers\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteJobTriggerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_job_trigger(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.DeleteJobTriggerRequest, dict]])",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the triggeredJob, for example ``projects/dlp-test-project/jobTriggers/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "activate_job_trigger",
          "description": "Activate a job trigger. Causes the immediate execute\nof a trigger instead of waiting on the trigger event to\noccur.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_activate_job_trigger():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ActivateJobTriggerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.activate_job_trigger(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ActivateJobTriggerRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_discovery_config",
          "description": "Creates a config for discovery to scan and profile\nstorage.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_discovery_config():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        discovery_config = dlp_v2.DiscoveryConfig()\n        discovery_config.status = \"PAUSED\"\n\n        request = dlp_v2.CreateDiscoveryConfigRequest(\n            parent=\"parent_value\",\n            discovery_config=discovery_config,\n        )\n\n        # Make the request\n        response = await client.create_discovery_conf",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization):  -  Projects scope: ``projects/{project_id}/locations/{location_id}`` -  Organizations scope: ``organizations/{org_id}/locations/{location_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "discovery_config": {
                "type": "google.cloud.dlp_v2.types.DiscoveryConfig",
                "description": "Required. The DiscoveryConfig to create.  This corresponds to the ``discovery_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DiscoveryConfig: Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project.  The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/sensitive-data-protection/docs/data-profiles#retention)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "discovery_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateDiscoveryConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_discovery_config",
          "description": "Updates a discovery configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_discovery_config():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        discovery_config = dlp_v2.DiscoveryConfig()\n        discovery_config.status = \"PAUSED\"\n\n        request = dlp_v2.UpdateDiscoveryConfigRequest(\n            name=\"name_value\",\n            discovery_config=discovery_config,\n        )\n\n        # Make the request\n        response = await client.update_discovery_config(request=request)\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the configuration, for example ``projects/dlp-test-project/discoveryConfigs/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "discovery_config": {
                "type": "google.cloud.dlp_v2.types.DiscoveryConfig",
                "description": "Required. New DiscoveryConfig value. This corresponds to the ``discovery_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DiscoveryConfig: Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project.  The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/sensitive-data-protection/docs/data-profiles#retention)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "discovery_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateDiscoveryConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_discovery_config",
          "description": "Gets a discovery configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_discovery_config():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetDiscoveryConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_discovery_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetDiscoveryConfigRequest, dict]]):\n        The ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the configuration, for example ``projects/dlp-test-project/discoveryConfigs/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DiscoveryConfig: Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project.  The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/sensitive-data-protection/docs/data-profiles#retention)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetDiscoveryConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_discovery_configs",
          "description": "Lists discovery configurations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_discovery_configs():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListDiscoveryConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_discovery_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value is as follows: ``projects/{project_id}/locations/{location_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListDiscoveryConfigsAsyncPager: Response message for ListDiscoveryConfigs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListDiscoveryConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_discovery_config",
          "description": "Deletes a discovery configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_discovery_config():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteDiscoveryConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_discovery_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.DeleteDiscoveryConfigRequest, dict]]):\n        The request object. Request message for\n        DeleteD",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the project and the config, for example ``projects/dlp-test-project/discoveryConfigs/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteDiscoveryConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_dlp_job",
          "description": "Creates a new job to inspect storage or calculate\nrisk metrics. See\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-storage\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis\nto learn more.\n\nWhen no InfoTypes or CustomInfoTypes are specified in\ninspect jobs, the system will automatically choose what\ndetectors to run. By default this may be all types, but\nmay change over time as detectors are updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpSe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "inspect_job": {
                "type": "google.cloud.dlp_v2.types.InspectJobConfig",
                "description": "An inspection job scans a storage repository for InfoTypes.  This corresponds to the ``inspect_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "risk_job": {
                "type": "google.cloud.dlp_v2.types.RiskAnalysisJobConfig",
                "description": "A risk analysis job calculates re-identification risk metrics for a BigQuery table.  This corresponds to the ``risk_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DlpJob: Combines all of the information about a DLP job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "inspect_job",
              "risk_job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_dlp_jobs",
          "description": "Lists DlpJobs that match the specified filter in the\nrequest. See\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-storage\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_dlp_jobs():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListDlpJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_dlp_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListDlpJobsAsyncPager: The response message for listing DLP jobs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListDlpJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dlp_job",
          "description": "Gets the latest state of a long-running DlpJob.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-storage\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetDlpJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dlp_job(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DlpJob resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.DlpJob: Combines all of the information about a DLP job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_dlp_job",
          "description": "Deletes a long-running DlpJob. This method indicates\nthat the client is no longer interested in the DlpJob\nresult. The job will be canceled if possible.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-storage\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteDlpJobRequest(\n            name=\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DlpJob resource to be deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_dlp_job",
          "description": "Starts asynchronous cancellation on a long-running\nDlpJob. The server makes a best effort to cancel the\nDlpJob, but success is not guaranteed.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/inspecting-storage\nand\nhttps://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_cancel_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.CancelDlpJobRequest(\n            name=\"name_value",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CancelDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_stored_info_type",
          "description": "Creates a pre-built stored infoType to be used for\ninspection. See\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_stored_info_type():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.CreateStoredInfoTypeRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_stored_info_type(request=request)\n\n        # Handle th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}`` -  Organizations scope, location specified: ``organizations/{org_id}/locations/{location_id}`` -  Organizations scope, no location specified (defaults to global): ``organizations/{org_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config": {
                "type": "google.cloud.dlp_v2.types.StoredInfoTypeConfig",
                "description": "Required. Configuration of the storedInfoType to create.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.StoredInfoType: StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateStoredInfoTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_stored_info_type",
          "description": "Updates the stored infoType by creating a new\nversion. The existing version will continue to be used\nuntil the new version is ready. See\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_stored_info_type():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.UpdateStoredInfoTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of organization and storedInfoType to be updated, for example ``organizations/433245324/storedInfoTypes/432452342`` or projects/project-id/storedInfoTypes/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config": {
                "type": "google.cloud.dlp_v2.types.StoredInfoTypeConfig",
                "description": "Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.StoredInfoType: StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateStoredInfoTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_stored_info_type",
          "description": "Gets a stored infoType.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_stored_info_type():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetStoredInfoTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_stored_info_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and storedInfoType to be read, for example ``organizations/433245324/storedInfoTypes/432452342`` or projects/project-id/storedInfoTypes/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.StoredInfoType: StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetStoredInfoTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_stored_info_types",
          "description": "Lists stored infoTypes.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_stored_info_types():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListStoredInfoTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_stored_info_types(request=request)\n\n        # Handle the response\n        async for response in page",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization) and whether you have `specified a processing location <https://cloud.google.com/sensitive-data-protection/docs/specifying-location>`__:  -  Projects scope, location specified: ``projects/{project_id}/locations/{location_id}`` -  Projects scope, no location specified (defaults to global): ``projects/{project_id}``  The following example ``parent`` string specifies a parent project with the identifier ``example-project``, and specifies the ``europe-west3`` location for processing data:  ::  parent=projects/example-project/locations/europe-west3  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListStoredInfoTypesAsyncPager: Response message for ListStoredInfoTypes. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListStoredInfoTypesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_stored_info_type",
          "description": "Deletes a stored infoType.\nSee\nhttps://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes\nto learn more.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_stored_info_type():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteStoredInfoTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_stored_info_type(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.DeleteStor",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the organization and storedInfoType to be deleted, for example ``organizations/433245324/storedInfoTypes/432452342`` or projects/project-id/storedInfoTypes/432452342.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteStoredInfoTypeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_project_data_profiles",
          "description": "Lists project data profiles for an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_project_data_profiles():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListProjectDataProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_project_data_profiles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. organizations/{org_id}/locations/{loc_id} This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListProjectDataProfilesAsyncPager: List of profiles generated for a given organization or project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListProjectDataProfilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_table_data_profiles",
          "description": "Lists table data profiles for an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_table_data_profiles():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListTableDataProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_table_data_profiles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the organization or project, for example ``organizations/433245324/locations/europe`` or ``projects/project-id/locations/asia``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListTableDataProfilesAsyncPager: List of profiles generated for a given organization or project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListTableDataProfilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_column_data_profiles",
          "description": "Lists column data profiles for an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_column_data_profiles():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListColumnDataProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_column_data_profiles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the organization or project, for example ``organizations/433245324/locations/europe`` or ``projects/project-id/locations/asia``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListColumnDataProfilesAsyncPager: List of profiles generated for a given organization or project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListColumnDataProfilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_project_data_profile",
          "description": "Gets a project data profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_project_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetProjectDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_project_data_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetProjectDataProfileRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name, for example ``organizations/12345/locations/us/projectDataProfiles/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.ProjectDataProfile: An aggregated profile for this project, based on the resources profiled within it."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetProjectDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_file_store_data_profiles",
          "description": "Lists file store data profiles for an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_file_store_data_profiles():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListFileStoreDataProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_file_store_data_profiles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the organization or project, for example ``organizations/433245324/locations/europe`` or ``projects/project-id/locations/asia``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListFileStoreDataProfilesAsyncPager: List of file store data profiles generated for a given organization or project.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListFileStoreDataProfilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_file_store_data_profile",
          "description": "Gets a file store data profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_file_store_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetFileStoreDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_file_store_data_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetFileStoreDataProfileReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name, for example ``organizations/12345/locations/us/fileStoreDataProfiles/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.FileStoreDataProfile: The profile for a file store.  -  Cloud Storage: maps 1:1 with a bucket. -  Amazon S3: maps 1:1 with a bucket."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetFileStoreDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_file_store_data_profile",
          "description": "Delete a FileStoreDataProfile. Will not prevent the\nprofile from being regenerated if the resource is still\nincluded in a discovery configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_file_store_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteFileStoreDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_file_store_data_profile(request=request)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the file store data profile.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteFileStoreDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_table_data_profile",
          "description": "Gets a table data profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_table_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetTableDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_table_data_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetTableDataProfileRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name, for example ``organizations/12345/locations/us/tableDataProfiles/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.TableDataProfile: The profile for a scanned table."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetTableDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_column_data_profile",
          "description": "Gets a column data profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_column_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetColumnDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_column_data_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetColumnDataProfileRequest, dict]]):\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name, for example ``organizations/12345/locations/us/columnDataProfiles/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.ColumnDataProfile: The profile for a scanned column within a table."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetColumnDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_table_data_profile",
          "description": "Delete a TableDataProfile. Will not prevent the\nprofile from being regenerated if the table is still\nincluded in a discovery configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_table_data_profile():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteTableDataProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_table_data_profile(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the table data profile.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteTableDataProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "hybrid_inspect_dlp_job",
          "description": "Inspect hybrid content and store findings to a job.\nTo review the findings, inspect the job. Inspection will\noccur asynchronously.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_hybrid_inspect_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.HybridInspectDlpJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.hybrid_inspect_dlp_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the job to execute a hybrid inspect on, for example ``projects/dlp-test-project/dlpJob/53234423``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.HybridInspectResponse: Quota exceeded errors will be thrown once quota has been met."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.HybridInspectDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "finish_dlp_job",
          "description": "Finish a running hybrid DlpJob. Triggers the\nfinalization steps and running of any enabled actions\nthat have not yet run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_finish_dlp_job():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.FinishDlpJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.finish_dlp_job(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.FinishDlpJobRequest, dict]]):\n        The ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.FinishDlpJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_connection",
          "description": "Create a Connection to an external data source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_create_connection():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        connection = dlp_v2.Connection()\n        connection.cloud_sql.username_password.username = \"username_value\"\n        connection.cloud_sql.username_password.password_secret_version_name = \"password_secret_version_name_value\"\n        connection.cloud_sql.max_connections = 1608\n        connection.cloud_sql.database_engine = \"DATABASE_EN",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name.  The format of this value varies depending on the scope of the request (project or organization):  -  Projects scope: ``projects/{project_id}/locations/{location_id}`` -  Organizations scope: ``organizations/{org_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection": {
                "type": "google.cloud.dlp_v2.types.Connection",
                "description": "Required. The connection resource. This corresponds to the ``connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.Connection: A data connection to allow DLP to profile data in locations that require additional configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "connection",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.CreateConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_connection",
          "description": "Get a Connection by name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_get_connection():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.GetConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.GetConnectionRequest, dict]]):\n        The request object. Request mess",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name in the format: ``projects/{project}/locations/{location}/connections/{connection}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.Connection: A data connection to allow DLP to profile data in locations that require additional configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.GetConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_connections",
          "description": "Lists Connections in a parent. Use SearchConnections\nto see all connections within an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_list_connections():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.ListConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the organization or project, for example, ``organizations/433245324/locations/europe`` or ``projects/project-id/locations/asia``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.ListConnectionsAsyncPager: Response message for ListConnections.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.ListConnectionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_connections",
          "description": "Searches for Connections in a parent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_search_connections():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.SearchConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.search_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the organization or project with a wildcard location, for example, ``organizations/433245324/locations/-`` or ``projects/project-id/locations/-``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.services.dlp_service.pagers.SearchConnectionsAsyncPager: Response message for SearchConnections. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.SearchConnectionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_connection",
          "description": "Delete a Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_delete_connection():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dlp_v2.DeleteConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_connection(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dlp_v2.types.DeleteConnectionRequest, dict]]):\n        The request object. Request message for DeleteConnection.\n    name (:class:`str`):\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the Connection to be deleted, in the format: ``projects/{project}/locations/{location}/connections/{connection}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.DeleteConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_connection",
          "description": "Update a Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dlp_v2\n\n    async def sample_update_connection():\n        # Create a client\n        client = dlp_v2.DlpServiceAsyncClient()\n\n        # Initialize request argument(s)\n        connection = dlp_v2.Connection()\n        connection.cloud_sql.username_password.username = \"username_value\"\n        connection.cloud_sql.username_password.password_secret_version_name = \"password_secret_version_name_value\"\n        connection.cloud_sql.max_connections = 1608\n        connection.cloud_sql.database_engine = \"DATABASE_ENGINE_POSTGRES\"\n        conn",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name in the format: ``projects/{project}/locations/{location}/connections/{connection}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dlp_v2.types.Connection: A data connection to allow DLP to profile data in locations that require additional configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dlp.UpdateConnectionRequest"
          ]
        }
      }
    ]
  }
}