{
  "ReservationService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_reservation",
          "description": "Creates a new reservation resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_create_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.CreateReservationRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_reservation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project, location. E.g., ``projects/myproject/locations/US``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "reservation": {
                "type": "google.cloud.bigquery_reservation_v1.types.Reservation",
                "description": "Definition of the new reservation to create.  This corresponds to the ``reservation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "reservation_id": {
                "type": "str",
                "description": "The reservation ID. It must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.  This corresponds to the ``reservation_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Reservation: A reservation is a mechanism used to guarantee slots to users."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "reservation",
              "reservation_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcbr_reservation.CreateReservationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_reservations",
          "description": "Lists all the reservations for the project in the\nspecified location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_list_reservations():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.ListReservationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_reservations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name containing project and location, e.g.: ``projects/myproject/locations/US``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.services.reservation_service.pagers.ListReservationsAsyncPager: The response for [ReservationService.ListReservations][google.cloud.bigquery.reservation.v1.ReservationService.ListReservations].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.ListReservationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_reservation",
          "description": "Returns information about the reservation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_get_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.GetReservationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_reservation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bigqu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the reservation to retrieve. E.g., ``projects/myproject/locations/US/reservations/team1-prod``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Reservation: A reservation is a mechanism used to guarantee slots to users."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.GetReservationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_reservation",
          "description": "Deletes a reservation. Returns\n``google.rpc.Code.FAILED_PRECONDITION`` when reservation has\nassignments.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_delete_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.DeleteReservationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_reservation(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the reservation to retrieve. E.g., ``projects/myproject/locations/US/reservations/team1-prod``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.DeleteReservationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_reservation",
          "description": "Updates an existing reservation resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_update_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.UpdateReservationRequest(\n        )\n\n        # Make the request\n        response = await client.update_reservation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_reservation_v1.type",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "reservation": {
                "type": "google.cloud.bigquery_reservation_v1.types.Reservation",
                "description": "Content of the reservation to update. This corresponds to the ``reservation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Standard field mask for the set of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Reservation: A reservation is a mechanism used to guarantee slots to users."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "reservation",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "gcbr_reservation.UpdateReservationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_capacity_commitment",
          "description": "Creates a new capacity commitment resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_create_capacity_commitment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.CreateCapacityCommitmentRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_capacity_commitment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent reservation. E.g., ``projects/myproject/locations/US``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "capacity_commitment": {
                "type": "google.cloud.bigquery_reservation_v1.types.CapacityCommitment",
                "description": "Content of the capacity commitment to create.  This corresponds to the ``capacity_commitment`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.CapacityCommitment: Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes.  In order to remove annual commitment, its plan needs to be changed to monthly or flex first.  A capacity commitment resource exists as a child resource of the admin project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "capacity_commitment",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.CreateCapacityCommitmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_capacity_commitments",
          "description": "Lists all the capacity commitments for the admin\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_list_capacity_commitments():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.ListCapacityCommitmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_capacity_commitments(request=request)\n\n        # Handle the response\n        async for response in pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent reservation. E.g., ``projects/myproject/locations/US``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.services.reservation_service.pagers.ListCapacityCommitmentsAsyncPager: The response for [ReservationService.ListCapacityCommitments][google.cloud.bigquery.reservation.v1.ReservationService.ListCapacityCommitments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.ListCapacityCommitmentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_capacity_commitment",
          "description": "Returns information about the capacity commitment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_get_capacity_commitment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.GetCapacityCommitmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_capacity_commitment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the capacity commitment to retrieve. E.g., ``projects/myproject/locations/US/capacityCommitments/123``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.CapacityCommitment: Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes.  In order to remove annual commitment, its plan needs to be changed to monthly or flex first.  A capacity commitment resource exists as a child resource of the admin project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.GetCapacityCommitmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_capacity_commitment",
          "description": "Deletes a capacity commitment. Attempting to delete capacity\ncommitment before its commitment_end_time will fail with the\nerror code ``google.rpc.Code.FAILED_PRECONDITION``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_delete_capacity_commitment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.DeleteCapacityCommitmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the capacity commitment to delete. E.g., ``projects/myproject/locations/US/capacityCommitments/123``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.DeleteCapacityCommitmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_capacity_commitment",
          "description": "Updates an existing capacity commitment.\n\nOnly ``plan`` and ``renewal_plan`` fields can be updated.\n\nPlan can only be changed to a plan of a longer commitment\nperiod. Attempting to change to a plan with shorter commitment\nperiod will fail with the error code\n``google.rpc.Code.FAILED_PRECONDITION``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_update_capacity_commitment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "capacity_commitment": {
                "type": "google.cloud.bigquery_reservation_v1.types.CapacityCommitment",
                "description": "Content of the capacity commitment to update.  This corresponds to the ``capacity_commitment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Standard field mask for the set of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.CapacityCommitment: Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes.  In order to remove annual commitment, its plan needs to be changed to monthly or flex first.  A capacity commitment resource exists as a child resource of the admin project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "capacity_commitment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.UpdateCapacityCommitmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "split_capacity_commitment",
          "description": "Splits capacity commitment to two commitments of the same plan\nand ``commitment_end_time``.\n\nA common use case is to enable downgrading commitments.\n\nFor example, in order to downgrade from 10000 slots to 8000, you\nmight split a 10000 capacity commitment into commitments of 2000\nand 8000. Then, you delete the first one after the commitment\nend time passes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_split_capacity_commitment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name e.g.,: ``projects/myproject/locations/US/capacityCommitments/123``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "slot_count": {
                "type": "int",
                "description": "Number of slots in the capacity commitment after the split.  This corresponds to the ``slot_count`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.SplitCapacityCommitmentResponse: The response for [ReservationService.SplitCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.SplitCapacityCommitment]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "slot_count",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.SplitCapacityCommitmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "merge_capacity_commitments",
          "description": "Merges capacity commitments of the same plan into a single\ncommitment.\n\nThe resulting capacity commitment has the greater\ncommitment_end_time out of the to-be-merged capacity\ncommitments.\n\nAttempting to merge capacity commitments of different plan will\nfail with the error code\n``google.rpc.Code.FAILED_PRECONDITION``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_merge_capacity_commitments():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Parent resource that identifies admin project and location e.g., ``projects/myproject/locations/us``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "capacity_commitment_ids": {
                "type": "MutableSequence[str]",
                "description": "Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc  This corresponds to the ``capacity_commitment_ids`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.CapacityCommitment: Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes.  In order to remove annual commitment, its plan needs to be changed to monthly or flex first.  A capacity commitment resource exists as a child resource of the admin project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "capacity_commitment_ids",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.MergeCapacityCommitmentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_assignment",
          "description": "Creates an assignment object which allows the given project to\nsubmit jobs of a certain type using slots from the specified\nreservation.\n\nCurrently a resource (project, folder, organization) can only\nhave one assignment per each (job_type, location) combination,\nand that reservation will be used for all jobs of the matching\ntype.\n\nDifferent assignments can be created on different levels of the\nprojects, folders or organization hierarchy. During query\nexecution, the assignment is looked up at the project, folder\nand organization levels in that order. The first assignment\nfound is applied to the query.\n\nWhen creating assignments, it does not matter if other\nassignments exist at higher levels.\n\nExample:\n\n-  The organization ``organizationA`` contains two projects,\n   ``project1`` and ``project2``.\n-  Assignments for all three entities (``organizationA``,\n   ``project1``, and ``project2``) could all be created and\n   mapped to the same or different reservations.\n\n\"None\" assignments represent an absence of the ass",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name of the assignment E.g. ``projects/myproject/locations/US/reservations/team1-prod``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "assignment": {
                "type": "google.cloud.bigquery_reservation_v1.types.Assignment",
                "description": "Assignment resource to create. This corresponds to the ``assignment`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Assignment: An assignment allows a project to submit jobs of a certain type using slots from the specified reservation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "assignment",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.CreateAssignmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_assignments",
          "description": "Lists assignments.\n\nOnly explicitly created assignments will be returned.\n\nExample:\n\n-  Organization ``organizationA`` contains two projects,\n   ``project1`` and ``project2``.\n-  Reservation ``res1`` exists and was created previously.\n-  CreateAssignment was used previously to define the following\n   associations between entities and reservations:\n   ``<organizationA, res1>`` and ``<project1, res1>``\n\nIn this example, ListAssignments will just return the above two\nassignments for reservation ``res1``, and no expansion/merge\nwill happen.\n\nThe wildcard \"-\" can be used for reservations in the request. In\nthat case all assignments belongs to the specified project and\nlocation will be listed.\n\n**Note** \"-\" cannot be used for projects nor locations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name e.g.:  ``projects/myproject/locations/US/reservations/team1-prod``  Or:  ``projects/myproject/locations/US/reservations/-``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.services.reservation_service.pagers.ListAssignmentsAsyncPager: The response for [ReservationService.ListAssignments][google.cloud.bigquery.reservation.v1.ReservationService.ListAssignments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.ListAssignmentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_assignment",
          "description": "Deletes a assignment. No expansion will happen.\n\nExample:\n\n-  Organization ``organizationA`` contains two projects,\n   ``project1`` and ``project2``.\n-  Reservation ``res1`` exists and was created previously.\n-  CreateAssignment was used previously to define the following\n   associations between entities and reservations:\n   ``<organizationA, res1>`` and ``<project1, res1>``\n\nIn this example, deletion of the ``<organizationA, res1>``\nassignment won't affect the other assignment\n``<project1, res1>``. After said deletion, queries from\n``project1`` will still use ``res1`` while queries from\n``project2`` will switch to use on-demand mode.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googlea",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource, e.g. ``projects/myproject/locations/US/reservations/team1-prod/assignments/123``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.DeleteAssignmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_assignments",
          "description": "Deprecated: Looks up assignments for a specified resource for a\nparticular region. If the request is about a project:\n\n1. Assignments created on the project will be returned if they\n   exist.\n2. Otherwise assignments created on the closest ancestor will be\n   returned.\n3. Assignments for different JobTypes will all be returned.\n\nThe same logic applies if the request is about a folder.\n\nIf the request is about an organization, then assignments\ncreated on the organization will be returned (organization\ndoesn't have ancestors).\n\nComparing to ListAssignments, there are some behavior\ndifferences:\n\n1. permission on the assignee will be verified in this API.\n2. Hierarchy lookup (project->folder->organization) happens in\n   this API.\n3. Parent here is ``projects/*/locations/*``, instead of\n   ``projects/*/locations/*reservations/*``.\n\n**Note** \"-\" cannot be used for projects nor locations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the admin project(containing project and location), e.g.: ``projects/myproject/locations/US``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Please specify resource name as assignee in the query.  Examples:  -  ``assignee=projects/myproject`` -  ``assignee=folders/123`` -  ``assignee=organizations/456``  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.services.reservation_service.pagers.SearchAssignmentsAsyncPager: The response for [ReservationService.SearchAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAssignments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.SearchAssignmentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_all_assignments",
          "description": "Looks up assignments for a specified resource for a particular\nregion. If the request is about a project:\n\n1. Assignments created on the project will be returned if they\n   exist.\n2. Otherwise assignments created on the closest ancestor will be\n   returned.\n3. Assignments for different JobTypes will all be returned.\n\nThe same logic applies if the request is about a folder.\n\nIf the request is about an organization, then assignments\ncreated on the organization will be returned (organization\ndoesn't have ancestors).\n\nComparing to ListAssignments, there are some behavior\ndifferences:\n\n1. permission on the assignee will be verified in this API.\n2. Hierarchy lookup (project->folder->organization) happens in\n   this API.\n3. Parent here is ``projects/*/locations/*``, instead of\n   ``projects/*/locations/*reservations/*``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name with location (project name could be the wildcard '-'), e.g.: ``projects/-/locations/US``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Please specify resource name as assignee in the query.  Examples:  -  ``assignee=projects/myproject`` -  ``assignee=folders/123`` -  ``assignee=organizations/456``  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.services.reservation_service.pagers.SearchAllAssignmentsAsyncPager: The response for [ReservationService.SearchAllAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAllAssignments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.SearchAllAssignmentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "move_assignment",
          "description": "Moves an assignment under a new reservation.\n\nThis differs from removing an existing assignment and\nrecreating a new one by providing a transactional change\nthat ensures an assignee always has an associated\nreservation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_move_assignment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.MoveAssignmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the assignment, e.g. ``projects/myproject/locations/US/reservations/team1-prod/assignments/123``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "destination_id": {
                "type": "str",
                "description": "The new reservation ID, e.g.: ``projects/myotherproject/locations/US/reservations/team2-prod``  This corresponds to the ``destination_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Assignment: An assignment allows a project to submit jobs of a certain type using slots from the specified reservation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "destination_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.MoveAssignmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_assignment",
          "description": "Updates an existing assignment.\n\nOnly the ``priority`` field can be updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_update_assignment():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.UpdateAssignmentRequest(\n        )\n\n        # Make the request\n        response = await client.update_assignment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "assignment": {
                "type": "google.cloud.bigquery_reservation_v1.types.Assignment",
                "description": "Content of the assignment to update. This corresponds to the ``assignment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Standard field mask for the set of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.Assignment: An assignment allows a project to submit jobs of a certain type using slots from the specified reservation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "assignment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.UpdateAssignmentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_bi_reservation",
          "description": "Retrieves a BI reservation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_get_bi_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.GetBiReservationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_bi_reservation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the requested reservation, for example: ``projects/{project_id}/locations/{location_id}/biReservation``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.BiReservation: Represents a BI Reservation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.GetBiReservationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_bi_reservation",
          "description": "Updates a BI reservation.\n\nOnly fields specified in the ``field_mask`` are updated.\n\nA singleton BI reservation always exists with default size 0. In\norder to reserve BI capacity it needs to be updated to an amount\ngreater than 0. In order to release BI capacity reservation size\nmust be set to 0.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_reservation_v1\n\n    async def sample_update_bi_reservation():\n        # Create a client\n        client = bigquery_reservation_v1.ReservationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_reservation_v1.Upda",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "bi_reservation": {
                "type": "google.cloud.bigquery_reservation_v1.types.BiReservation",
                "description": "A reservation to update. This corresponds to the ``bi_reservation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "A list of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_reservation_v1.types.BiReservation: Represents a BI Reservation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "bi_reservation",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "reservation.UpdateBiReservationRequest"
          ]
        }
      }
    ]
  }
}