[
  {
    "type": "function",
    "name": "list_functions",
    "description": "Returns a list of functions that belong to the\nrequested project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_list_functions():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v1.ListFunctionsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_functions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.fu",
    "parameters": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The project and location from which the function should be listed, specified in the format ``projects/*/locations/*`` If you want to list functions in all locations, use \"-\" in place of a location. When listing functions in all locations, if one or more location(s) are unreachable, the response will contain functions from all reachable locations along with the names of any unreachable locations.",
          "type": "string"
        },
        "page_size": {
          "description": "Maximum number of functions to return per call. The largest allowed page_size is 1,000, if the page_size is omitted or specified as greater than 1,000 then it will be replaced as 1,000. The size of the list response can be less than specified when used with filters.",
          "type": "integer"
        },
        "page_token": {
          "description": "The value returned by the last ``ListFunctionsResponse``; indicates that this is a continuation of a prior ``ListFunctions`` call, and that the system should return the next page of data.",
          "type": "string"
        },
        "filter": {
          "description": "The filter for Functions that match the filter expression, following the syntax outlined in https://google.aip.dev/160.",
          "type": "string"
        },
        "order_by": {
          "description": "The sorting order of the resources returned. Value should be a comma separated list of fields. The default sorting oder is ascending. See https://google.aip.dev/132#ordering.",
          "type": "string"
        }
      },
      "required": [
        "parent"
      ]
    }
  },
  {
    "type": "function",
    "name": "get_function",
    "description": "Returns a function with the given name from the\nrequested project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_get_function():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v1.GetFunctionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_function(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.functions_v1.types.G",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the function which details should be obtained.",
          "type": "string"
        },
        "revision": {
          "description": "Optional. The version of the 1st gen function whose details should be obtained. The version of a 1st gen function is an integer that starts from 1 and gets incremented on redeployments. GCF may keep historical configs for old versions of 1st gen function. This field can be specified to fetch the historical configs. This field is valid only for GCF 1st gen function.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "type": "function",
    "name": "create_function",
    "description": "Creates a new function. If a function with the given name\nalready exists in the specified project, the long running\noperation will return ``ALREADY_EXISTS`` error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_create_function():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        function = functions_v1.CloudFunction()\n        function.source_archive_url = \"source_archive_url_value\"\n\n        request = functions_v1.CreateFunctionRequest(\n            location=\"location_value\"",
    "parameters": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The project and location in which the function should be created, specified in the format ``projects/*/locations/*``",
          "type": "string"
        },
        "function": {
          "description": "Required. Function to be created.",
          "reference": "google.cloud.functions_v2.types.Function",
          "resolved_schema": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A user-defined name of the function. Function names must be unique globally and match pattern ``projects/*/locations/*/functions/*``",
                "type": "string"
              },
              "description": {
                "description": "User-provided description of a function.",
                "type": "string"
              },
              "build_config": {
                "description": "Describes the Build step of the function that builds a container from the given source.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.BuildConfig",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "automatic_update_policy": {
                      "description": "This field is a member of `oneof`_ ``runtime_update_policy``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.AutomaticUpdatePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "on_deploy_update_policy": {
                      "description": "This field is a member of `oneof`_ ``runtime_update_policy``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.OnDeployUpdatePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "runtime_version": {
                            "description": "Output only. Contains the runtime version which was used during latest function deployment.",
                            "type": "string",
                            "output_only": true
                          }
                        }
                      }
                    },
                    "build": {
                      "description": "Output only. The Cloud Build name of the latest successful deployment of the function.",
                      "type": "string",
                      "output_only": true
                    },
                    "runtime": {
                      "description": "The runtime in which to run the function. Required when deploying a new function, optional when updating an existing function. For a complete list of possible choices, see the ```gcloud`` command reference <https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime>`__.",
                      "type": "string"
                    },
                    "entry_point": {
                      "description": "The name of the function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in ``source_location``.",
                      "type": "string"
                    },
                    "source": {
                      "description": "The location of the function source code.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.Source",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "artifact_storage_source_uri": {
                            "description": "If provided, the input binary artifacts for the build came from this location.",
                            "type": "string"
                          },
                          "file_hashes": {
                            "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build.  The keys to this map are file paths used as build source and the values contain the hash values for those files.  If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.FileHashes",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "file_hash": {
                                    "description": "Required. Collection of file hashes.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "grafeas.grafeas_v1.types.Hash",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "type_": {
                                            "description": "Required. The type of hash that was performed, e.g. \"SHA-256\".",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Required. The hash value.",
                                            "type": "object",
                                            "reference": "bytes"
                                          }
                                        },
                                        "required": [
                                          "type_",
                                          "value"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "file_hash"
                                ]
                              }
                            }
                          },
                          "context": {
                            "description": "If provided, the source code used for the build came from this location.",
                            "type": "object",
                            "reference": "grafeas.grafeas_v1.types.SourceContext",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "cloud_repo": {
                                  "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.CloudRepoSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "repo_id": {
                                        "description": "The ID of the repo.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.RepoId",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "project_repo_id": {
                                              "description": "A combination of a project ID and a repo name.  This field is a member of `oneof`_ ``id``.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.ProjectRepoId",
                                              "resolved_schema": {
                                                "type": "object",
                                                "properties": {
                                                  "project_id": {
                                                    "description": "The ID of the project.",
                                                    "type": "string"
                                                  },
                                                  "repo_name": {
                                                    "description": "The name of the repo. Leave empty for the default repo.",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "uid": {
                                              "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "revision_id": {
                                        "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "string"
                                      },
                                      "alias_context": {
                                        "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.AliasContext",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "description": "The alias kind.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                            },
                                            "name": {
                                              "description": "The alias name.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "gerrit": {
                                  "description": "A SourceContext referring to a Gerrit project.  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.GerritSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "host_uri": {
                                        "description": "The URI of a running Gerrit instance.",
                                        "type": "string"
                                      },
                                      "gerrit_project": {
                                        "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                                        "type": "string"
                                      },
                                      "revision_id": {
                                        "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "string"
                                      },
                                      "alias_context": {
                                        "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.AliasContext",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "description": "The alias kind.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                            },
                                            "name": {
                                              "description": "The alias name.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "git": {
                                  "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.GitSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "url": {
                                        "description": "Git repository URL.",
                                        "type": "string"
                                      },
                                      "revision_id": {
                                        "description": "Git commit hash.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "labels": {
                                  "description": "Labels with user defined metadata.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "additional_contexts": {
                            "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.SourceContext",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "cloud_repo": {
                                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.CloudRepoSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "repo_id": {
                                          "description": "The ID of the repo.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.RepoId",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "project_repo_id": {
                                                "description": "A combination of a project ID and a repo name.  This field is a member of `oneof`_ ``id``.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.ProjectRepoId",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "project_id": {
                                                      "description": "The ID of the project.",
                                                      "type": "string"
                                                    },
                                                    "repo_name": {
                                                      "description": "The name of the repo. Leave empty for the default repo.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "uid": {
                                                "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "revision_id": {
                                          "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "string"
                                        },
                                        "alias_context": {
                                          "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.AliasContext",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "description": "The alias kind.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                              },
                                              "name": {
                                                "description": "The alias name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "gerrit": {
                                    "description": "A SourceContext referring to a Gerrit project.  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.GerritSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "host_uri": {
                                          "description": "The URI of a running Gerrit instance.",
                                          "type": "string"
                                        },
                                        "gerrit_project": {
                                          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                                          "type": "string"
                                        },
                                        "revision_id": {
                                          "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "string"
                                        },
                                        "alias_context": {
                                          "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.AliasContext",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "description": "The alias kind.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                              },
                                              "name": {
                                                "description": "The alias name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "git": {
                                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.GitSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "description": "Git repository URL.",
                                          "type": "string"
                                        },
                                        "revision_id": {
                                          "description": "Git commit hash.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "labels": {
                                    "description": "Labels with user defined metadata.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "source_provenance": {
                      "description": "Output only. A permanent fixed identifier for source.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.SourceProvenance",
                      "output_only": true,
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "resolved_storage_source": {
                            "description": "A copy of the build's ``source.storage_source``, if exists, with any generations resolved.",
                            "type": "object",
                            "reference": "google.cloud.functions_v2.types.StorageSource",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "bucket": {
                                  "description": "Google Cloud Storage bucket containing the source (see `Bucket Name Requirements <https://cloud.google.com/storage/docs/bucket-naming#requirements>`__).",
                                  "type": "string"
                                },
                                "object_": {
                                  "description": "Google Cloud Storage object containing the source.  This object must be a gzipped archive file (``.tar.gz``) containing source to build.",
                                  "type": "string"
                                },
                                "generation": {
                                  "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
                                  "type": "integer"
                                },
                                "source_upload_url": {
                                  "description": "When the specified storage bucket is a 1st gen function uploard url bucket, this field should be set as the generated upload url for 1st gen deployment.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "resolved_repo_source": {
                            "description": "A copy of the build's ``source.repo_source``, if exists, with any revisions resolved.",
                            "type": "object",
                            "reference": "google.cloud.functions_v2.types.RepoSource",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "branch_name": {
                                  "description": "Regex matching branches to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "tag_name": {
                                  "description": "Regex matching tags to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "commit_sha": {
                                  "description": "Explicit commit SHA to build.  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
                                  "type": "string"
                                },
                                "repo_name": {
                                  "description": "Name of the Cloud Source Repository.",
                                  "type": "string"
                                },
                                "dir_": {
                                  "description": "Directory, relative to the source root, in which to run the build.  This must be a relative path. If a step's ``dir`` is specified and is an absolute path, this value is ignored for that step's execution. eg. helloworld (no leading slash allowed)",
                                  "type": "string"
                                },
                                "invert_regex": {
                                  "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "git_uri": {
                            "description": "A copy of the build's ``source.git_uri``, if exists, with any commits resolved.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "worker_pool": {
                      "description": "Name of the Cloud Build Custom Worker Pool that should be used to build the function. The format of this field is ``projects/{project}/locations/{region}/workerPools/{workerPool}`` where {project} and {region} are the project id and region respectively where the worker pool is defined and {workerPool} is the short name of the worker pool.  If the project id is not the same as the function, then the Cloud Functions Service Agent (service-<project_number>@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role Cloud Build Custom Workers Builder (roles/cloudbuild.customworkers.builder) in the project.",
                      "type": "string"
                    },
                    "environment_variables": {
                      "description": "User-provided build-time environment variables for the function",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "docker_registry": {
                      "description": "Docker Registry to use for this deployment. This configuration is only applicable to 1st Gen functions, 2nd Gen functions can only use Artifact Registry.  If unspecified, it defaults to ``ARTIFACT_REGISTRY``. If ``docker_repository`` field is specified, this field should either be left unspecified or set to ``ARTIFACT_REGISTRY``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.BuildConfig.DockerRegistry"
                    },
                    "docker_repository": {
                      "description": "Repository in Artifact Registry to which the function docker image will be pushed after it is built by Cloud Build. If specified by user, it is created and managed by user with a customer managed encryption key. Otherwise, GCF will create and use a repository named 'gcf-artifacts' for every deployed region.  It must match the pattern ``projects/{project}/locations/{location}/repositories/{repository}``.  Cross-project repositories are not supported. Cross-location repositories are not supported. Repository format must be 'DOCKER'.",
                      "type": "string"
                    },
                    "service_account": {
                      "description": "Service account to be used for building the container. The format of this field is ``projects/{projectId}/serviceAccounts/{serviceAccountEmail}``.",
                      "type": "string"
                    }
                  }
                }
              },
              "service_config": {
                "description": "Describes the Service being deployed. Currently deploys services to Cloud Run (fully managed).",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.ServiceConfig",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "description": "Output only. Name of the service associated with a Function. The format of this field is ``projects/{project}/locations/{region}/services/{service}``",
                      "type": "string",
                      "output_only": true
                    },
                    "timeout_seconds": {
                      "description": "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds.",
                      "type": "integer"
                    },
                    "available_memory": {
                      "description": "The amount of memory available for a function. Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is supplied the value is interpreted as bytes. See https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go a full description.",
                      "type": "string"
                    },
                    "available_cpu": {
                      "description": "The number of CPUs used in a single container instance. Default value is calculated from available memory. Supports the same values as Cloud Run, see https://cloud.google.com/run/docs/reference/rest/v1/Container#resourcerequirements Example: \"1\" indicates 1 vCPU",
                      "type": "string"
                    },
                    "environment_variables": {
                      "description": "Environment variables that shall be available during function execution.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "max_instance_count": {
                      "description": "The limit on the maximum number of function instances that may coexist at a given time.  In some cases, such as rapid traffic surges, Cloud Functions may, for a short period of time, create more instances than the specified max instances limit. If your function cannot tolerate this temporary behavior, you may want to factor in a safety margin and set a lower max instances value than your function can tolerate.  See the `Max Instances <https://cloud.google.com/functions/docs/max-instances>`__ Guide for more details.",
                      "type": "integer"
                    },
                    "min_instance_count": {
                      "description": "The limit on the minimum number of function instances that may coexist at a given time.  Function instances are kept in idle state for a short period after they finished executing the request to reduce cold start time for subsequent requests. Setting a minimum instance count will ensure that the given number of instances are kept running in idle state always. This can help with cold start times when jump in incoming request count occurs after the idle instance would have been stopped in the default case.",
                      "type": "integer"
                    },
                    "vpc_connector": {
                      "description": "The Serverless VPC Access connector that this cloud function can connect to. The format of this field is ``projects/*/locations/*/connectors/*``.",
                      "type": "string"
                    },
                    "vpc_connector_egress_settings": {
                      "description": "The egress settings for the connector, controlling what traffic is diverted through it.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.VpcConnectorEgressSettings"
                    },
                    "ingress_settings": {
                      "description": "The ingress settings for the function, controlling what traffic can reach it.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.IngressSettings"
                    },
                    "uri": {
                      "description": "Output only. URI of the Service deployed.",
                      "type": "string",
                      "output_only": true
                    },
                    "service_account_email": {
                      "description": "The email of the service's service account. If empty, defaults to ``{project_number}-compute@developer.gserviceaccount.com``.",
                      "type": "string"
                    },
                    "all_traffic_on_latest_revision": {
                      "description": "Whether 100% of traffic is routed to the latest revision. On CreateFunction and UpdateFunction, when set to true, the revision being deployed will serve 100% of traffic, ignoring any traffic split settings, if any. On GetFunction, true will be returned if the latest revision is serving 100% of traffic.",
                      "type": "boolean"
                    },
                    "secret_environment_variables": {
                      "description": "Secret environment variables configuration.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.SecretEnvVar",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "Name of the environment variable.",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.",
                              "type": "string"
                            },
                            "secret": {
                              "description": "Name of the secret in secret manager (not the full resource name).",
                              "type": "string"
                            },
                            "version": {
                              "description": "Version of the secret (version number or the string 'latest'). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new instances start.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "secret_volumes": {
                      "description": "Secret volumes configuration.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.SecretVolume",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "mount_path": {
                              "description": "The path within the container to mount the secret volume. For example, setting the mount_path as ``/etc/secrets`` would mount the secret value files under the ``/etc/secrets`` directory. This directory will also be completely shadowed and unavailable to mount any other secrets.  Recommended mount paths: /etc/secrets Restricted mount paths: /cloudsql, /dev/log, /pod, /proc, /var/log",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.",
                              "type": "string"
                            },
                            "secret": {
                              "description": "Name of the secret in secret manager (not the full resource name).",
                              "type": "string"
                            },
                            "versions": {
                              "description": "List of secret versions to mount for this secret. If empty, the ``latest`` version of the secret will be made available in a file named after the secret under the mount point.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.functions_v1.types.SecretVolume.SecretVersion",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "description": "Version of the secret (version number or the string 'latest'). It is preferable to use ``latest`` version with secret volumes as secret value changes are reflected immediately.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mount_path as '/etc/secrets' and path as ``/secret_foo`` would mount the secret value file at ``/etc/secrets/secret_foo``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "revision": {
                      "description": "Output only. The name of service revision.",
                      "type": "string",
                      "output_only": true
                    },
                    "max_instance_request_concurrency": {
                      "description": "Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.",
                      "type": "integer"
                    },
                    "security_level": {
                      "description": "Security level configure whether the function only accepts https. This configuration is only applicable to 1st Gen functions with Http trigger. By default https is optional for 1st Gen functions; 2nd Gen functions are https ONLY.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.SecurityLevel"
                    },
                    "binary_authorization_policy": {
                      "description": "Optional. The binary authorization policy to be checked when deploying the Cloud Run service.",
                      "type": "string"
                    }
                  }
                }
              },
              "event_trigger": {
                "description": "An Eventarc trigger managed by Google Cloud Functions that fires events in response to a condition in another service.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.EventTrigger",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "event_type": {
                      "description": "Required. The type of event to observe. For example: ``providers/cloud.storage/eventTypes/object.change`` and ``providers/cloud.pubsub/eventTypes/topic.publish``.  Event types match pattern ``providers/*/eventTypes/*.*``. The pattern contains:  1. namespace: For example, ``cloud.storage`` and ``google.firebase.analytics``. 2. resource type: The type of resource on which event occurs. For example, the Google Cloud Storage API includes the type ``object``. 3. action: The action that generates the event. For example, action for a Google Cloud Storage Object is 'change'. These parts are lower case.",
                      "type": "string"
                    },
                    "resource": {
                      "description": "Required. The resource(s) from which to observe events, for example, ``projects/_/buckets/myBucket``.  Not all syntactically correct values are accepted by all services. For example:  1. The authorization model must support it. Google Cloud Functions only allows EventTriggers to be deployed that observe resources in the same project as the ``CloudFunction``. 2. The resource type must match the pattern expected for an ``event_type``. For example, an ``EventTrigger`` that has an ``event_type`` of \"google.pubsub.topic.publish\" should have a resource that matches Google Cloud Pub/Sub topics.  Additionally, some services may support short names when creating an ``EventTrigger``. These will always be returned in the normalized \"long\" format.  See each *service's* documentation for supported formats.",
                      "type": "string"
                    },
                    "service": {
                      "description": "The hostname of the service that should be observed.  If no string is provided, the default service implementing the API will be used. For example, ``storage.googleapis.com`` is the default for all event types in the ``google.storage`` namespace.",
                      "type": "string"
                    },
                    "failure_policy": {
                      "description": "Specifies policy for failed executions.",
                      "type": "object",
                      "reference": "google.cloud.functions_v1.types.FailurePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "retry": {
                            "description": "If specified, then the function will be retried in case of a failure.  This field is a member of `oneof`_ ``action``.",
                            "type": "object",
                            "reference": "google.cloud.functions_v1.types.FailurePolicy.Retry",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {}
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "event_type",
                    "resource"
                  ]
                }
              },
              "state": {
                "description": "Output only. State of the function.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.Function.State",
                "output_only": true
              },
              "update_time": {
                "description": "Output only. The last update timestamp of a Cloud Function.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                "output_only": true
              },
              "labels": {
                "description": "Labels associated with this Cloud Function.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "state_messages": {
                "description": "Output only. State Messages for this Cloud Function.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.cloud.functions_v2.types.StateMessage",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "severity": {
                        "description": "Severity of the state message.",
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.StateMessage.Severity"
                      },
                      "type_": {
                        "description": "One-word CamelCase type of the state message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message.",
                        "type": "string"
                      }
                    }
                  }
                },
                "output_only": true
              },
              "environment": {
                "description": "Describe whether the function is 1st Gen or 2nd Gen.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.Environment",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Output only. The unique identifier of this agent environment. Supported formats:  -  ``projects/<Project ID>/agent/environments/<Environment ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>``  The environment ID for the default environment is ``-``.",
                      "type": "string",
                      "output_only": true
                    },
                    "description": {
                      "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
                      "type": "string"
                    },
                    "agent_version": {
                      "description": "Optional. The agent version loaded into this environment. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``",
                      "type": "string"
                    },
                    "state": {
                      "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.Environment.State",
                      "output_only": true
                    },
                    "update_time": {
                      "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp",
                      "output_only": true
                    },
                    "text_to_speech_settings": {
                      "description": "Optional. Text to speech settings for this environment.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.TextToSpeechSettings",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "enable_text_to_speech": {
                            "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained.",
                            "type": "boolean"
                          },
                          "output_audio_encoding": {
                            "description": "Required. Audio encoding of the synthesized audio content.",
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.OutputAudioEncoding"
                          },
                          "sample_rate_hertz": {
                            "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                            "type": "integer"
                          },
                          "synthesize_speech_configs": {
                            "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.SynthesizeSpeechConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "speaking_rate": {
                                    "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                                    "type": "number"
                                  },
                                  "pitch": {
                                    "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                                    "type": "number"
                                  },
                                  "volume_gain_db": {
                                    "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                                    "type": "number"
                                  },
                                  "effects_profile_id": {
                                    "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "voice": {
                                    "description": "Optional. The desired voice of the synthesized audio.",
                                    "type": "object",
                                    "reference": "google.cloud.dialogflow_v2.types.VoiceSelectionParams",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [ssml_gender][google.cloud.dialogflow.v2.VoiceSelectionParams.ssml_gender].",
                                          "type": "string"
                                        },
                                        "ssml_gender": {
                                          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [name][google.cloud.dialogflow.v2.VoiceSelectionParams.name]. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
                                          "type": "object",
                                          "reference": "google.cloud.dialogflow_v2.types.SsmlVoiceGender"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "output_audio_encoding"
                        ]
                      }
                    },
                    "fulfillment": {
                      "description": "Optional. The fulfillment settings to use for this environment.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.Fulfillment",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Required. The unique identifier of the fulfillment. Supported formats:  -  ``projects/<Project ID>/agent/fulfillment`` -  ``projects/<Project ID>/locations/<Location ID>/agent/fulfillment``  This field is not used for Fulfillment in an Environment.",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Optional. The human-readable name of the fulfillment, unique within the agent.  This field is not used for Fulfillment in an Environment.",
                            "type": "string"
                          },
                          "generic_web_service": {
                            "description": "Configuration for a generic web service.  This field is a member of `oneof`_ ``fulfillment``.",
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.Fulfillment.GenericWebService",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "uri": {
                                  "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Optional. The user name for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Optional. The password for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "request_headers": {
                                  "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "is_cloud_function": {
                                  "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "uri"
                              ]
                            }
                          },
                          "enabled": {
                            "description": "Optional. Whether fulfillment is enabled.",
                            "type": "boolean"
                          },
                          "features": {
                            "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "type_": {
                                    "description": "The type of the feature that enabled for fulfillment.",
                                    "type": "object",
                                    "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature.Type"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "url": {
                "description": "Output only. The deployed url for the function.",
                "type": "string",
                "output_only": true
              },
              "kms_key_name": {
                "description": "[Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.  It must match the pattern ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``.",
                "type": "string"
              },
              "satisfies_pzs": {
                "description": "Output only. Reserved for future use.",
                "type": "boolean",
                "output_only": true
              },
              "create_time": {
                "description": "Output only. The create timestamp of a Cloud Function. This is only applicable to 2nd Gen functions.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                "output_only": true
              }
            }
          }
        },
        "function_id": {
          "description": "The ID to use for the function, which will become the final component of the function's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/.",
          "type": "string"
        }
      },
      "required": [
        "parent",
        "function"
      ]
    }
  },
  {
    "type": "function",
    "name": "update_function",
    "description": "Updates existing function.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_update_function():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        function = functions_v1.CloudFunction()\n        function.source_archive_url = \"source_archive_url_value\"\n\n        request = functions_v1.UpdateFunctionRequest(\n            function=function,\n        )\n\n        # Make the request\n        operation = client.update_function(request=request)\n\n        print(\"Waiting for operation to comp",
    "parameters": {
      "type": "object",
      "properties": {
        "function": {
          "description": "Required. New version of the function.",
          "reference": "google.cloud.functions_v2.types.Function",
          "resolved_schema": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A user-defined name of the function. Function names must be unique globally and match pattern ``projects/*/locations/*/functions/*``",
                "type": "string"
              },
              "description": {
                "description": "User-provided description of a function.",
                "type": "string"
              },
              "build_config": {
                "description": "Describes the Build step of the function that builds a container from the given source.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.BuildConfig",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "automatic_update_policy": {
                      "description": "This field is a member of `oneof`_ ``runtime_update_policy``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.AutomaticUpdatePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "on_deploy_update_policy": {
                      "description": "This field is a member of `oneof`_ ``runtime_update_policy``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.OnDeployUpdatePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "runtime_version": {
                            "description": "Output only. Contains the runtime version which was used during latest function deployment.",
                            "type": "string",
                            "output_only": true
                          }
                        }
                      }
                    },
                    "build": {
                      "description": "Output only. The Cloud Build name of the latest successful deployment of the function.",
                      "type": "string",
                      "output_only": true
                    },
                    "runtime": {
                      "description": "The runtime in which to run the function. Required when deploying a new function, optional when updating an existing function. For a complete list of possible choices, see the ```gcloud`` command reference <https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime>`__.",
                      "type": "string"
                    },
                    "entry_point": {
                      "description": "The name of the function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in ``source_location``.",
                      "type": "string"
                    },
                    "source": {
                      "description": "The location of the function source code.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.Source",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "artifact_storage_source_uri": {
                            "description": "If provided, the input binary artifacts for the build came from this location.",
                            "type": "string"
                          },
                          "file_hashes": {
                            "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build.  The keys to this map are file paths used as build source and the values contain the hash values for those files.  If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.FileHashes",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "file_hash": {
                                    "description": "Required. Collection of file hashes.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "grafeas.grafeas_v1.types.Hash",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "type_": {
                                            "description": "Required. The type of hash that was performed, e.g. \"SHA-256\".",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Required. The hash value.",
                                            "type": "object",
                                            "reference": "bytes"
                                          }
                                        },
                                        "required": [
                                          "type_",
                                          "value"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "file_hash"
                                ]
                              }
                            }
                          },
                          "context": {
                            "description": "If provided, the source code used for the build came from this location.",
                            "type": "object",
                            "reference": "grafeas.grafeas_v1.types.SourceContext",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "cloud_repo": {
                                  "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.CloudRepoSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "repo_id": {
                                        "description": "The ID of the repo.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.RepoId",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "project_repo_id": {
                                              "description": "A combination of a project ID and a repo name.  This field is a member of `oneof`_ ``id``.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.ProjectRepoId",
                                              "resolved_schema": {
                                                "type": "object",
                                                "properties": {
                                                  "project_id": {
                                                    "description": "The ID of the project.",
                                                    "type": "string"
                                                  },
                                                  "repo_name": {
                                                    "description": "The name of the repo. Leave empty for the default repo.",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "uid": {
                                              "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "revision_id": {
                                        "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "string"
                                      },
                                      "alias_context": {
                                        "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.AliasContext",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "description": "The alias kind.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                            },
                                            "name": {
                                              "description": "The alias name.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "gerrit": {
                                  "description": "A SourceContext referring to a Gerrit project.  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.GerritSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "host_uri": {
                                        "description": "The URI of a running Gerrit instance.",
                                        "type": "string"
                                      },
                                      "gerrit_project": {
                                        "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                                        "type": "string"
                                      },
                                      "revision_id": {
                                        "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "string"
                                      },
                                      "alias_context": {
                                        "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                        "type": "object",
                                        "reference": "grafeas.grafeas_v1.types.AliasContext",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "description": "The alias kind.",
                                              "type": "object",
                                              "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                            },
                                            "name": {
                                              "description": "The alias name.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "git": {
                                  "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).  This field is a member of `oneof`_ ``context``.",
                                  "type": "object",
                                  "reference": "grafeas.grafeas_v1.types.GitSourceContext",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "url": {
                                        "description": "Git repository URL.",
                                        "type": "string"
                                      },
                                      "revision_id": {
                                        "description": "Git commit hash.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "labels": {
                                  "description": "Labels with user defined metadata.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "additional_contexts": {
                            "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.SourceContext",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "cloud_repo": {
                                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.CloudRepoSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "repo_id": {
                                          "description": "The ID of the repo.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.RepoId",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "project_repo_id": {
                                                "description": "A combination of a project ID and a repo name.  This field is a member of `oneof`_ ``id``.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.ProjectRepoId",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "project_id": {
                                                      "description": "The ID of the project.",
                                                      "type": "string"
                                                    },
                                                    "repo_name": {
                                                      "description": "The name of the repo. Leave empty for the default repo.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "uid": {
                                                "description": "A server-assigned, globally unique identifier.  This field is a member of `oneof`_ ``id``.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "revision_id": {
                                          "description": "A revision ID.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "string"
                                        },
                                        "alias_context": {
                                          "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.AliasContext",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "description": "The alias kind.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                              },
                                              "name": {
                                                "description": "The alias name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "gerrit": {
                                    "description": "A SourceContext referring to a Gerrit project.  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.GerritSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "host_uri": {
                                          "description": "The URI of a running Gerrit instance.",
                                          "type": "string"
                                        },
                                        "gerrit_project": {
                                          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
                                          "type": "string"
                                        },
                                        "revision_id": {
                                          "description": "A revision (commit) ID.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "string"
                                        },
                                        "alias_context": {
                                          "description": "An alias, which may be a branch or tag.  This field is a member of `oneof`_ ``revision``.",
                                          "type": "object",
                                          "reference": "grafeas.grafeas_v1.types.AliasContext",
                                          "resolved_schema": {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "description": "The alias kind.",
                                                "type": "object",
                                                "reference": "grafeas.grafeas_v1.types.AliasContext.Kind"
                                              },
                                              "name": {
                                                "description": "The alias name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "git": {
                                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).  This field is a member of `oneof`_ ``context``.",
                                    "type": "object",
                                    "reference": "grafeas.grafeas_v1.types.GitSourceContext",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "description": "Git repository URL.",
                                          "type": "string"
                                        },
                                        "revision_id": {
                                          "description": "Git commit hash.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "labels": {
                                    "description": "Labels with user defined metadata.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "source_provenance": {
                      "description": "Output only. A permanent fixed identifier for source.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.SourceProvenance",
                      "output_only": true,
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "resolved_storage_source": {
                            "description": "A copy of the build's ``source.storage_source``, if exists, with any generations resolved.",
                            "type": "object",
                            "reference": "google.cloud.functions_v2.types.StorageSource",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "bucket": {
                                  "description": "Google Cloud Storage bucket containing the source (see `Bucket Name Requirements <https://cloud.google.com/storage/docs/bucket-naming#requirements>`__).",
                                  "type": "string"
                                },
                                "object_": {
                                  "description": "Google Cloud Storage object containing the source.  This object must be a gzipped archive file (``.tar.gz``) containing source to build.",
                                  "type": "string"
                                },
                                "generation": {
                                  "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
                                  "type": "integer"
                                },
                                "source_upload_url": {
                                  "description": "When the specified storage bucket is a 1st gen function uploard url bucket, this field should be set as the generated upload url for 1st gen deployment.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "resolved_repo_source": {
                            "description": "A copy of the build's ``source.repo_source``, if exists, with any revisions resolved.",
                            "type": "object",
                            "reference": "google.cloud.functions_v2.types.RepoSource",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "branch_name": {
                                  "description": "Regex matching branches to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "tag_name": {
                                  "description": "Regex matching tags to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "commit_sha": {
                                  "description": "Explicit commit SHA to build.  This field is a member of `oneof`_ ``revision``.",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
                                  "type": "string"
                                },
                                "repo_name": {
                                  "description": "Name of the Cloud Source Repository.",
                                  "type": "string"
                                },
                                "dir_": {
                                  "description": "Directory, relative to the source root, in which to run the build.  This must be a relative path. If a step's ``dir`` is specified and is an absolute path, this value is ignored for that step's execution. eg. helloworld (no leading slash allowed)",
                                  "type": "string"
                                },
                                "invert_regex": {
                                  "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "git_uri": {
                            "description": "A copy of the build's ``source.git_uri``, if exists, with any commits resolved.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "worker_pool": {
                      "description": "Name of the Cloud Build Custom Worker Pool that should be used to build the function. The format of this field is ``projects/{project}/locations/{region}/workerPools/{workerPool}`` where {project} and {region} are the project id and region respectively where the worker pool is defined and {workerPool} is the short name of the worker pool.  If the project id is not the same as the function, then the Cloud Functions Service Agent (service-<project_number>@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role Cloud Build Custom Workers Builder (roles/cloudbuild.customworkers.builder) in the project.",
                      "type": "string"
                    },
                    "environment_variables": {
                      "description": "User-provided build-time environment variables for the function",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "docker_registry": {
                      "description": "Docker Registry to use for this deployment. This configuration is only applicable to 1st Gen functions, 2nd Gen functions can only use Artifact Registry.  If unspecified, it defaults to ``ARTIFACT_REGISTRY``. If ``docker_repository`` field is specified, this field should either be left unspecified or set to ``ARTIFACT_REGISTRY``.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.BuildConfig.DockerRegistry"
                    },
                    "docker_repository": {
                      "description": "Repository in Artifact Registry to which the function docker image will be pushed after it is built by Cloud Build. If specified by user, it is created and managed by user with a customer managed encryption key. Otherwise, GCF will create and use a repository named 'gcf-artifacts' for every deployed region.  It must match the pattern ``projects/{project}/locations/{location}/repositories/{repository}``.  Cross-project repositories are not supported. Cross-location repositories are not supported. Repository format must be 'DOCKER'.",
                      "type": "string"
                    },
                    "service_account": {
                      "description": "Service account to be used for building the container. The format of this field is ``projects/{projectId}/serviceAccounts/{serviceAccountEmail}``.",
                      "type": "string"
                    }
                  }
                }
              },
              "service_config": {
                "description": "Describes the Service being deployed. Currently deploys services to Cloud Run (fully managed).",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.ServiceConfig",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "description": "Output only. Name of the service associated with a Function. The format of this field is ``projects/{project}/locations/{region}/services/{service}``",
                      "type": "string",
                      "output_only": true
                    },
                    "timeout_seconds": {
                      "description": "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds.",
                      "type": "integer"
                    },
                    "available_memory": {
                      "description": "The amount of memory available for a function. Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is supplied the value is interpreted as bytes. See https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go a full description.",
                      "type": "string"
                    },
                    "available_cpu": {
                      "description": "The number of CPUs used in a single container instance. Default value is calculated from available memory. Supports the same values as Cloud Run, see https://cloud.google.com/run/docs/reference/rest/v1/Container#resourcerequirements Example: \"1\" indicates 1 vCPU",
                      "type": "string"
                    },
                    "environment_variables": {
                      "description": "Environment variables that shall be available during function execution.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "max_instance_count": {
                      "description": "The limit on the maximum number of function instances that may coexist at a given time.  In some cases, such as rapid traffic surges, Cloud Functions may, for a short period of time, create more instances than the specified max instances limit. If your function cannot tolerate this temporary behavior, you may want to factor in a safety margin and set a lower max instances value than your function can tolerate.  See the `Max Instances <https://cloud.google.com/functions/docs/max-instances>`__ Guide for more details.",
                      "type": "integer"
                    },
                    "min_instance_count": {
                      "description": "The limit on the minimum number of function instances that may coexist at a given time.  Function instances are kept in idle state for a short period after they finished executing the request to reduce cold start time for subsequent requests. Setting a minimum instance count will ensure that the given number of instances are kept running in idle state always. This can help with cold start times when jump in incoming request count occurs after the idle instance would have been stopped in the default case.",
                      "type": "integer"
                    },
                    "vpc_connector": {
                      "description": "The Serverless VPC Access connector that this cloud function can connect to. The format of this field is ``projects/*/locations/*/connectors/*``.",
                      "type": "string"
                    },
                    "vpc_connector_egress_settings": {
                      "description": "The egress settings for the connector, controlling what traffic is diverted through it.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.VpcConnectorEgressSettings"
                    },
                    "ingress_settings": {
                      "description": "The ingress settings for the function, controlling what traffic can reach it.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.IngressSettings"
                    },
                    "uri": {
                      "description": "Output only. URI of the Service deployed.",
                      "type": "string",
                      "output_only": true
                    },
                    "service_account_email": {
                      "description": "The email of the service's service account. If empty, defaults to ``{project_number}-compute@developer.gserviceaccount.com``.",
                      "type": "string"
                    },
                    "all_traffic_on_latest_revision": {
                      "description": "Whether 100% of traffic is routed to the latest revision. On CreateFunction and UpdateFunction, when set to true, the revision being deployed will serve 100% of traffic, ignoring any traffic split settings, if any. On GetFunction, true will be returned if the latest revision is serving 100% of traffic.",
                      "type": "boolean"
                    },
                    "secret_environment_variables": {
                      "description": "Secret environment variables configuration.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.SecretEnvVar",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "Name of the environment variable.",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.",
                              "type": "string"
                            },
                            "secret": {
                              "description": "Name of the secret in secret manager (not the full resource name).",
                              "type": "string"
                            },
                            "version": {
                              "description": "Version of the secret (version number or the string 'latest'). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new instances start.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "secret_volumes": {
                      "description": "Secret volumes configuration.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.SecretVolume",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "mount_path": {
                              "description": "The path within the container to mount the secret volume. For example, setting the mount_path as ``/etc/secrets`` would mount the secret value files under the ``/etc/secrets`` directory. This directory will also be completely shadowed and unavailable to mount any other secrets.  Recommended mount paths: /etc/secrets Restricted mount paths: /cloudsql, /dev/log, /pod, /proc, /var/log",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.",
                              "type": "string"
                            },
                            "secret": {
                              "description": "Name of the secret in secret manager (not the full resource name).",
                              "type": "string"
                            },
                            "versions": {
                              "description": "List of secret versions to mount for this secret. If empty, the ``latest`` version of the secret will be made available in a file named after the secret under the mount point.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.functions_v1.types.SecretVolume.SecretVersion",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "description": "Version of the secret (version number or the string 'latest'). It is preferable to use ``latest`` version with secret volumes as secret value changes are reflected immediately.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mount_path as '/etc/secrets' and path as ``/secret_foo`` would mount the secret value file at ``/etc/secrets/secret_foo``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "revision": {
                      "description": "Output only. The name of service revision.",
                      "type": "string",
                      "output_only": true
                    },
                    "max_instance_request_concurrency": {
                      "description": "Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.",
                      "type": "integer"
                    },
                    "security_level": {
                      "description": "Security level configure whether the function only accepts https. This configuration is only applicable to 1st Gen functions with Http trigger. By default https is optional for 1st Gen functions; 2nd Gen functions are https ONLY.",
                      "type": "object",
                      "reference": "google.cloud.functions_v2.types.ServiceConfig.SecurityLevel"
                    },
                    "binary_authorization_policy": {
                      "description": "Optional. The binary authorization policy to be checked when deploying the Cloud Run service.",
                      "type": "string"
                    }
                  }
                }
              },
              "event_trigger": {
                "description": "An Eventarc trigger managed by Google Cloud Functions that fires events in response to a condition in another service.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.EventTrigger",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "event_type": {
                      "description": "Required. The type of event to observe. For example: ``providers/cloud.storage/eventTypes/object.change`` and ``providers/cloud.pubsub/eventTypes/topic.publish``.  Event types match pattern ``providers/*/eventTypes/*.*``. The pattern contains:  1. namespace: For example, ``cloud.storage`` and ``google.firebase.analytics``. 2. resource type: The type of resource on which event occurs. For example, the Google Cloud Storage API includes the type ``object``. 3. action: The action that generates the event. For example, action for a Google Cloud Storage Object is 'change'. These parts are lower case.",
                      "type": "string"
                    },
                    "resource": {
                      "description": "Required. The resource(s) from which to observe events, for example, ``projects/_/buckets/myBucket``.  Not all syntactically correct values are accepted by all services. For example:  1. The authorization model must support it. Google Cloud Functions only allows EventTriggers to be deployed that observe resources in the same project as the ``CloudFunction``. 2. The resource type must match the pattern expected for an ``event_type``. For example, an ``EventTrigger`` that has an ``event_type`` of \"google.pubsub.topic.publish\" should have a resource that matches Google Cloud Pub/Sub topics.  Additionally, some services may support short names when creating an ``EventTrigger``. These will always be returned in the normalized \"long\" format.  See each *service's* documentation for supported formats.",
                      "type": "string"
                    },
                    "service": {
                      "description": "The hostname of the service that should be observed.  If no string is provided, the default service implementing the API will be used. For example, ``storage.googleapis.com`` is the default for all event types in the ``google.storage`` namespace.",
                      "type": "string"
                    },
                    "failure_policy": {
                      "description": "Specifies policy for failed executions.",
                      "type": "object",
                      "reference": "google.cloud.functions_v1.types.FailurePolicy",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "retry": {
                            "description": "If specified, then the function will be retried in case of a failure.  This field is a member of `oneof`_ ``action``.",
                            "type": "object",
                            "reference": "google.cloud.functions_v1.types.FailurePolicy.Retry",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {}
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "event_type",
                    "resource"
                  ]
                }
              },
              "state": {
                "description": "Output only. State of the function.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.Function.State",
                "output_only": true
              },
              "update_time": {
                "description": "Output only. The last update timestamp of a Cloud Function.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                "output_only": true
              },
              "labels": {
                "description": "Labels associated with this Cloud Function.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "state_messages": {
                "description": "Output only. State Messages for this Cloud Function.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.cloud.functions_v2.types.StateMessage",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "severity": {
                        "description": "Severity of the state message.",
                        "type": "object",
                        "reference": "google.cloud.functions_v2.types.StateMessage.Severity"
                      },
                      "type_": {
                        "description": "One-word CamelCase type of the state message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message.",
                        "type": "string"
                      }
                    }
                  }
                },
                "output_only": true
              },
              "environment": {
                "description": "Describe whether the function is 1st Gen or 2nd Gen.",
                "type": "object",
                "reference": "google.cloud.functions_v2.types.Environment",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Output only. The unique identifier of this agent environment. Supported formats:  -  ``projects/<Project ID>/agent/environments/<Environment ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>``  The environment ID for the default environment is ``-``.",
                      "type": "string",
                      "output_only": true
                    },
                    "description": {
                      "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
                      "type": "string"
                    },
                    "agent_version": {
                      "description": "Optional. The agent version loaded into this environment. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``",
                      "type": "string"
                    },
                    "state": {
                      "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.Environment.State",
                      "output_only": true
                    },
                    "update_time": {
                      "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                      "type": "object",
                      "reference": "google.protobuf.timestamp_pb2.Timestamp",
                      "output_only": true
                    },
                    "text_to_speech_settings": {
                      "description": "Optional. Text to speech settings for this environment.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.TextToSpeechSettings",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "enable_text_to_speech": {
                            "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained.",
                            "type": "boolean"
                          },
                          "output_audio_encoding": {
                            "description": "Required. Audio encoding of the synthesized audio content.",
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.OutputAudioEncoding"
                          },
                          "sample_rate_hertz": {
                            "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                            "type": "integer"
                          },
                          "synthesize_speech_configs": {
                            "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.SynthesizeSpeechConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "speaking_rate": {
                                    "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                                    "type": "number"
                                  },
                                  "pitch": {
                                    "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                                    "type": "number"
                                  },
                                  "volume_gain_db": {
                                    "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                                    "type": "number"
                                  },
                                  "effects_profile_id": {
                                    "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "voice": {
                                    "description": "Optional. The desired voice of the synthesized audio.",
                                    "type": "object",
                                    "reference": "google.cloud.dialogflow_v2.types.VoiceSelectionParams",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [ssml_gender][google.cloud.dialogflow.v2.VoiceSelectionParams.ssml_gender].",
                                          "type": "string"
                                        },
                                        "ssml_gender": {
                                          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [name][google.cloud.dialogflow.v2.VoiceSelectionParams.name]. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
                                          "type": "object",
                                          "reference": "google.cloud.dialogflow_v2.types.SsmlVoiceGender"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "output_audio_encoding"
                        ]
                      }
                    },
                    "fulfillment": {
                      "description": "Optional. The fulfillment settings to use for this environment.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.Fulfillment",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Required. The unique identifier of the fulfillment. Supported formats:  -  ``projects/<Project ID>/agent/fulfillment`` -  ``projects/<Project ID>/locations/<Location ID>/agent/fulfillment``  This field is not used for Fulfillment in an Environment.",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Optional. The human-readable name of the fulfillment, unique within the agent.  This field is not used for Fulfillment in an Environment.",
                            "type": "string"
                          },
                          "generic_web_service": {
                            "description": "Configuration for a generic web service.  This field is a member of `oneof`_ ``fulfillment``.",
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.Fulfillment.GenericWebService",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "uri": {
                                  "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Optional. The user name for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Optional. The password for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "request_headers": {
                                  "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "is_cloud_function": {
                                  "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "uri"
                              ]
                            }
                          },
                          "enabled": {
                            "description": "Optional. Whether fulfillment is enabled.",
                            "type": "boolean"
                          },
                          "features": {
                            "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "type_": {
                                    "description": "The type of the feature that enabled for fulfillment.",
                                    "type": "object",
                                    "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature.Type"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "url": {
                "description": "Output only. The deployed url for the function.",
                "type": "string",
                "output_only": true
              },
              "kms_key_name": {
                "description": "[Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.  It must match the pattern ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``.",
                "type": "string"
              },
              "satisfies_pzs": {
                "description": "Output only. Reserved for future use.",
                "type": "boolean",
                "output_only": true
              },
              "create_time": {
                "description": "Output only. The create timestamp of a Cloud Function. This is only applicable to 2nd Gen functions.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                "output_only": true
              }
            }
          }
        },
        "update_mask": {
          "description": "The list of fields to be updated. If no field mask is provided, all fields will be updated.",
          "type": "object",
          "reference": "google.protobuf.field_mask_pb2.FieldMask"
        }
      },
      "required": [
        "function"
      ]
    }
  },
  {
    "type": "function",
    "name": "delete_function",
    "description": "Deletes a function with the given name from the\nspecified project. If the given function is used by some\ntrigger, the trigger will be updated to remove this\nfunction.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_delete_function():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v1.DeleteFunctionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_function(request=request)\n\n        print(\"Wai",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the function which should be deleted.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "type": "function",
    "name": "generate_upload_url",
    "description": "Returns a signed URL for uploading a function source code. For\nmore information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls.\nOnce the function source code upload is complete, the used\nsigned URL should be provided in CreateFunction or\nUpdateFunction request as a reference to the function source\ncode.\n\nWhen uploading source code to the generated signed URL, please\nfollow these restrictions:\n\n-  Source file type should be a zip file.\n-  Source file size should not exceed 100MB limit.\n-  No credentials should be attached - the signed URLs provide\n   access to the target bucket using internal service identity;\n   if credentials were attached, the identity from the\n   credentials would be used, but that identity does not have\n   permissions to upload files to the URL.\n\nWhen making a HTTP PUT request, these two headers need to be\nspecified:\n\n-  ``content-type: application/zip``\n-  ``x-goog-content-length-range: 0,104857600``\n\nAnd this header SHOULD NOT be specifi",
    "parameters": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The project and location in which the Google Cloud Storage signed URL should be generated, specified in the format ``projects/*/locations/*``.",
          "type": "string"
        },
        "kms_key_name": {
          "description": "[Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function source code objects in intermediate Cloud Storage buckets. When you generate an upload url and upload your source code, it gets copied to an intermediate Cloud Storage bucket. The source code is then copied to a versioned directory in the sources bucket in the consumer project during the function deployment.  It must match the pattern ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``.  The Google Cloud Functions service account (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the Key/KeyRing/Project/Organization (least access preferred).",
          "type": "string"
        },
        "environment": {
          "description": "The function environment the generated upload url will be used for. The upload url for 2nd Gen functions can also be used for 1st gen functions, but not vice versa. If not specified, 2nd generation-style upload URLs are generated.",
          "reference": "google.cloud.functions_v2.types.Environment",
          "resolved_schema": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The unique identifier of this agent environment. Supported formats:  -  ``projects/<Project ID>/agent/environments/<Environment ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>``  The environment ID for the default environment is ``-``.",
                "type": "string",
                "output_only": true
              },
              "description": {
                "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
                "type": "string"
              },
              "agent_version": {
                "description": "Optional. The agent version loaded into this environment. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``",
                "type": "string"
              },
              "state": {
                "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                "type": "object",
                "reference": "google.cloud.dialogflow_v2.types.Environment.State",
                "output_only": true
              },
              "update_time": {
                "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                "output_only": true
              },
              "text_to_speech_settings": {
                "description": "Optional. Text to speech settings for this environment.",
                "type": "object",
                "reference": "google.cloud.dialogflow_v2.types.TextToSpeechSettings",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "enable_text_to_speech": {
                      "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained.",
                      "type": "boolean"
                    },
                    "output_audio_encoding": {
                      "description": "Required. Audio encoding of the synthesized audio content.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.OutputAudioEncoding"
                    },
                    "sample_rate_hertz": {
                      "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                      "type": "integer"
                    },
                    "synthesize_speech_configs": {
                      "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.SynthesizeSpeechConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "speaking_rate": {
                              "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                              "type": "number"
                            },
                            "pitch": {
                              "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                              "type": "number"
                            },
                            "volume_gain_db": {
                              "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                              "type": "number"
                            },
                            "effects_profile_id": {
                              "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "voice": {
                              "description": "Optional. The desired voice of the synthesized audio.",
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.VoiceSelectionParams",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [ssml_gender][google.cloud.dialogflow.v2.VoiceSelectionParams.ssml_gender].",
                                    "type": "string"
                                  },
                                  "ssml_gender": {
                                    "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [name][google.cloud.dialogflow.v2.VoiceSelectionParams.name]. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
                                    "type": "object",
                                    "reference": "google.cloud.dialogflow_v2.types.SsmlVoiceGender"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "output_audio_encoding"
                  ]
                }
              },
              "fulfillment": {
                "description": "Optional. The fulfillment settings to use for this environment.",
                "type": "object",
                "reference": "google.cloud.dialogflow_v2.types.Fulfillment",
                "resolved_schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Required. The unique identifier of the fulfillment. Supported formats:  -  ``projects/<Project ID>/agent/fulfillment`` -  ``projects/<Project ID>/locations/<Location ID>/agent/fulfillment``  This field is not used for Fulfillment in an Environment.",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Optional. The human-readable name of the fulfillment, unique within the agent.  This field is not used for Fulfillment in an Environment.",
                      "type": "string"
                    },
                    "generic_web_service": {
                      "description": "Configuration for a generic web service.  This field is a member of `oneof`_ ``fulfillment``.",
                      "type": "object",
                      "reference": "google.cloud.dialogflow_v2.types.Fulfillment.GenericWebService",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                            "type": "string"
                          },
                          "username": {
                            "description": "Optional. The user name for HTTP Basic authentication.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Optional. The password for HTTP Basic authentication.",
                            "type": "string"
                          },
                          "request_headers": {
                            "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "is_cloud_function": {
                            "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "uri"
                        ]
                      }
                    },
                    "enabled": {
                      "description": "Optional. Whether fulfillment is enabled.",
                      "type": "boolean"
                    },
                    "features": {
                      "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "type_": {
                              "description": "The type of the feature that enabled for fulfillment.",
                              "type": "object",
                              "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature.Type"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "required": [
        "parent"
      ]
    }
  },
  {
    "type": "function",
    "name": "generate_download_url",
    "description": "Returns a signed URL for downloading deployed\nfunction source code. The URL is only valid for a\nlimited period and should be used within minutes after\ngeneration.\nFor more information about the signed URL usage see:\n\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v1\n\n    async def sample_generate_download_url():\n        # Create a client\n        client = functions_v1.CloudFunctionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v1.GenerateDownloadUrlRequest(\n        )\n\n        # M",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of function for which source code Google Cloud Storage signed URL should be generated.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    }
  }
]