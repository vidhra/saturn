{
  "FunctionService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_function",
          "description": "Returns a function with the given name from the\nrequested project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_get_function():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.GetFunctionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_function(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.functions_v2.types.GetFunc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the function which details should be obtained.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.functions_v2.types.Function: Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetFunctionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_functions",
          "description": "Returns a list of functions that belong to the\nrequested project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_list_functions():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.ListFunctionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_functions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the function should be listed, specified in the format ``projects/*/locations/*`` If you want to list functions in all locations, use \"-\" in place of a location. When listing functions in all locations, if one or more location(s) are unreachable, the response will contain functions from all reachable locations along with the names of any unreachable locations.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.functions_v2.services.function_service.pagers.ListFunctionsAsyncPager: Response for the ListFunctions method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ListFunctionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_function",
          "description": "Creates a new function. If a function with the given name\nalready exists in the specified project, the long running\noperation will return ``ALREADY_EXISTS`` error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_create_function():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.CreateFunctionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_function(request=request)\n\n        print(\"Waiting ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location in which the function should be created, specified in the format ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "function": {
                "type": "google.cloud.functions_v2.types.Function",
                "description": "Required. Function to be created. This corresponds to the ``function`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "function_id": {
                "type": "str",
                "description": "The ID to use for the function, which will become the final component of the function's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/.  This corresponds to the ``function_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.functions_v2.types.Function` Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "function",
              "function_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "CreateFunctionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_function",
          "description": "Updates existing function.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_update_function():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.UpdateFunctionRequest(\n        )\n\n        # Make the request\n        operation = client.update_function(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "function": {
                "type": "google.cloud.functions_v2.types.Function",
                "description": "Required. New version of the function.  This corresponds to the ``function`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If no field mask is provided, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.functions_v2.types.Function` Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "function",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "UpdateFunctionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_function",
          "description": "Deletes a function with the given name from the\nspecified project. If the given function is used by some\ntrigger, the trigger will be updated to remove this\nfunction.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_delete_function():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.DeleteFunctionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_function(request=request)\n\n        print(\"Waiting f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the function which should be deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "DeleteFunctionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_upload_url",
          "description": "Returns a signed URL for uploading a function source code. For\nmore information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls.\nOnce the function source code upload is complete, the used\nsigned URL should be provided in CreateFunction or\nUpdateFunction request as a reference to the function source\ncode.\n\nWhen uploading source code to the generated signed URL, please\nfollow these restrictions:\n\n-  Source file type should be a zip file.\n-  No credentials should be attached - the signed URLs provide\n   access to the target bucket using internal service identity;\n   if credentials were attached, the identity from the\n   credentials would be used, but that identity does not have\n   permissions to upload files to the URL.\n\nWhen making a HTTP PUT request, specify this header:\n\n-  ``content-type: application/zip``\n\nDo not specify this header:\n\n-  ``Authorization: Bearer YOUR_TOKEN``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and shoul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GenerateUploadUrlRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_download_url",
          "description": "Returns a signed URL for downloading deployed\nfunction source code. The URL is only valid for a\nlimited period and should be used within 30 minutes of\ngeneration.\nFor more information about the signed URL usage see:\n\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_generate_download_url():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.GenerateDownloadUrlRequest(\n            name=\"name_value",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GenerateDownloadUrlRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_runtimes",
          "description": "Returns a list of runtimes that are supported for the\nrequested project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import functions_v2\n\n    async def sample_list_runtimes():\n        # Create a client\n        client = functions_v2.FunctionServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = functions_v2.ListRuntimesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.list_runtimes(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.functions_v2.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which the runtimes should be listed, specified in the format ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.functions_v2.types.ListRuntimesResponse: Response for the ListRuntimes method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ListRuntimesRequest"
          ]
        }
      }
    ]
  }
}